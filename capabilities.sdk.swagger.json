{
    "swagger": "2.0",
    "info": {
        "version": "v2.1",
        "title": "DocuSign REST API",
        "description": "The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.",
        "termsOfService": "https://www.docusign.com/company/terms-and-conditions/web",
        "contact": {
            "name": "DocuSign Developer Center",
            "url": "https://developers.docusign.com/",
            "email": "devcenter@docusign.com"
        }
    },
    "host": "www.docusign.net",
    "basePath": "/restapi",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json",
        "application/xml"
    ],
    "produces": [
        "application/json"
    ],
    "externalDocs": {
        "description": "See the DocuSign REST API Guide for more information.",
        "url": "https://docs.docusign.com/esign"
    },
    "paths": {
        "/service_information": {
            "get": {
                "tags": [
                    "Diagnostics"
                ],
                "summary": "Retrieves the available REST API versions.",
                "description": "Retrieves the available REST API versions.\n\nDocuSign Production system: https://www.docusign.net/restapi/service_information\nDocuSign Demo system: https://demo.docusign.net/restapi/service_information\n\nYou do not need an integrator key to view the REST API versions and resources.",
                "operationId": "ServiceInformation_GetServiceInformation",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/serviceInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getService"
            },
            "parameters": []
        },
        "/v2.1": {
            "get": {
                "tags": [
                    "Diagnostics"
                ],
                "summary": "Lists resources for REST version specified",
                "description": "Retrieves the base resources available for the DocuSign REST APIs.\n\nYou do not need an integrator key to view the REST API versions and resources.\n\nExample: https://demo.docusign.net/restapi/v2 lists all of the base resources available in version 2 of the REST API on the DocuSign Demo system.\n\nTo view descriptions and samples of the service operations for all versions, remove the version number and add /help to the URL.\n\nExample: https://demo.docusign.net/restapi/help lists the REST API operations on the DocuSign Demo system with XML and JSON request and response samples.",
                "operationId": "ServiceInformation_GetResourceInformation",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/resourceInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getResources"
            },
            "parameters": []
        },
        "/v2.1/accounts": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Creates new accounts.",
                "description": "Creates new DocuSign service accounts.\n\nThis is used to create multiple DocuSign accounts with one call. It uses the same information and formats as the normal a  [Accounts:create](accounts_create) call with the information included within a `newAccountRequests` element. A maximum of 100 new accounts can be created at one time.\n\nNote that the structure of the XML request is slightly different than the JSON request, in that the new account information is included in a `newAccountDefinition` property inside the `newAccountRequests` element.\nResponse\n\nThe response returns the new account ID, password and the default user information for each newly created account.\n\nA 201 code is returned if the call succeeded.  While the call may have succeed, some of the individual account requests may have failed. In the case of failures to create the account,  an `errorDetails` node is added in the response to each specific request that failed.",
                "operationId": "Accounts_PostAccounts",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "preview_billing_plan",
                        "in": "query",
                        "description": "When set to **true**, creates the account using a preview billing plan.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "newAccountDefinition",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/newAccountDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/newAccountSummary"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "create"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Retrieves the account information for the specified account.",
                "description": "Retrieves the account information for the specified account.\n\n**Response**\nThe `canUpgrade` property contains is a Boolean that indicates whether the account can be upgraded through the API. ",
                "operationId": "Accounts_GetAccount",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_account_settings",
                        "in": "query",
                        "description": "When set to **true**, includes the account settings for the account in the response.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getAccountInformation"
            },
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Deletes the specified account.",
                "description": "This closes the specified account. You must be an account admin to close your account. Once closed, an account must be reopened by DocuSign.",
                "operationId": "Accounts_DeleteAccount",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "redact_user_data",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "delete"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/billing_charges": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets list of recurring and usage charges for the account.",
                "description": "Retrieves the list of recurring and usage charges for the account. This can be used to determine the charge structure and usage of charge plan items. \n\nPrivileges required: account administrator ",
                "operationId": "BillingCharges_GetAccountBillingCharges",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_charges",
                        "in": "query",
                        "description": "Specifies which billing charges to return.\nValid values are:\n\n* envelopes\n* seats\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/billingChargeResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBillingCharges"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/billing_invoices": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Get a List of Billing Invoices",
                "description": "Retrieves a list of invoices for the account. If the from date or to date queries are not specified, the response returns invoices for the last 365 days.\n\nPrivileges required: account administrator ",
                "operationId": "BillingInvoices_GetBillingInvoices",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Specifies the date/time of the earliest invoice in the account to retrieve.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Specifies the date/time of the latest invoice in the account to retrieve.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/billingInvoicesResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listInvoices"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/billing_invoices/{invoiceId}": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Retrieves a billing invoice.",
                "description": "Retrieves the specified invoice. \n\n###### Note: If the `pdfAvailable` property in the response is set to *true*, you can download a PDF version of the invoice. To download the PDF, make the call again and change the value of the `Accept` property in the header to `Accept: application/pdf`.\n\nPrivileges required: account administrator\n\nThe response returns a list of charges and information about the charges. Quantities are usually shown as 'unlimited' or an integer. Amounts are shown in the currency set for the account.\n\n**Response**\nThe following table provides a description of the different `chargeName` property values. The information will grow as more chargeable items are added to the system.\n\n| chargeName | Description |\n| --- | --- |\n| id_check | IDÂ Check Charge |\n| in_person_signing | In Person Signing charge |\n| envelopes Included | Sent Envelopes for the account |\n| age_verify | Age verification check |\n| ofac | OFAC Check |\n| id_confirm | ID confirmation check |\n| student_authentication | STAN PIN authentication check |\n| wet_sign_fax | Pages for returning signed documents by fax |\n| attachment_fax | Pages for returning attachments by fax |\n| phone_authentication | Phone authentication charge |\n| powerforms | PowerForm envelopes sent |\n| signer_payments | Payment processing charge |\n| outbound_fax | Send by fax charge |\n| bulk_recipient_envelopes | Bulk Recipient Envelopes sent |\n| sms_authentications | SMS authentication charge |\n| saml_authentications | SAML authentication charge |\n| express_signer_certificate | DocuSign Express Certificate charge |\n| personal_signer_certificate | Personal Signer Certificate charge |\n| safe_certificate | SAFE BioPharma Signer Certificate charge |\n| seats | Included active seats charge |\n| open_trust_certificate | OpenTrust Signer Certificate charge | ",
                "operationId": "BillingInvoices_GetBillingInvoice",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/billingInvoice"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getInvoice"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/billing_invoices_past_due": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Get a list of past due invoices.",
                "description": "Returns a list past due invoices for the account and notes if payment can be made through the REST API. \n\nPrivileges Required: account administrator",
                "operationId": "BillingInvoices_GetBillingInvoicesPastDue",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/billingInvoicesSummary"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listInvoicesPastDue"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/billing_payments": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Gets payment information for one or more payments.",
                "description": "Retrieves a list containing information about one or more payments. If the from date or to date queries are not used, the response returns payment information for the last 365 days. \n\nPrivileges required: account administrator ",
                "operationId": "BillingPayments_GetPaymentList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Specifies the date/time of the earliest payment in the account to retrieve.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Specifies the date/time of the latest payment in the account to retrieve.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/billingPaymentsResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listPayments"
            },
            "post": {
                "tags": [
                    "Billing"
                ],
                "summary": "Posts a payment to a past due invoice.",
                "description": "Posts a payment to a past due invoice. \n\n###### Note: This can only be used if the `paymentAllowed` value for a past due invoice is true. This can be determined calling [ML:GetBillingInvoicesPastDue].\n\nThe response returns information for a single payment, if a payment ID was used in the endpoint, or a list of payments. If the from date or to date queries or payment ID are not used, the response returns payment information for the last 365 days. If the request was for a single payment ID, the `nextUri` and `previousUri` properties are not returned.\n\nPrivileges required: account administrator",
                "operationId": "BillingPayments_PostPayment",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "billingPaymentRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/billingPaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/billingPaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "makePayment"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/billing_payments/{paymentId}": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Gets billing payment information for a specific payment.",
                "description": "Retrieves the information for a specified payment. \n\nPrivileges required: account administrator ",
                "operationId": "BillingPayments_GetPayment",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "paymentId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/billingPaymentItem"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getPayment"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/billing_plan": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Get Account Billing Plan",
                "description": "Retrieves the billing plan information for the specified account, including the current billing plan, successor plans, billing address, and billing credit card.\n\nBy default the successor plan and credit card information is included in the response. This information can be excluded from the response by adding the appropriate optional query string with the `setting` set to **false**. \n\nResponse\n\nThe response returns the billing plan information, including the currency code, for the plan. The `billingPlan` and `succesorPlans` property values are the same as those shown in the [ML:Get Billing Plan Details] reference. the `billingAddress` and `creditCardInformation` property values are the same as those shown in the [ML:Update Billing Plan] reference.\n\n###### Note: When credit card number information is shown, a mask is applied to the response so that only the last 4 digits of the card number are visible. ",
                "operationId": "BillingPlan_GetBillingPlan",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_credit_card_information",
                        "in": "query",
                        "description": "When set to **true**, excludes credit card information from the response.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_downgrade_information",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_metadata",
                        "in": "query",
                        "description": "When set to **true**, the `canUpgrade` and `renewalStatus` properities are included the response and an array of `supportedCountries` property is added to the `billingAddress` information. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_successor_plans",
                        "in": "query",
                        "description": "When set to **true**, excludes successor information from the response.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_tax_exempt_id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountBillingPlanResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getPlan"
            },
            "put": {
                "tags": [
                    "Billing"
                ],
                "summary": "Updates the account billing plan.",
                "description": "Updates the billing plan information, billing address, and credit card information for the specified account.",
                "operationId": "BillingPlan_PutBillingPlan",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "preview_billing_plan",
                        "in": "query",
                        "description": "When set to **true**, updates the account using a preview billing plan.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "billingPlanInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/billingPlanInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/billingPlanUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updatePlan"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/billing_plan/credit_card": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Get metadata for a given credit card.",
                "operationId": "BillingPlan_GetCreditCardInfo",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/creditCardInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getCreditCardInfo",
                "description": "This method returns information about a credit card associated with an account."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/billing_plan/downgrade": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns downgrade plan information for the specified account.",
                "operationId": "BillingPlan_GetDowngradeRequestBillingInfo",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/downgradRequestBillingInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getDowngradeRequestBillingInfo",
                "description": ""
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Queues downgrade billing plan request for an account.",
                "operationId": "BillingPlan_PutDowngradeAccountBillingPlan",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "downgradeBillingPlanInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/downgradeBillingPlanInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/downgradePlanUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateDowngradeAccountBillingPlan",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/billing_plan/purchased_envelopes": {
            "put": {
                "tags": [
                    "Billing"
                ],
                "summary": "Reserverd: Purchase additional envelopes.",
                "description": "Reserved: At this time, this endpoint is limited to DocuSign internal use only. Completes the purchase of envelopes for your account. The actual purchase is done as part of an internal workflow interaction with an envelope vendor.",
                "operationId": "PurchasedEnvelopes_PutPurchasedEnvelopes",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "purchasedEnvelopesInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/purchasedEnvelopesInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "purchaseEnvelopes"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/brands": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets a list of brand profiles.",
                "description": "Retrieves the list of brand profiles associated with the account and the default brand profiles. The Account Branding feature (accountSettings properties `canSelfBrandSend` and `canSelfBrandSend`)  must be set to **true** for the account to use this call.",
                "operationId": "Brands_GetBrands",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "exclude_distributor_brand",
                        "in": "query",
                        "description": "When set to **true**, excludes distributor brand information from the response set.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_logos",
                        "in": "query",
                        "description": "When set to **true**, returns the logos associated with the brand.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/brandsResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listBrands"
            },
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Creates one or more brand profile files for the account.",
                "description": "Creates one or more brand profile files for the account. The Account Branding feature (accountSettings properties `canSelfBrandSend` and `canSelfBrandSig`) must be set to **true** for the account to use this call.\n\nAn error is returned if `brandId` property for a brand profile is already set for the account. To upload a new version of an existing brand profile, you must delete the profile and then upload the newer version.\n\nWhen brand profile files are being uploaded, they must be combined into one zip file and the `Content-Type` must be `application/zip`.",
                "operationId": "Brands_PostBrands",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brand",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/brand"
                        },
                        "description": ""
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/brandsResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createBrand"
            },
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Deletes one or more brand profiles.",
                "description": "Deletes one or more brand profiles from an account. The Account Branding feature (accountSettings properties `canSelfBrandSend` and `canSelfBrandSend`) must be set to **true** to use this call.",
                "operationId": "Brands_DeleteBrands",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brandsRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/brandsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/brandsResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteBrands"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/brands/{brandId}": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get information for a specific brand.",
                "operationId": "Brand_GetBrand",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brandId",
                        "in": "path",
                        "description": "The unique identifier of a brand.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_external_references",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_logos",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/brand"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBrand",
                "description": "This method returns details about an account brand.\n\n**Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**)."
            },
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Updates an existing brand.",
                "operationId": "Brand_PutBrand",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brandId",
                        "in": "path",
                        "description": "The unique identifier of a brand.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "replace_brand",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "brand",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/brand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/brand"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateBrand",
                "description": "This method updates an account brand. \n\n**Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**)."
            },
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Removes a brand.",
                "operationId": "Brand_DeleteBrand",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brandId",
                        "in": "path",
                        "description": "The unique identifier of a brand.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteBrand",
                "description": "This method deletes a brand from an account.\n\n**Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**)."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/brands/{brandId}/file": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Export a specific brand.",
                "operationId": "BrandExport_GetBrandExportFile",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brandId",
                        "in": "path",
                        "description": "The unique identifier of a brand.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBrandExportFile",
                "description": "This method exports information about a brand to an XML file.\n\n**Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**)."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/brands/{brandId}/logos/{logoType}": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Obtains the specified image for a brand.",
                "operationId": "BrandLogo_GetBrandLogo",
                "consumes": [],
                "produces": [
                    "image/png"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brandId",
                        "in": "path",
                        "description": "The unique identifier of a brand.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "logoType",
                        "in": "path",
                        "description": "One of **Primary**, **Secondary** or **Email**.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBrandLogoByType",
                "description": "This method returns a specific logo that is used in a brand.\n\n**Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**)."
            },
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Put one branding logo.",
                "operationId": "BrandLogo_PutBrandLogo",
                "consumes": [
                    "image/png"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brandId",
                        "in": "path",
                        "description": "The unique identifier of a brand.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "logoType",
                        "in": "path",
                        "description": "One of **Primary**, **Secondary** or **Email**.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateBrandLogoByType",
                "description": "This method updates a single brand logo.\n\nYou pass in the new version of the resource in the `Content-Disposition` header. Example:\n\n`Content-Disposition: form-data; name=\"file\"; filename=\"logo.jpg\"`\n\n**Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**)."
            },
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Delete one branding logo.",
                "operationId": "BrandLogo_DeleteBrandLogo",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brandId",
                        "in": "path",
                        "description": "The unique identifier of a brand.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "logoType",
                        "in": "path",
                        "description": "One of **Primary**, **Secondary** or **Email**.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteBrandLogoByType",
                "description": "This method deletes a single logo from an account brand.\n\n**Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**)."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/brands/{brandId}/resources": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Returns the specified account's list of branding resources (metadata).",
                "operationId": "BrandResources_GetBrandResourcesList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brandId",
                        "in": "path",
                        "description": "The unique identifier of a brand.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/brandResourcesList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBrandResources",
                "description": "This method returns metadata about the branding resources that are associated with an account.\n\n**Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**)."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/brands/{brandId}/resources/{resourceContentType}": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Returns the specified branding resource file.",
                "operationId": "BrandResources_GetBrandResources",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brandId",
                        "in": "path",
                        "description": "The unique identifier of a brand.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "resourceContentType",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "langcode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "return_master",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBrandResourcesByContentType",
                "description": "This method returns a specific branding resource file.\n\nA brand uses a set of brand resource files to control the sending, signing, email message, and captive (embedded) signing experiences.  You can modify the default email messages and formats in these files and upload them to your brand to customize the user experience.\n\n**Important:** When you upload a modified resource file, only the elements that differ from the master resource file are saved as your resource file. Similarly, when you download your resource files, only the modified elements are included in the file. \n\n**Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**)."
            },
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Uploads a branding resource file.",
                "operationId": "BrandResources_PutBrandResources",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brandId",
                        "in": "path",
                        "description": "The unique identifier of a brand.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "resourceContentType",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The type of brand resource file that you are updating. Valid values are:\n\n- `sending`\n- `signing`\n- `email`\n- `signing_captive`"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/brandResources"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateBrandResourcesByContentType",
                "description": "This method updates a branding resource file.\n\nYou pass in the new version of the resource file in the `Content-Disposition` header. Example:\n\n`Content-Disposition: form-data; name=\"file\"; filename=\"DocuSign_SigningResource_4328673.xml\"`\n\n**Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**).\n\n**Important:** Customizing resource files is an advanced branding configuration option which can significantly impact your account, and should be done only by someone with expertise in XML and HTML. The master resource files are subject to change without notice. If you customize your resource files, after each release, DocuSign recommends you review any changes and update your custom files as needed.\n\nWhen you upload a modified resource file, only the elements that differ from the master resource file are saved as your resource file. Similarly, when you download your resource files, only the modified elements are included in the file."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/bulk_process_data/actions/{processAction}": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Lists top-level details for all bulk process lists visible to the current user",
                "operationId": "BulkProcess_GetBulkProcessLists",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "processAction",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkProcessingListSummaries"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBulkProcessLists",
                "description": ""
            },
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Uses the specified bulk envelopes list to update the envelopes specified in the payload",
                "operationId": "BulkProcess_PostBulkProcessRequest",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "processAction",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createBulkProcessRequest",
                "description": ""
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Deletes a specific bulk process list",
                "operationId": "BulkProcess_DeleteBulkProcessLists",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "processAction",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkProcessingLists",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/bulkProcessingLists"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkProcessResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteBulkProcessLists",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/bulk_process_data/actions/{processAction}/{bulkProcessListId}": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Gets a specific bulk process list",
                "operationId": "BulkProcess_GetBulkProcessList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkProcessListId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "processAction",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBulkProcessList",
                "description": ""
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates a specific bulk process list",
                "operationId": "BulkProcess_PutBulkProcessList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkProcessListId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "processAction",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateBulkProcessList",
                "description": ""
            },
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Uses the specified bulk envelopes list to update the envelopes specified in the payload",
                "operationId": "BulkProcess_PostBulkProcessRequestToQueue",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkProcessListId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "processAction",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkProcessRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/bulkProcessRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkProcessResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createBulkProcessRequestToQueue",
                "description": ""
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Deletes a specific bulk process list",
                "operationId": "BulkProcess_DeleteBulkProcessList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkProcessListId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "processAction",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkProcessResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteBulkProcessList",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/bulk_process_data/actions/{processAction}/{bulkProcessListId}/send": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Gets a specific bulk process list",
                "operationId": "BulkProcess_Send_GetBulkProcessList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkProcessListId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "processAction",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBulkProcessList",
                "description": ""
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates a specific bulk process list",
                "operationId": "BulkProcess_Send_PutBulkProcessList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkProcessListId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "processAction",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateBulkProcessList",
                "description": ""
            },
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Uses the specified bulk envelopes list to update the envelopes specified in the payload",
                "operationId": "BulkProcess_Send_PostBulkProcessRequestToQueue",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkProcessListId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "processAction",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkProcessRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/bulkProcessRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkProcessResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createBulkProcessRequestToQueue",
                "description": ""
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Deletes a specific bulk process list",
                "operationId": "BulkProcess_Send_DeleteBulkProcessList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkProcessListId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "processAction",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkProcessResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteBulkProcessList",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/bulk_send_batch": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns a list of bulk send batch satuses initiated by account.",
                "operationId": "BulkSendV2Batch_GetBulkSendBatches",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "batch_ids",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_text",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkSendBatchSummaries"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBulkSendBatches",
                "description": "Returns a summary of bulk send batches.\n\nUse the `batch_ids` query parameter to narrow the list of batches."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/bulk_send_batch/{bulkSendBatchId}": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Gets a specific bulk send batch status",
                "operationId": "BulkSendV2Batch_GetBulkSendBatchStatus",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkSendBatchId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkSendBatchStatus"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBulkSendBatchStatus",
                "description": "Gets the general status of a specific bulk send batch such as:\n\n- number of successes\n- number pending\n- number of errors\n\nThe `bulkErrors` property of the response object contains more information about the errors.\n\n### Related topics\n\n- [How to bulk send envelopes](/docs/esign-rest-api/how-to/bulk-send-envelopes/)\n"
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Put/Update a specific bulk send batch status",
                "operationId": "BulkSendV2Batch_PutBulkSendBatchStatus",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkSendBatchId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkSendBatchRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/bulkSendBatchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkSendBatchStatus"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateBulkSendBatchStatus",
                "description": "Updates a specific bulk send batch status."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/bulk_send_batch/{bulkSendBatchId}/{bulkAction}": {
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Initiate a specific bulk send batch action",
                "operationId": "BulkSendV2Batch_PutBulkSendBatchAction",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkAction",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkSendBatchId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkSendBatchActionRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/bulkSendBatchActionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkSendBatchStatus"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateBulkSendBatchAction",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/bulk_send_batch/{bulkSendBatchId}/envelopes": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Gets envelopes from a specific bulk send batch",
                "operationId": "BulkSendV2Envelopes_GetBulkSendBatchEnvelopes",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkSendBatchId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_text",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopesInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBulkSendBatchEnvelopes",
                "description": "This method returns a list of envelopes in a specified bulk batch. Use the query parameters to filter and sort the envelopes by different attributes."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/bulk_send_lists": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Lists top-level details for all bulk send lists visible to the current user",
                "operationId": "BulkSendV2CRUD_GetBulkSendLists",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkSendingListSummaries"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBulkSendLists",
                "description": "This method returns a list of bulk send lists belonging to the current user, as well as basic information about each list."
            },
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Creates a new bulk send list",
                "operationId": "BulkSendV2CRUD_PostBulkSendList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkSendingList",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/bulkSendingList"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkSendingList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createBulkSendList",
                "description": "This method creates a bulk send list that you can use to send an envelope to up to 1,000 recipients at once.\n\n### Related topics\n\n- [How to bulk send envelopes](/docs/esign-rest-api/how-to/bulk-send-envelopes/)\n\n### Errors\n\n| Error code                                              | Description                                                                                                                                                                                                                                                                              |\n| :------------------------------------------------------ | :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| BULK_SEND_MAX_COPIES_EXCEEDED                           | A bulk sending list cannot specify more than XXX copies in the mailing list. Call the settings API endpoint to find the maximum number of copies in a batch allowed for your account. In almost all cases, the default limit is 1000.                                                    |\n| BULK_SEND_RECIPIENT_IDS_MUST_BE_UNIQUE                  | No two recipientIds can be same within a bulkCopy. Same restriction as a regular envelope applies. Specify unique recipient IDs for each recipient within a bulkCopy (model for envelope in mailing list).                                                                               |\n| BULK_SEND_RECIPIENT_ID_REQUIRED                         | If no RoleName is present, recipientID is required in mailing list's bulkCopy. Add a roleName (that coalesces with template/envelope) or a recipientID.                                                                                                                                  |\n| BULK_SEND_RECIPIENT_NAME_REQUIRED                       | Recipient {0} has no name. Specify a name for the recipient.                                                                                                                                                                                                                             |\n| BULK_SEND_EMAIL_ADDRESS_REQUIRED_FOR_EMAIL_RECIPIENT    | Recipient {0} is an email recipient with no email address. Specify an email for the email recipient.                                                                                                                                                                                     |\n| BULK_SEND_FAX_NUMBER_REQUIRED_FOR_FAX_RECIPIENT         | Recipient {0} is a fax recipient with no fax number. Specify a fax number for the fax recipient.                                                                                                                                                                                         |\n| BULK_SEND_FAX_NUMBER_NOT_VALID                          | Recipient {0} specifies fax number {1}, which is not valid. Specify a valid fax number for the fax recipient.                                                                                                                                                                            |\n| BULK_SEND_EMAIL_ADDRESS_NOT_VALID                       | Recipient {0} specifies email address {1}, which is not a valid email address.  Specify a valid email address for the recipient.                                                                                                                                                         |\n| BULK_SEND_PHONE_NUMBER_REQURED_FOR_SMS_AUTH             | Recipient {0} specifies SMS auth, but no number was provided. Specify a phone number for the SMS auth recipient.                                                                                                                                                                         |\n| BULK_SEND_PHONE_NUMBER_INVALID_FOR_SMS_AUTH             | Recipient {0} specifies phone number {1} for SMS auth, which is not valid. Specify a valid phone number for the SMS auth recipient.                                                                                                                                                      |\n| BULK_SEND_ROLE_NAMES_MUST_BE_UNIQUE                     | Recipient role names cannot be duplicated; role {duplicateRecipientRole} appears multiple times. Use unique roleNames for recipients.                                                                                                                                                    |\n| BULK_SEND_CANNOT_USE_BOTH_ROLE_AND_ID_ON_SAME_RECIPIENT | Recipients cannot have both ID and Role; {0} has both. Specify a roleName or recipientId, but not both for the same recipient.                                                                                                                                                           |\n| BULK_SEND_CANNOT_USE_BOTH_ROLE_AND_ID_IN_SAME_LIST      | Cannot use both recipient role and ID in the same list. Specify a roleName or recipientId, but not both in the same list.                                                                                                                                                                |\n| BULK_SEND_INVALID_ID_CHECK_CONFIGURATION                | Recipient {0} specified SMS authentication, but no SMS auth settings were provided. Provide an SMS auth setting (proper ID configuration) if SMS auth is specified.                                                                                                                      |\n| BULK_SEND_INVALID_SBS_INPUT_CONFIGURATION               | Recipient {0} has more than one signature provider specified. Or signingProviderName is not specified. Or Signature provider : {0} is either unknown or not an available pen for this account. One or more SBS configuration is missing or invalid. The error details provide specifics. |\n| BULK_SEND_TAB_LABELS_MUST_BE_UNIQUE                     | Tab label {0} is duplicated. Needs to be unique. Use a unique tab label.                                                                                                                                                                                                                 |\n| BULK_SEND_TAB_LABEL_REQUIRED                            | Tab label is required. Specify a tab label.                                                                                                                                                                                                                                              |\n| BULK_SEND_TAB_VALUE_REQUIRED                            | Tab Label value is required. Specify a value for the tab label.                                                                                                                                                                                                                          |\n| BULK_SEND_ENVELOPE_CUSTOM_FIELD_NAME_MUST_BE_UNIQUE     | Custom fields must have distinct names. The field {0} appears more than once in a copy. Use unique names for custom fields.                                                                                                                                                              |\n| BULK_SEND_ENVELOPE_CUSTOM_FIELD_NAME_REQUIRED           | All custom fields must have names. Specify a name for the custom field.                                                                                                                                                                                                                  |\n| BULK_SEND_ENVELOPE_CUSTOM_FIELD_VALUE_REQUIRED          | Custom field {0} has no value. A custom field can have an empty value, but it cannot have a null value. Specify a value for the custom field.                                                                                                                                            |"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/bulk_send_lists/{bulkSendListId}": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Gets a specific bulk send list",
                "operationId": "BulkSendV2CRUD_GetBulkSendList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkSendListId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkSendingList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBulkSendList",
                "description": "This method returns all of the details associated with a specific bulk send list that belongs to the current user."
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates an existing bulk send list.  If send_envelope query string value is provided, will accept an empty payload and try to send the specified envelope",
                "operationId": "BulkSendV2CRUD_PutBulkSendList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkSendListId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkSendingList",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/bulkSendingList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkSendingList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateBulkSendList",
                "description": "This method replaces the definition of an existing bulk send list."
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Deletes an existing bulk send list",
                "operationId": "BulkSendV2CRUD_DeleteBulkSendList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkSendListId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkSendingListSummaries"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteBulkSendList",
                "description": "This method deletes a bulk send list."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/bulk_send_lists/{bulkSendListId}/send": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Uses the specified bulk send list to send the envelope specified in the payload",
                "operationId": "BulkSendV2Send_PostBulkSendRequest",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkSendListId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkSendRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/bulkSendRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkSendResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createBulkSendRequest",
                "description": "This method initiates the bulk send process. It generates a bulk send request based on an [existing bulk send list][create_list] and an envelope or template.\n\nConsider using the [BulkSend::createBulkSendTestRequest][create_test] method to test your bulk send list for compatibility with the envelope or template that you want to send first. To learn about the complete bulk send flow, see the [Bulk Send overview][BulkSendOverview].\n\nIf the envelopes were successfully queued for asynchronous processing, the response contains a `batchId` that you can use to get the status of the batch. If a failure occurs, the API returns an error message.\n\n**Note:** Partial success or failure generally does not occur. Only the entire batch is queued for asynchronous processing.\n\n### Related topics\n\n- [How to bulk send envelopes](/docs/esign-rest-api/how-to/bulk-send-envelopes/)\n\n\n### Errors\n\nThis method returns the following errors:\n\n| Error code                                                 | Description                                                                                                                                                                                                                                                                                            |\n| :--------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| BULK_SEND_ENVELOPE_NOT_IN_SENDABLE_STATE                   | Envelope {0} is not in a sendable state. The envelope is not complete. Make sure it has a sendable status, such as `created`.                                                                                                                                                                          |\n| BULK_SEND_ENVELOPE_LIST_CONTAINS_NO_COPIES                 | Cannot send an envelope with a bulk sending list which contains no copies.  The list you're trying to bulk send is empty. Make sure the bulk sending list you're using contains recipients.                                                                                                            |\n| BULK_SEND_ENVELOPE_LIST_CONTAINS_TOO_MANY_COPIES           | Bulk sending list contains more than {0} copies. The list you're trying to bulk send will cause your account to exceed the 1,000-copy limit imposed for all accounts. Try sending two or more separate lists.                                                                                          |\n| BULK_SEND_ENVELOPE_CANNOT_BE_NULL                          | Cannot send a bulk list without an envelope. Specify the envelope ID or template ID for the envelope you want to bulk send.                                                                                                                                                                            |\n| BULK_SEND_BLOB_STORE_ERROR                                 | Could not save copy of bulk sending list. An error writing to the database occurred. Try again. If the error persists, contact DocuSign Support.                                                                                                                                                       |\n| BULK_SEND_ACCOUNT_HAS_TOO_MANY_QUEUED_ENVELOPES            | Cannot send this bulk sending list because doing so would exceed the maximum of {maxCopies} in-flight envelopes. This account currently has {unprocessedEnvelopes} envelopes waiting to be processed. Please try again later.\" .Try again later, or contact DocuSign Support to request a higher tier. |\n| BULK_SEND_ENVELOPE_NOT_FOUND                               | Envelope {envelopeOrTemplateId} does not exist or you do not have permission to access it. The envelopeId or templateId specified could not be found. Specify a valid value.                                                                                                                           |\n| BULK_SEND_LIST_NOT_FOUND                                   | Bulk Sending list {listId} does not exist or you do not have permission to access it. The mailingListId specified could not be found. Specify a valid value.                                                                                                                                           |\n| BULK_SEND_ENVELOPE_HAS_NO_RECIPIENTS                       | Bulk sending copy contains recipients, but the specified envelope does not. The recipients on the envelope and the bulk send list do not match. Make sure the envelope and list are compatible for sending.                                                                                            |\n| BULK_SEND_RECIPIENT_ID_DOES_NOT_EXIST_IN_ENVELOPE          | Recipient {0} does not exist in the envelope. Add the missing recipient to the envelope.                                                                                                                                                                                                               |\n| BULK_SEND_RECIPIENT_ID_DOES_NOT_MATCH                      | Recipient ID {envelopeMember.ID} does not match. Make sure the recipient information in the list and the envelope match up.                                                                                                                                                                            |\n| BULK_SEND_ENVELOPE_HAS_BULK_RECIPIENT                      | Recipient {0} is a bulk recipient.  This is not supported. No legacy 'bulk recipient' allowed. In v2.1 of the eSignature API, you must use a bulk send list instead of a bulk recipient. See the API documentation for details.                                                                        |\n| BULK_SEND_RECIPIENT_ROLE_DOES_NOT_MATCH                    | Recipient Role {envelopeMember.RoleName} does not match. Make sure the recipient information in the list and the envelope is compatible.                                                                                                                                                               |\n| BULK_SEND_DUPLICATE_RECIPIENT_DETECTED                     | Duplicate recipients ({0}) not allowed, unless recipients have unique routing order specified on envelope.                                                                                                                                                                                             |\n| BULK_SEND_ENVELOPE_HAS_NO_TABS                             | Bulk sending copy contains tabs, but the specified envelope does not. List and envelope tabs cannot be coalesced. Make sure they are compatible for sending.                                                                                                                                           |\n| BULK_SEND_TAB_LABEL_DOES_NOT_EXIST_IN_ENVELOPE             | Tab with label {0} does not exist in envelope. Add the tab label to the envelope, remove the label from the list, or make sure you're specifying the correct list and envelope.                                                                                                                        |\n| BULK_SEND_TAB_DOES_NOT_MATCH                               | Tab {0} does not match {0} in envelope. A tab exists on the list that does not match or is missing on the envelope. Make sure the tabs on the list and the envelope match.                                                                                                                             |\n| BULK_SEND_ENVELOPE_HAS_NO_ENVELOPE_CUSTOM_FIELDS           | Bulk sending copy contains custom fields, but the specified envelope does not. There are custom fields on the list that the envelope does not have. Make sure that any custom fields on the list and the envelope match.                                                                               |\n| BULK_SEND_ENVELOPE_CUSTOM_FIELD_DOES_NOT_EXIST_IN_ENVELOPE | Custom field {0} does not exist in the envelope. Either add the custom field on the list to the envelope, remove the custom field from the list, or make sure you're specifying the correct list and envelope.                                                                                         |\n| BULK_SEND_ENVELOPE_CUSTOM_FIELD_NAME_DOES_NOT_MATCH        | Custom field names must match. {0} and {1} do not match. The custom field names on the list and the envelope do not match. Use identical names for both.                                                                                                                                               |\n\n[create_list]:      /docs/esign-rest-api/reference/bulkenvelopes/bulksend/createbulksendlist/\n[create_test]:      /docs/esign-rest-api/reference/bulkenvelopes/bulksend/createbulksendtestrequest/\n[BulkSendOverview]: /docs/esign-rest-api/reference/bulkenvelopes/bulksend/\n\n"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/bulk_send_lists/{bulkSendListId}/test": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Tests whether the specified bulk sending list can be used to send an envelope",
                "operationId": "BulkSendV2Test_PostBulkSendTestRequest",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkSendListId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bulkSendRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/bulkSendRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bulkSendTestResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createBulkSendTestRequest",
                "description": "This method tests a bulk send list for compatibility with the envelope or template that you want to send. For example, a template that has three roles is not compatible with a bulk send list that has only two recipients. For this reason, you might want to test compatibility first.\n\nA successful test result returns `true` for the `canBeSent` property. An unsuccessful test returns a JSON response that contains information about the errors that occurred.\n\nIf the test is successful, you can then send the envelope or template by using the [BulkSend::createBulkSendRequest][BulkSendRequest] method.\n\n## Envelope Compatibility Checks\n\nThis section describes the envelope compatibility checks that the system performs.\n\n**Top-Level Issues**\n\n- Envelopes must be in a sendable state.\n- The bulk send list must contain at least one copy (instance of an envelope), and no more than the maximum number of copies allowed for the account.\n- The envelope must not be null and must be visible to the current user.\n- The account cannot have more queued envelopes than the maximum number configured for the account.\n- The bulk send list must exist.\n\n**Recipients**\n\n- The envelope must have recipients.\n- If you are using an envelope, all of the recipients defined in the bulk send list must have corresponding recipient IDs in the envelope definition. If you are using a template, you must either match the recipient IDs or role IDs.\n- The envelope cannot contain a bulk recipient (an artifact of the legacy version of DocuSign's bulk send\n  functionality).\n\n**Recipient Tabs**\n\n- Every `recipient ID, tab label` pair in the bulk send list must correspond to a tab in the envelope.\n\n**Custom Fields**\n\n- Each envelope-level custom field in the bulk send list must correspond to the name of a `customField` in the\n  envelope definition. You do not have to match the recipient-level custom fields.\n\n[BulkSendRequest]:  /docs/esign-rest-api/reference/bulkenvelopes/bulksend/createbulksendrequest/\n\n\n"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/captive_recipients/{recipientPart}": {
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Deletes the signature for one or more captive recipient records.",
                "description": "Deletes the signature for one or more captive recipient records; it is primarily used for testing. This provides a way to reset the signature associated with a client user ID so that a new signature can be created the next time the client user ID is used.",
                "operationId": "CaptiveRecipients_DeleteCaptiveRecipientsPart",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientPart",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "captiveRecipientInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/captiveRecipientInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/captiveRecipientInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteCaptiveRecipient"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/chunked_uploads": {
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Initiate a new ChunkedUpload.",
                "operationId": "ChunkedUploads_PostChunkedUploads",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chunkedUploadRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/chunkedUploadRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/chunkedUploadResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createChunkedUpload",
                "x-ds-api-status": "beta",
                "description": "This method initiates a new chunked upload with the first part of the content."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/chunked_uploads/{chunkedUploadId}": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Retrieves the current metadata of a ChunkedUpload.",
                "operationId": "ChunkedUploads_GetChunkedUpload",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chunkedUploadId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/chunkedUploadResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getChunkedUpload",
                "x-ds-api-status": "beta",
                "description": "Returns the details (but not the content) about a chunked upload.\n\n**Note:** You cannot obtain details about a chunked upload that has expired, been deleted, or consumed by other actions."
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Integrity-Check and Commit a ChunkedUpload, readying it for use elsewhere.",
                "operationId": "ChunkedUploads_PutChunkedUploads",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chunkedUploadId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/chunkedUploadResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateChunkedUpload",
                "x-ds-api-status": "beta",
                "description": "This method checks the integrity of a chunked upload and then commits it. When this request is successful, the chunked upload is then ready to be referenced in other API calls.\n\nIf the request is unsuccessful, ensure that you have uploaded all of the parts by using the Update method.\n\n**Note:** After you commit a chunked upload, it no longer accepts additional parts."
            },
            "delete": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Delete an existing ChunkedUpload.",
                "operationId": "ChunkedUploads_DeleteChunkedUpload",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chunkedUploadId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/chunkedUploadResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteChunkedUpload",
                "x-ds-api-status": "beta",
                "description": "Deletes a chunked upload that has been committed but not yet consumed.\n\nThis method cannot be used to delete the following types of chunked uploads, which the system deletes automatically:\n\n\n- Chunked uploads that have been consumed by use in another API call.\n- Expired chunked uploads.\n\n**Note:** If you are aware of a chunked upload that can be discarded, the best practice is to explicitly delete it. If you wait for the system to automatically delete it after it expires, the chunked upload will continue to count against your quota."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/chunked_uploads/{chunkedUploadId}/{chunkedUploadPartSeq}": {
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Add a chunk, a chunk 'part', to an existing ChunkedUpload.",
                "operationId": "ChunkedUploads_PutChunkedUploadPart",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chunkedUploadId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chunkedUploadPartSeq",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chunkedUploadRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/chunkedUploadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/chunkedUploadResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateChunkedUploadPart",
                "x-ds-api-status": "beta",
                "description": "Adds a chunk or part to an existing chunked upload. After you use the Create method to initiate a new chunked upload and upload the first part, \nuse this method to upload subsequent parts.\n\nFor simplicity, DocuSign recommends that you upload the parts in their sequential order ( 1,2, 3, 4, etc.). The Create method adds the first part and assigns it the `sequence` value `0`. As a result, DocuSign recommends that you start with a `sequence` value of `1` when you use this method, and continue uploading parts contiguously until you have uploaded the entirety of the original content to DocuSign.\n\nExample:\n\n\n```\nPUT /v2.1/accounts/{accountId}/chunked_uploads/{chunkedUploadId}/1\nPUT /v2.1/accounts/{accountId}/chunked_uploads/{chunkedUploadId}/2\nPUT /v2.1/accounts/{accountId}/chunked_uploads/{chunkedUploadId}/3\n```\n\n**Note:** You cannot replace a part that DocuSign has already received, or add parts to a chunked upload that is already successfully committed."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/connect": {
            "get": {
                "tags": [
                    "Connect"
                ],
                "summary": "Get Connect Configuration Information",
                "description": "Retrieves all the DocuSign Custom Connect definitions for the specified account.\n\n###### Note: Connect must be enabled for your account to use this function. This does not retrieve information for Connect configurations for Box, eOriginal, or Salesforce.",
                "operationId": "Connect_GetConnectConfigs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/connectConfigResults"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listConfigurations"
            },
            "put": {
                "tags": [
                    "Connect"
                ],
                "summary": "Updates a specified Connect configuration.",
                "description": "Updates the specified DocuSign Connect configuration in your account.\n\n###### Note: Connect must be enabled for your account to use this function. This cannot be used to update Connect configurations for Box, eOriginal, or Salesforce.",
                "operationId": "Connect_PutConnectConfiguration",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connectCustomConfiguration",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/connectCustomConfiguration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/connectCustomConfiguration"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateConfiguration"
            },
            "post": {
                "tags": [
                    "Connect"
                ],
                "summary": "Creates a connect configuration for the specified account.",
                "description": "Creates a DocuSign Custom Connect definition for your account. DocuSign Connect enables the sending of real-time data updates to external applications. These updates are generated by user transactions as the envelope progresses through actions to completion. The Connect Service provides updated information about the status of these transactions and returns updates that include the actual content of document form fields. Be aware that, these updates might or might not include the document itself. For more information about Connect, see the [ML:DocuSign Connect Service Guide].\n\n###### Note: Connect must be enabled for your account to use this function. This cannot be used to set up Connect configurations for Salesforce or eOriginal.",
                "operationId": "Connect_PostConnectConfiguration",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connectCustomConfiguration",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/connectCustomConfiguration"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/connectCustomConfiguration"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createConfiguration"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/connect/{connectId}": {
            "get": {
                "tags": [
                    "Connect"
                ],
                "summary": "Get a Connect Configuration Information",
                "description": "Retrieves the information for the specified DocuSign Connect configuration.\n\n###### Note: Connect must be enabled for your account to use this function.\n",
                "operationId": "Connect_GetConnectConfig",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connectId",
                        "in": "path",
                        "description": "The ID of the custom Connect configuration being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/connectConfigResults"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getConfiguration"
            },
            "delete": {
                "tags": [
                    "Connect"
                ],
                "summary": "Deletes the specified connect configuration.",
                "description": "Deletes the specified DocuSign Connect configuration.\n\n###### Note: Connect must be enabled for your account to use this function.\n\n \n",
                "operationId": "Connect_DeleteConnectConfig",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connectId",
                        "in": "path",
                        "description": "The ID of the custom Connect configuration being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteConfiguration"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/connect/{connectId}/all/users": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns all users from the configured Connect service.",
                "operationId": "Connect_GetConnectAllUsers",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connectId",
                        "in": "path",
                        "description": "The ID of the custom Connect configuration being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domain_users_only",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email_substring",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_name_substring",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/integratedConnectUserInfoList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getConnectAllUsers",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/connect/{connectId}/users": {
            "get": {
                "tags": [
                    "Connect"
                ],
                "summary": "Returns users from the configured Connect service.",
                "description": "Returns users from the configured Connect service.",
                "operationId": "Connect_GetConnectUsers",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connectId",
                        "in": "path",
                        "description": "The ID of the custom Connect configuration being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email_substring",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "list_included_users",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_name_substring",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/integratedUserInfoList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listUsers"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/connect/envelopes/{envelopeId}/retry_queue": {
            "put": {
                "tags": [
                    "Connect"
                ],
                "summary": "Republishes Connect information for the specified envelope.",
                "description": "Republishes Connect information for the specified envelope.",
                "operationId": "ConnectPublish_PutConnectRetryByEnvelope",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/connectFailureResults"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "retryEventForEnvelope"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/connect/envelopes/publish/historical": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Submits a batch of historical envelopes for republish to an adhoc config.",
                "operationId": "HistoricalEnvelopePublish_PostHistoricalEnvelopePublishTransaction",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connectHistoricalEnvelopeRepublish",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/connectHistoricalEnvelopeRepublish"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopePublishTransaction"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createHistoricalEnvelopePublishTransaction"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/connect/envelopes/retry_queue": {
            "put": {
                "tags": [
                    "Connect"
                ],
                "summary": "Republishes Connect information for multiple envelopes.",
                "description": "Republishes Connect information for the  specified set of envelopes. The primary use is to republish Connect post failures by including envelope IDs for the envelopes that failed to post in the request. The list of envelope IDs that failed to post correctly can be retrieved by calling to [ML:GetConnectLog] retrieve the failure log.",
                "operationId": "ConnectPublish_PutConnectRetry",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connectFailureFilter",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/connectFailureFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/connectFailureResults"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "retryEventForEnvelopes"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/connect/failures": {
            "get": {
                "tags": [
                    "Connect"
                ],
                "summary": "Gets the Connect failure log information.",
                "description": "Retrieves the Connect Failure Log information. It can be used to determine which envelopes failed to post, so a republish request can be created.",
                "operationId": "ConnectFailures_GetConnectLogs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/connectLogs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listEventFailureLogs"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/connect/failures/{failureId}": {
            "delete": {
                "tags": [
                    "Connect"
                ],
                "summary": "Deletes a Connect failure log entry.",
                "description": "Deletes the Connect failure log information for the specified entry.",
                "operationId": "ConnectFailures_DeleteConnectFailureLog",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "failureId",
                        "in": "path",
                        "description": "The ID of the failed connect log entry.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/connectDeleteFailureResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteEventFailureLog"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/connect/logs": {
            "get": {
                "tags": [
                    "Connect"
                ],
                "summary": "Gets the Connect log.",
                "description": "Retrieves a list of connect log entries for your account.\n\n###### Note: The `enableLog` setting in the Connect configuration must be set to true to enable logging. If logging is not enabled, then no log entries are recorded. ",
                "operationId": "ConnectLog_GetConnectLogs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/connectLogs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listEventLogs"
            },
            "delete": {
                "tags": [
                    "Connect"
                ],
                "summary": "Gets a list of Connect log entries.",
                "description": "Retrieves a list of connect log entries for your account.\n\n###### Note: The `enableLog` property in the Connect configuration must be set to **true** to enable logging. If logging is not enabled, then no log entries are recorded.",
                "operationId": "ConnectLog_DeleteConnectLogs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteEventLogs"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/connect/logs/{logId}": {
            "get": {
                "tags": [
                    "Connect"
                ],
                "summary": "Get the specified Connect log entry.",
                "description": "Retrieves the specified Connect log entry for your account.\n\n###### Note: The `enableLog` setting in the Connect configuration must be set to true to enable logging. If logging is not enabled, then no log entries are recorded. ",
                "operationId": "ConnectLog_GetConnectLog",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "logId",
                        "in": "path",
                        "description": "The ID of the connect log entry",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "additional_info",
                        "in": "query",
                        "description": "When true, the connectDebugLog information is included in the response.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/connectLog"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getEventLog"
            },
            "delete": {
                "tags": [
                    "Connect"
                ],
                "summary": "Deletes a specified Connect log entry.",
                "description": "Deletes a specified entry from the Connect Log.\n",
                "operationId": "ConnectLog_DeleteConnectLog",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "logId",
                        "in": "path",
                        "description": "The ID of the connect log entry",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteEventLog"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/connect/mobile_notifiers": {
            "get": {
                "tags": [
                    "Connect"
                ],
                "summary": "Reserved",
                "description": "Reserved:",
                "operationId": "ConnectMobileNotifiers_GetMobileNotifiers",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/mobileNotifierConfigurationInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listMobileNotifiers"
            },
            "put": {
                "tags": [
                    "Connect"
                ],
                "summary": "Reserved",
                "description": "Reserved:",
                "operationId": "ConnectMobileNotifiers_PutMobileNotifier",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mobileNotifierConfigurationInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/mobileNotifierConfigurationInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/mobileNotifierConfigurationInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateMobileNotifiers"
            },
            "delete": {
                "tags": [
                    "Connect"
                ],
                "summary": "Reserved",
                "description": "Reserved:",
                "operationId": "ConnectMobileNotifiers_DeleteMobileNotifier",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mobileNotifierConfigurationInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/mobileNotifierConfigurationInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/mobileNotifierConfigurationInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteMobileNotifiers"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/connect/oauth": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Sets the Connect OAuth Config for the account.",
                "operationId": "ConnectOAuthConfig_GetConnectOAuthConfig",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/connectOAuthConfig"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getConnectOAuthConfig"
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates the existing Connect OAuth Config for the account.",
                "operationId": "ConnectOAuthConfig_PutConnectOAuthConfig",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connectOAuthConfig",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/connectOAuthConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/connectOAuthConfig"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateConnectOAuthConfig"
            },
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Sets the Connect OAuth Config for the account.",
                "operationId": "ConnectOAuthConfig_PostConnectOAuthConfig",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connectOAuthConfig",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/connectOAuthConfig"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/connectOAuthConfig"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createConnectOAuthConfig"
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Sets the Connect OAuth Config for the account.",
                "operationId": "ConnectOAuthConfig_DeleteConnectOAuthConfig",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteConnectOAuthConfig"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/consumer_disclosure": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets the Electronic Record and Signature Disclosure for the account.",
                "description": "Retrieves the Electronic Record and Signature Disclosure, with HTML formatting, associated with the account. You can use an optional query string to set the language for the disclosure.",
                "operationId": "ConsumerDisclosure_GetConsumerDisclosure",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "langCode",
                        "in": "query",
                        "description": "Specifies the language used in the response. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk), and Vietnamese (vi).  Additionally, the value can be set to `browser` to automatically detect the browser language being used by the viewer and display the disclosure in that language. ",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/consumerDisclosure"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getConsumerDisclosureDefault"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/consumer_disclosure/{langCode}": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets the Electronic Record and Signature Disclosure.",
                "description": "Retrieves the Electronic Record and Signature Disclosure, with HTML formatting, for the requested envelope recipient. This might be different than the current account disclosure depending on account settings, such as branding, and when the account disclosure was last updated. An optional query string can be included to return the language for the disclosure.  ",
                "operationId": "ConsumerDisclosure_GetConsumerDisclosureLangCode",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "langCode",
                        "in": "path",
                        "description": "The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/consumerDisclosure"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getConsumerDisclosure"
            },
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Update Consumer Disclosure.",
                "operationId": "ConsumerDisclosure_PutConsumerDisclosure",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "langCode",
                        "in": "path",
                        "description": "The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_metadata",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "consumerDisclosure",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/consumerDisclosure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/consumerDisclosure"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateConsumerDisclosure",
                "description": "Account administrators can use this method to perform the following tasks:\n\n- Customize values in the default disclosure.\n- Switch to a custom disclosure that uses your own text and HTML formatting.\n- Change values in your existing consumer disclosure. \n\nTo specify the signer language version of the disclosure that you are updating, use the optional `langCode` query parameter.\n\n**Note:** Only account administrators can use this method. Each time you change the disclosure content, all unsigned recipients of outstanding documents will be required to accept a new version. \n\n## Updating the default disclosure\n\nWhen you update the default disclosure, you can edit all properties except for the following ones:\n\n- `accountEsignId`: This property is read-only.\n- `custom`: The default value is **false.** Editing this property causes the default disclosure to switch to a custom disclosure.\n- `esignAgreement`: This property is read-only.\n- `esignText`: You cannot edit this property when `custom` is set to **false.** The API returns a 200 OK HTTP response, but does not update the `esignText`.\n- Metadata properties: These properties are read-only.\n\n**Note:** The text of the default disclosure is always in English.\n\n## Switching to a custom disclosure\n\nTo switch to a custom disclosure, set the `custom` property to **true** and customize the value for the `eSignText` property. \n\nYou can also edit all of the other properties except for the following ones:\n\n- `accountEsignId`: This property is read-only.\n- `esignAgreement`: This property is read-only.\n- Metadata properties: These properties are read-only.\n\n**Note:** When you use a custom disclosure, you can create versions of it in different signer languages and se the `langCode` parameter to specify the signer language version that you are updating.\n\n**Important:**  When you switch from a default to a custom disclosure, note the following information:\n\n- You will not be able to return to using the default disclosure.\n- Only the disclosure for the currently selected signer language is saved. DocuSign will not automatically translate your custom disclosure. You must create a disclosure for each language that your signers use.\n\n## Updating a custom disclosure\n\nWhen you update a custom disclosure, you can update all of the properties except for the following ones:\n\n- `accountEsignId`: This property is read-only. \n- `esignAgreement`: This property is read-only.\n- Metadata properties: These properties are read-only.\n\n**Important:** Only the disclosure for the currently selected signer language is saved. DocuSign will not automatically translate your custom disclosure. You must create a disclosure for each language that your signers use.\n\n"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/contacts": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Replaces contacts associated with an account for the DocuSign service.",
                "operationId": "Contacts_PutContacts",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contactModRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/contactModRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/contactUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "putContacts",
                "description": "This method updates one or more contacts associated with an account."
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Imports multiple new contacts into the contacts collection from CSV, JSON, or XML (based on content type).",
                "operationId": "Contacts_PostContacts",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contactModRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/contactModRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/contactUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "postContacts",
                "description": "This method adds multiple contacts into a contacts list."
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete contacts associated with an account for the DocuSign service.",
                "operationId": "Contacts_DeleteContacts",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contactModRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/contactModRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/contactUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteContacts",
                "description": "This method deletes multiple contacts associated with an account."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/contacts/{contactId}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Gets a particular contact associated with the user's account.",
                "operationId": "Contacts_GetContactById",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "The unique identifier of a person in the contacts address book.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cloud_provider",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/contactGetResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getContactById",
                "description": "This method returns one or more contacts\nassociated with a DocuSign account. You can also\nretrieve contacts from connected [cloud storage][CloudStorage] providers by using the\n`cloud_provider` query parameter. By default,\ncontacts are retrieved from the DocuSign account's\ndefault address book.\n\nTo return a specific contact, use the `contactId`\nquery parameter. To return all contacts associated\nwith an account, omit this parameter.\n\n[CloudStorage]: /docs/esign-rest-api/reference/cloudstorage/"
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Replaces a particular contact associated with an account for the DocuSign service.",
                "operationId": "Contacts_DeleteContactWithId",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "The unique identifier of a person in the contacts address book.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/contactUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteContactWithId",
                "description": "This method deletes a contact associated with an account."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/custom_fields": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets a list of custom fields associated with the account.",
                "description": "Retrieves a list of envelope custom fields associated with the account. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a list you provide.",
                "operationId": "AccountCustomFields_GetAccountCustomFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/customFields"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listCustomFields"
            },
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Creates an acount custom field.",
                "operationId": "AccountCustomFields_PostAccountCustomFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apply_to_templates",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customField",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/customField"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/customFields"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createCustomField",
                "description": "This method creates a custom field and makes it available for all new envelopes associated with an account."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/custom_fields/{customFieldId}": {
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Updates an existing account custom field.",
                "operationId": "AccountCustomFields_PutAccountCustomFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "customFieldId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apply_to_templates",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customField",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/customField"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/customFields"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateCustomField",
                "description": "This method updates an existing account custom field."
            },
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Delete an existing account custom field.",
                "operationId": "AccountCustomFields_DeleteAccountCustomFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "customFieldId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apply_to_templates",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteCustomField",
                "description": "This method deletes an existing account custom field."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets status changes for one or more envelopes.",
                "description": "Retrieves envelope status changes for all envelopes. You can modify the information returned by adding query strings to limit the request to check between certain dates and times, or for certain envelopes, or for certain status codes. It is recommended that you use one or more of the query strings in order to limit the size of the response.\n\n### Important: Unless you are requesting the status for specific envelopes (using the `envelopeIds` or `transactionIds` properties), you must add a set the `from_date` property in the request.\n\nGetting envelope status using `transactionIds` is useful for offline signing situations where it can be used determine if an envelope was created or not, for the cases where a network connection was lost, before the envelope status could be returned.\n\n### Request Envelope Status Notes ###\n\nThe REST API GET /envelopes call uses certain filters to find results. In some cases requests are check for \"any status change\" instead of the just the single status requested. In these cases, more envelopes might be returned by the request than otherwise would be. For example, for a request with the begin date is set to Jan 1st, an end date set to Jan 7th and the status qualifier (`from_to_status`) set to `Delivered` &mdash; the response set might contain envelopes that were created during that time period, but not delivered during the time period.\n\nTo avoid unnecessary database queries, the DocuSign system checks requests to ensure that the added filters will not result in a zero-size response before acting on the request. The following table shows the valid envelope statuses (in the Valid Current Statuses column) for the status qualifiers in the request. If the status and status qualifiers in the API request do not contain any of the values shown in the valid current statuses column, then an empty list is returned.\n\nFor example, a request with a status qualifier (from_to_status) of `Delivered` and a status of \"`Created`,`Sent`\", DocuSign will always return an empty list. This is because the request essentially translates to: find the envelopes that were delivered between the begin and end dates that have a current status of `Created` or `Sent`, and since an envelope that has been delivered can never have a status of `Created` or `Sent`, a zero-size response would be generated. In this case, DocuSign does not run the request, but just returns the empty list.\n\nClient applications should check that the statuses they are requesting make sense for a given status qualifier.",
                "operationId": "Envelopes_GetEnvelopes",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ac_status",
                        "in": "query",
                        "description": "Specifies the Authoritative Copy Status for the envelopes. The possible values are: Unknown, Original, Transferred, AuthoritativeCopy, AuthoritativeCopyExportPending, AuthoritativeCopyExported, DepositPending, Deposited, DepositedEO, or DepositFailed.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "block",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cdse_mode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "continuation_token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "custom_field",
                        "in": "query",
                        "description": "This specifies the envelope custom field name and value searched for in the envelope information. The value portion of the query can use partial strings by adding '%' (percent sign) around the custom field query value. \n\nExample 1: If you have an envelope custom field called \"Region\" and you want to search for all envelopes where the value is \"West\" you would use the query: `?custom_field=Region=West`. \n\nExample 2: To search for envelopes where the `ApplicationID` custom field has the value or partial value of \"DocuSign\" in field, the query would be: `?custom_field=ApplicationId=%DocuSign%` This would find envelopes where the custom field value is \"DocuSign for Salesforce\" or \"DocuSign envelope.\" \n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "envelope_ids",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "folder_ids",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "folder_types",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "The date/time setting that specifies the date/time when the request begins checking for status changes for envelopes in the account.\n\nThis is required unless 'envelopeId's are used.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from_to_status",
                        "in": "query",
                        "description": "This is the status type checked for in the `from_date`/`to_date` period. If `changed` is specified, then envelopes that changed status during the period are found. If for example, `created` is specified, then envelopes created during the period are found. Default is `changed`. \n\nPossible values are: Voided, Changed, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut and Processing.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_purge_information",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "intersecting_folder_ids",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_queried_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "powerformids",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "query_budget",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "requester_date_format",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_mode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_text",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The list of current statuses to include in the response. By default, all envelopes found are returned. If values are specified, then of the envelopes found, only those with the current status specified are returned in the results. \n\nPossible values are: Voided, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut and Processing.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Optional date/time setting that specifies the date/time when the request stops for status changes for envelopes in the account. If no entry, the system uses the time of the call as the `to_date`. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transaction_ids",
                        "in": "query",
                        "description": "If included in the query string, this is a comma separated list of envelope `transactionId`s. \n\nIf included in the `request_body`, this is a list of envelope `transactionId`s. \n\n###### Note: `transactionId`s are only valid in the DocuSign system for seven days.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_filter",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopesInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listStatusChanges"
            },
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Creates an envelope.",
                "description": "Creates an envelope. \n\nUsing this function you can:\n* Create an envelope and send it.\n* Create an envelope from an existing template and send it.\n\nIn either case, you can choose to save the envelope as a draft envelope instead of sending it by setting the request's `status` property to `created` instead of `sent`.\n\n## Sending Envelopes\n\nDocuments can be included with the Envelopes::create call itself or a template can include documents. Documents can be added by using a multi-part/form request or by using the `documentBase64` field of the [`document` object](#/definitions/document)\n\n### Recipient Types\nAn [`envelopeDefinition` object](#/definitions/envelopeDefinition) is used as the method's body. Envelope recipients can be defined in the envelope or in templates. The `envelopeDefinition` object's `recipients` field is an [`EnvelopeRecipients` resource object](#/definitions/EnvelopeRecipients). It includes arrays of the seven types of recipients defined by DocuSign:\n\nRecipient type | Object definition\n-------------- | -----------------\nagent (can add name and email information for later recipients/signers) | [`agent`](#/definitions/agent)\ncarbon copy (receives a copy of the documents) | [`carbonCopy`](#/definitions/carbonCopy)\ncertified delivery  (receives a copy of the documents and must acknowledge receipt) | [`certifiedDelivery`](#/definitions/certifiedDelivery)\neditor (can change recipients and document fields for later recipients/signers) | [`editor`](#/definitions/editor)\nin-person signer (\"hosts\" someone who signs in-person) | [`inPersonSigner`](#/definitions/inPersonSigner)\nintermediary (can add name and email information for some later recipients/signers.) | [`intermediary`](#/definitions/intermediary)\nsigner (signs and/or updates document fields) | [`signer`](#/definitions/signer)\n\nAdditional information about the different types of recipients is available from the [`EnvelopeRecipients` resource page](../../EnvelopeRecipients) and from the [Developer Center](https://www.docusign.com/developer-center/explore/features/recipients)\n\n### Tabs\nTabs (also referred to as `tags` and as `fields` in the web sending user interface), can be defined in the `envelopeDefinition`, in templates, by transforming PDF Form Fields, or by using Composite Templates (see below).\n\nDefining tabs: the `inPersonSigner`, and `signer` recipient objects include a `tabs` field. It is an [`EnvelopeTabs` resource object](#/definitions/EnvelopeTabs). It includes arrays of the 24 different tab types available. See the [`EnvelopeTabs` resource](../../EnvelopeTabs) for more information.\n\n## Using Templates\nEnvelopes use specific people or groups as recipients. Templates can specify a role, eg `account_manager.` When a template is used in an envelope, the roles must be replaced with specific people or groups.\n\nWhen you create an envelope using a `templateId`, the different recipient type objects within the [`EnvelopeRecipients` object](#/definitions/EnvelopeRecipients) are used to assign recipients to the template's roles via the `roleName` property. The recipient objects can also override settings that were specified in the template, and set values for tab fields that were defined in the template.\n\n### Message Lock\nWhen a template is added or applied to an envelope and the template has a locked email subject and message, that subject and message are used for the envelope and cannot be changed even if another locked template is subsequently added or applied to the envelope. The field `messageLock` is used to lock the email subject and message.\n\nIf an email subject or message is entered before adding or applying a template with `messageLock` **true**, the email subject and message is overwritten with the locked email subject and message from the template.\n\n## Envelope Status\nThe status of sent envelopes can be determined through the DocuSign webhook system or by polling. Webhooks are highly recommended: they provide your application with the quickest updates when an envelope's status changes. DocuSign limits polling to once every 15 minutes or less frequently.\n\nWhen a webhook is used, DocuSign calls your application, via the URL you provide, with a notification XML message. \n\nSee the [Webhook recipe](https://www.docusign.com/developer-center/recipes/webhook-status) for examples and live demos of using webhooks.\n\n## Webhook Options\nThe two webhook options, *eventNotification* and *Connect* use the same notification mechanism and message formats. eventNotification is used to create a webhook for a specific envelope sent via the API. Connect webhooks can be used for any envelope sent from an account, from any user, from any client. \n\n### eventNotification Webhooks\nThe Envelopes::create method includes an optional [eventNotification object](#definition-eventNotification) that adds a webhook to the envelope. eventNotification webhooks are available for all DocuSign accounts with API access.\n\n### Connect Webhooks\nConnect can be used to create a webhook for all envelopes sent by all users in an account, either through the API or via other DocuSign clients (web, mobile, etc). Connect configurations are independent of specific envelopes. A Connect configuration includes a filter that may be used to limit the webhook to specific users, envelope statuses, etc. \n\nConnect configurations may be created and managed using the [ConnectConfigurations resource](../../Connect/ConnectConfigurations). Configurations can also be created and managed from the Administration tool accessed by selecting \"Go to Admin\" from the menu next to your picture on the DocuSign web app. See the Integrations/Connect section of the Admin tool. For repeatability, and to minimize support questions, creating Connect configurations via the API is recommended, especially for ISVs.\n\nConnect is available for some DocuSign account types. Please contact DocuSign Sales for more information.\n\n## Composite Templates\n\nThe Composite Templates feature, like [compositing in film production](https://en.wikipedia.org/wiki/Compositing), enables you to *overlay* document, recipient, and tab definitions from multiple sources, including PDF Form Field definitions, templates defined on the server, and more.\n\nEach Composite Template consists of optional elements: server templates, inline templates, PDF Metadata templates, and documents.\n\n* The Composite Template ID is an optional element used to identify the composite template. It is used as a reference when adding document object information via a multi-part HTTP message. If used, the document content-disposition must include the `compositeTemplateId` to which the document should be added. If `compositeTemplateId` is not specified in the content-disposition, the document is applied based on the `documentId` only. If no document object is specified, the composite template inherits the first document.\n\n* Server Templates are server-side templates stored on the DocuSign platform. If supplied, they are overlaid into the envelope in the order of their Sequence value.\n\n* Inline Templates provide a container to add documents, recipients, tabs, and custom fields. If inline templates are supplied, they are overlaid into the envelope in the order of their Sequence value.\n\n* Document objects are optional structures that provide a container to pass in a document or form. If this object is not included, the composite template inherits the *first* document it finds from a server template or inline template, starting with the lowest sequence value.\n\nPDF Form objects are only transformed from the document object. DocuSign does not derive PDF form properties from server templates or inline templates. To instruct DocuSign to transform fields from the PDF form, set `transformPdfFields` to \"true\" for the document. See the Transform PDF Fields section for more information about process.\n\n* PDF Metadata Templates provide a container to embed design-time template information into a PDF document. DocuSign uses this information when processing the Envelope. This convention allows the document to carry the signing instructions with it, so that less information needs to be provided at run-time through an inline template or synchronized with an external structure like a server template. PDF Metadata templates are stored in the Metadata layer of a PDF in accordance with Acrobat's XMP specification. DocuSign will only find PDF Metadata templates inside documents passed in the Document object (see below). If supplied, the PDF metadata template will be overlaid into the envelope in the order of its Sequence value.\n\n### Compositing the definitions\nEach Composite Template adds a new document and templates overlay into the envelope. For each Composite Template these rules are applied:\n\n* Templates are overlaid in the order of their Sequence value.\n* If Document is not passed into the Composite Template's `document` field, the *first* template's document (based on the template's Sequence value) is used.\n* Last in wins in all cases except for the document (i.e. envelope information, recipient information, secure field information). There is no special casing.\n\nFor example, if you want higher security on a tab, then that needs to be specified in a later template (by sequence number) then where the tab is included. If you want higher security on a role recipient, then it needs to be in a later template then where that role recipient is specified.\n\n* Recipient matching is based on Recipient Role and Routing Order. If there are matches, the recipient information is merged together. A final pass is done on all Composite Templates, after all template overlays have been applied, to collapse recipients with the same email, username and routing order. This prevents having the same recipients at the same routing order.\n\n* If you specify in a template that a recipient is locked, once that recipient is overlaid the recipient attributes can no longer be changed. The only items that can be changed for the recipient in this case are the email, username, access code and IDCheckInformationInput.\n\n* Tab matching is based on Tab Labels, Tab Types and Documents. If a Tab Label matches but the Document is not supplied, the Tab is overlaid for all the Documents.\n\nFor example, if you have a simple inline template with only one tab in it with a label and a value, the Signature, Initial, Company, Envelope ID, User Name tabs will only be matched and collapsed if they fall in the exact same X and Y locations.\n\n* roleName and tabLabel matching is case sensitive.\n\n* The defaultRecipient field enables you to specify which recipient the generated tabs from a PDF form are mapped to. You can also set PDF form generated tabs to a recipient other than the DefaultRecipient by specifying the mapping of the tab label that is created to one of the template recipients.\n\n* You can use tabLabel wild carding to map a series of tabs from the PDF form. To use this you must end a tab label with \"\\*\" and then the system matches tabs that start with the label.\n\n* If no DefaultRecipient is specified, tabs must be explicitly mapped to recipients in order to be generated from the form. Unmapped form objects will not be generated into their DocuSign equivalents. (In the case of Signature/Initials, the tabs will be disregarded entirely; in the case of pdf text fields, the field data will be flattened on the Envelope document, but there will not be a corresponding DocuSign data tab.)\n\n### Including the Document Content for Composite Templates\nDocument content can be supplied inline, using the `documentBase64` or can be included in a multi-part HTTP message. \nIf a multi-part message is used and there are multiple Composite Templates, the document content-disposition can include the `compositeTemplateId` to which the document should be added. Using the `compositeTemplateId` sets which documents are associated with particular composite templates. An example of this usage is:\n\n```\n   --5cd3320a-5aac-4453-b3a4-cbb52a4cba5d\n   Content-Type: application/pdf\n   Content-Disposition: file; filename=\"eula.pdf\"; documentId=1; compositeTemplateId=\"1\"\n   Content-Transfer-Encoding: base64\n```\n\n### PDF Form Field Transformation\nOnly the following PDF Form FieldTypes will be transformed to DocuSign tabs: CheckBox, DateTime, ListBox, Numeric, Password, Radio, Signature, and Text\n\nField Properties that will be transformed: Read Only, Required, Max Length, Positions, and Initial Data.\n\nWhen transforming a *PDF Form Digital Signature Field,* the following rules are used:\n\nIf the PDF Field Name Contains | Then the DocuSign Tab Will be\n------- | --------\nDocuSignSignHere or eSignSignHere | Signature\nDocuSignSignHereOptional or eSignSignHereOptional | Optional Signature\nDocuSignInitialHere or eSignInitialHere | Initials\nDocuSignInitialHereOptional or eSignInitialHereOptional | Optional Initials\n\nAny other PDF Form Digital Signature Field will be transformed to a DocuSign Signature tab\n\nWhen transforming *PDF Form Text Fields,* the following rules are used:\n\nIf the PDF Field Name Contains | Then the DocuSign Tab Will be\n------- | --------\nDocuSignSignHere or eSignSignHere | Signature\nDocuSignSignHereOptional or eSignSignHereOptional | Optional Signature\nDocuSignInitialHere or eSignInitialHere | Initials\nDocuSignInitialHereOptional or eSignInitialHereOptional | Optional Initials\nDocuSignEnvelopeID or eSignEnvelopeID | EnvelopeID\nDocuSignCompany or eSignCompany | Company\nDocuSignDateSigned or eSignDateSigned | Date Signed\nDocuSignTitle or eSignTitle | Title\nDocuSignFullName or eSignFullName |  Full Name\nDocuSignSignerAttachmentOptional or eSignSignerAttachmentOptional | Optional Signer Attachment\n\nAny other PDF Form Text Field will be transformed to a DocuSign data (text) tab.\n\nPDF Form Field Names that include \"DocuSignIgnoreTransform\" or \"eSignIgnoreTransform\" will not be transformed.\n\nPDF Form Date fields will be transformed to Date Signed fields if their name includes DocuSignDateSigned or eSignDateSigned.\n\n## Template Email Subject Merge Fields\nThis feature enables you to insert recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient's `roleName`, are added to the `emailSubject` when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n\nIf merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\n* To add a recipient's name in the subject line add the following text in the `emailSubject` when creating the template or when sending an envelope from a template:\n\n   [[<roleName>_UserName]]\n\n   Example:\n\n   `\"emailSubject\":\"[[Signer 1_UserName]], Please sign this NDA\",`\n\n* To add a recipient's email address in the subject line add the following text in the emailSubject when creating the template or when sending an envelope from a template:\n\n   [[<roleName>_Email]]\n\n   Example:\n\n   `\"emailSubject\":\"[[Signer 1_Email]], Please sign this NDA\",`\n\nIn both cases the <roleName> is the recipient's `roleName` in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[<roleName>_UserName]] or [[<roleName>_Email]] is shown in the email subject.\n\n## Branding an envelope\nThe following rules are used to determine the `brandId` used in an envelope:\n\n* If a `brandId` is specified in the envelope/template and that brandId is available to the account, that brand is used in the envelope.\n* If more than one template is used in an envelope and more than one `brandId` is specified, the first `brandId` specified is used throughout the envelope.\n* In cases where no brand is specified and the sender belongs to a Group; if there is only one brand associated with the Group, then that brand is used in the envelope. Otherwise, the account's default signing brand is used.\n* For envelopes that do not meet any of the previous criteria, the account's default signing brand is used for the envelope.\n\n## BCC Email address feature \nThe BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, don't use the BCC Email field. Use a Carbon Copy or Certified Delivery Recipient type.\n\n## Merge Recipient Roles for Draft Envelopes\nWhen an envelope with multiple templates is sent, the recipients from the templates are merged according to the template roles, and empty recipients are removed. When creating an envelope with multiple templates, but not sending it (keeping it in a created state), duplicate recipients are not merged, which could cause leave duplicate recipients in the envelope.\n\nTo prevent this, the query parameter `merge_roles_on_draft` should be added when posting a draft envelope (status=created) with multiple templates. Doing this will merge template roles and remove empty recipients.\n\n###### Note: DocuSign recommends that the `merge_roles_on_draft` query parameter be used anytime you are creating an envelope with multiple templates and keeping it in draft (created) status.",
                "operationId": "Envelopes_PostEnvelopes",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cdse_mode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "change_routing_order",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "completed_documents_only",
                        "in": "query",
                        "description": "If set to true then we want to set the sourceEnvelopeId to indicate that this is a\"forward\" envelope action",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "merge_roles_on_draft",
                        "in": "query",
                        "description": "When set to **true**, merges template roles and remove empty recipients when you create an envelope with multiple templates.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tab_label_exact_matches",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "envelopeDefinition",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeSummary"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createEnvelope"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets the status of a envelope.",
                "description": "Retrieves the overall status for the specified envelope.",
                "operationId": "Envelopes_GetEnvelope",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "advanced_update",
                        "in": "query",
                        "description": "When true, envelope information can be added or modified.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelope"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getEnvelope"
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Send Draft Envelope/Void Envelope/Move/Purge Envelope/Modify draft",
                "description": "The Put Envelopes endpoint provides the following functionality:\n\n* Sends the specified single draft envelope.\nAdd {\"status\":\"sent\"} to the request body to send the envelope.\n\n* Voids the specified in-process envelope.\nAdd {\"status\":\"voided\", \"voidedReason\":\"The reason for voiding the envelope\"} to the request body to void the envelope.\n\n* Replaces the current email subject and message for a draft envelope.\nAdd {\"emailSubject\":\"subject\",  \"emailBlurb\":\"message\"}  to the request body to modify the subject and message.\n\n* Place the envelope documents and envelope metadata in a purge queue so that this information is removed from the DocuSign system.\nAdd {\"purgeState\":\"purge type\"} to the request body.\n\n*Additional information on purging documents*\n\nThe purge request can only be used for completed envelopes that are not marked as the authoritative copy. The requesting user must have permission to purge documents and must be the sender (the requesting user can act as the sender using Send On Behalf Of).\n\n###### Note: If you have set the Document Retention policy on your account, envelope documents are automatically placed in the purge queue and the warning emails are sent at the end of the retention period. \n###### Note: You can set the Document Retention policy in the Classic DocuSign Experience by specifying the number of days to retain documents. \n###### Note: Setting a Document Retention policy is the same as setting a schedule for purging documents.\n\nWhen the purge request is initiated the envelope documents, or documents and envelope metadata, are placed in a purge queue for deletion in 14 days. A warning email notification is sent to the sender and recipients associated with the envelope, notifying them that the envelope documents will be deleted in 14 days and providing a link to the documents. A second email is sent 7 days later with the same message. At the end of the 14-day period, the envelope documents are deleted from the system.\n\nIf `purgeState=\"documents_queued\"` is used in the request, then only the documents are deleted and any corresponding attachments and tabs remain in the DocuSign system. If `purgeState= \"documents_and_metadata_queued\"` is used in the request, then the documents, attachments, and tabs are deleted.",
                "operationId": "Envelopes_PutEnvelope",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "advanced_update",
                        "in": "query",
                        "description": "When set to **true**, allows the caller to update recipients, tabs, custom fields, notification, email settings and other envelope attributes.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "resend_envelope",
                        "in": "query",
                        "description": "When set to **true**, sends the specified envelope again.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "envelope",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelope"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeUpdateSummary"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "update"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/attachments": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Returns a list of attachments associated with the specified envelope",
                "operationId": "Attachments_GetAttachments",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeAttachmentsResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getAttachments",
                "x-ds-api-status": "beta",
                "description": "Returns a list of attachments associated with a specified envelope"
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Add one or more attachments to a DRAFT or IN-PROCESS envelope.",
                "operationId": "Attachments_PutAttachments",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeAttachmentsRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeAttachmentsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeAttachmentsResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "putAttachments",
                "x-ds-api-status": "beta",
                "description": "Adds one or more attachments to a draft or in-process envelope.\n\nEnvelope attachments are files that an application can include in an envelope. They are not converted to PDF. Envelope attachments are available only through the API. There is no user interface in the DocuSign web application for them.\n\nFor a list of supported file formats, see [Supported File Formats](https://support.docusign.com/guides/ndse-user-guide-supported-file-formats)."
            },
            "delete": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Delete one or more attachments from a DRAFT envelope.",
                "operationId": "Attachments_DeleteAttachments",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeAttachmentsRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeAttachmentsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeAttachmentsResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteAttachments",
                "x-ds-api-status": "beta",
                "description": "Deletes one or more attachments from a draft envelope."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/attachments/{attachmentId}": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Retrieves an attachment from the envelope.",
                "operationId": "Attachments_GetAttachment",
                "consumes": [],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getAttachment",
                "x-ds-api-status": "beta",
                "description": "Retrieves an attachment from an envelope."
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Add an attachment to a DRAFT or IN-PROCESS envelope.",
                "operationId": "Attachments_PutAttachment",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "attachment",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/attachment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeAttachmentsResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "putAttachment",
                "x-ds-api-status": "beta",
                "description": "Adds an attachment to a draft or in-process envelope."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/audit_events": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets the envelope audit events for an envelope.",
                "description": "Gets the envelope audit events for the specified envelope.",
                "operationId": "AuditEvents_GetAuditEvents",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeAuditEventResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listAuditEvents"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/comments": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Posts a list of comments for authorized user",
                "operationId": "Comments_PostEnvelopeComments",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "commentsPublish",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/commentsPublish"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/commentHistoryResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createEnvelopeComments",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/comments/transcript": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Gets comment transcript for envelope and user",
                "operationId": "Comments_GetCommentsTranscript",
                "consumes": [],
                "produces": [
                    "application/pdf"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "encoding",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getCommentsTranscript",
                "description": "Retrieves a PDF file containing all of the comments that senders and recipients have added to the documents in an envelope.\n\nThe response body of this method is the PDF file as a byte\nstream.\n\n\n**Note:** Comments are disabled by default. To use the comments feature, an account administrator must enable comments on the account (in the `accountSettingsInformation` object, set the `enableSigningExtensionComments` property to **true**). "
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/custom_fields": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets the custom field information for the specified envelope.",
                "description": "Retrieves the custom field information for the specified envelope. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes, and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.",
                "operationId": "CustomFields_GetCustomFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/customFieldsEnvelope"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listCustomFields"
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Updates envelope custom fields in an envelope.",
                "description": "Updates the envelope custom fields in draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.\n",
                "operationId": "CustomFields_PutCustomFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "customFields",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/customFields"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/customFields"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateCustomFields"
            },
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Updates envelope custom fields for an envelope.",
                "description": "Updates the envelope custom fields for draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.",
                "operationId": "CustomFields_PostCustomFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "customFields",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/customFields"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/customFields"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createCustomFields"
            },
            "delete": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Deletes envelope custom fields for draft and in-process envelopes.",
                "description": "Deletes envelope custom fields for draft and in-process envelopes.",
                "operationId": "CustomFields_DeleteCustomFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "customFields",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/customFields"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/customFields"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteCustomFields"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/docGenFormFields": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns formfields for an envelope",
                "operationId": "DocGenFormFields_GetEnvelopeDocGenFormFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/docGenFormFieldResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getEnvelopeDocGenFormFields"
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates formfields for an envelope",
                "operationId": "DocGenFormFields_PutEnvelopeDocGenFormFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "update_docgen_formfields_only",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "docGenFormFieldRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/docGenFormFieldRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/docGenFormFieldResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateEnvelopeDocGenFormFields"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets a list of envelope documents.",
                "description": "Retrieves a list of documents associated with the specified envelope.",
                "operationId": "Documents_GetDocuments",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documents_by_userid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_docgen_formfields",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_document_size",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_metadata",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_tabs",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "recipient_id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "shared_user_id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeDocumentsResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listDocuments"
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Adds one or more documents to an existing envelope document.",
                "description": "Adds one or more documents to an existing envelope document.",
                "operationId": "Documents_PutDocuments",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeDefinition",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeDocumentsResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateDocuments"
            },
            "delete": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Deletes documents from a draft envelope.",
                "description": "Deletes one or more documents from an existing draft envelope.",
                "operationId": "Documents_DeleteDocuments",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeDefinition",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeDocumentsResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteDocuments"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets a document from an envelope.",
                "description": "Retrieves the specified document from the envelope. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted.\n\nYou can also use this method to retrieve a PDF containing the combined content of all documents and the certificate. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted. \n\nTo retrieve the combined content replace the `{documentId}` parameter in the endpoint with `combined`.\n/accounts/{accountId}/envelopes/{envelopeId}/documents/combined",
                "operationId": "Documents_GetDocument",
                "consumes": [],
                "produces": [
                    "application/pdf"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "certificate",
                        "in": "query",
                        "description": "When set to **false**, the envelope signing certificate is removed from the download.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "documents_by_userid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "encoding",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "encrypt",
                        "in": "query",
                        "description": "When set to **true**, the PDF bytes returned in the response are encrypted for all the key managers configured on your DocuSign account. The documents can be decrypted with the KeyManager Decrypt Document API.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "description": "Specifies the language for the Certificate of Completion in the response. The supported languages, with the language value shown in parenthesis, are: Chinese Simplified (zh_CN), , Chinese Traditional (zh_TW), Dutch (nl), English US (en), French (fr), German (de), Italian (it), Japanese (ja), Korean (ko), Portuguese (pt), Portuguese (Brazil) (pt_BR), Russian (ru), Spanish (es). ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "recipient_id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "shared_user_id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "show_changes",
                        "in": "query",
                        "description": "When set to **true**, any changed fields for the returned PDF are highlighted in yellow and optional signatures or initials outlined in red. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "watermark",
                        "in": "query",
                        "description": "When set to **true**, the account has the watermark feature enabled, and the envelope is not complete, the watermark for the account is added to the PDF documents. This option can remove the watermark. ",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getDocument"
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Adds a document to an existing draft envelope.",
                "description": "Adds a document to an existing draft envelope.",
                "operationId": "Documents_PutDocument",
                "consumes": [
                    "application/pdf"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentFileBytes",
                        "in": "body",
                        "description": "Updated document content.",
                        "required": true,
                        "schema": {
                            "format": "binary",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeDocument"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateDocument"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/fields": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets the custom document fields from an  existing envelope document.",
                "description": "Retrieves the custom document field information from an existing envelope document.",
                "operationId": "DocumentFields_GetDocumentFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentFieldsInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listDocumentFields"
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Updates existing custom document fields in an existing envelope document.",
                "description": "Updates existing custom document fields in an existing envelope document.",
                "operationId": "DocumentFields_PutDocumentFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentFieldsInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/documentFieldsInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentFieldsInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateDocumentFields"
            },
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Creates custom document fields in an existing envelope document.",
                "description": "Creates custom document fields in an existing envelope document.",
                "operationId": "DocumentFields_PostDocumentFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentFieldsInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/documentFieldsInformation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentFieldsInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createDocumentFields"
            },
            "delete": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Deletes custom document fields from an existing envelope document.",
                "description": "Deletes custom document fields from an existing envelope document.",
                "operationId": "DocumentFields_DeleteDocumentFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentFieldsInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/documentFieldsInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentFieldsInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteDocumentFields"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/html_definitions": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Get the Original HTML Definition used to generate the Responsive HTML for a given document.",
                "operationId": "ResponsiveHtml_GetEnvelopeDocumentHtmlDefinitions",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentHtmlDefinitionOriginals"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getEnvelopeDocumentHtmlDefinitions",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Returns document page image(s) based on input.",
                "operationId": "Pages_GetPageImages",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dpi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "max_height",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "max_width",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nocache",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "show_changes",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/pageImages"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getPages",
                "description": "Returns images of the pages in a document for display based on the parameters that you specify."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}": {
            "delete": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Deletes a page from a document in an envelope.",
                "description": "Deletes a page from a document in an envelope based on the page number.",
                "operationId": "Pages_DeletePage",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "path",
                        "description": "The page number being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteDocumentPage"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}/page_image": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets a page image from an envelope for display.",
                "description": "Retrieves a page image for display from the specified envelope.",
                "operationId": "Pages_GetPageImage",
                "consumes": [],
                "produces": [
                    "image/png"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "path",
                        "description": "The page number being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dpi",
                        "in": "query",
                        "description": "Sets the dpi for the image.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "max_height",
                        "in": "query",
                        "description": "Sets the maximum height for the page image in pixels. The dpi is recalculated based on this setting.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "max_width",
                        "in": "query",
                        "description": "Sets the maximum width for the page image in pixels. The dpi is recalculated based on this setting.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "show_changes",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getDocumentPageImage"
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Rotates page image from an envelope for display.",
                "description": "Rotates page image from an envelope for display. The page image can be rotated to the left or right.",
                "operationId": "Pages_PutPageImage",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "path",
                        "description": "The page number being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/pageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "rotateDocumentPage"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}/tabs": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Returns tabs on the specified page.",
                "operationId": "Tabs_GetPageTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "path",
                        "description": "The page number being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getPageTabs",
                "description": "Returns the tabs from the page specified by `pageNumber` of the document specified by `documentId` in the\nenvelope specified by `envelopeId`.\n"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/responsive_html_preview": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Get Responsive HTML Preview for a document in an envelope.",
                "operationId": "ResponsiveHtml_PostDocumentResponsiveHtmlPreview",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentHtmlDefinition",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/documentHtmlDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentHtmlDefinitions"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createDocumentResponsiveHtmlPreview",
                "description": "Creates a preview of the\n[responsive](/docs/esign-rest-api/esign101/concepts/responsive/)\nHTML version of a specific document.\nThis method enables you to preview a PDF document\nconversion to responsive HTML across device types prior to sending.\n\nThe request body is a `documentHtmlDefinition` object, which holds the responsive signing parameters that define how to generate the HTML version of the signing document."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/tabs": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Returns tabs on the document.",
                "operationId": "Tabs_GetDocumentTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_metadata",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page_numbers",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getDocumentTabs",
                "description": "Returns the tabs on the document specified by `documentId` in the\nenvelope specified by `envelopeId`.\n"
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates the tabs for an envelope document",
                "operationId": "Tabs_PutDocumentTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tabs",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateDocumentTabs",
                "description": "Updates tabs in the document specified by `documentId` in the\nenvelope specified by `envelopeId`.\n"
            },
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Adds the tabs to an envelope document",
                "operationId": "Tabs_PostDocumentTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tabs",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createDocumentTabs",
                "description": "Adds tabs to the document specified by `documentId` in the\nenvelope specified by `envelopeId`.\n\nIn the request body, you only need to specify the tabs that your\nare adding. For example, to add a text\n[prefill tab](/docs/esign-rest-api/reference/envelopes/envelopedocumenttabs/create/#definition__tabs_prefilltabs),\nyour request body might look like this:\n\n```\n{\n  \"prefillTabs\": {\n    \"textTabs\": [\n      {\n        \"value\": \"a prefill text tab\",\n        \"pageNumber\": \"1\",\n        \"documentId\": \"1\",\n        \"xPosition\": 316,\n        \"yPosition\": 97\n      }\n    ]\n  }\n}\n```\n"
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Deletes tabs from an envelope document",
                "operationId": "Tabs_DeleteDocumentTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tabs",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteDocumentTabs",
                "description": "Deletes tabs from the document specified by `documentId` in the\nenvelope specified by `envelopeId`.\n"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/templates": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets the templates associated with a document in an existing envelope.",
                "description": "Retrieves the templates associated with a document in the specified envelope.",
                "operationId": "Templates_GetDocumentTemplates",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/templateInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listTemplatesForDocument"
            },
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Adds templates to a document in an  envelope.",
                "description": "Adds templates to a document in the specified envelope.",
                "operationId": "Templates_PostDocumentTemplates",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "preserve_template_recipient",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "documentTemplateList",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/documentTemplateList"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentTemplateList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "applyTemplateToDocument"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/templates/{templateId}": {
            "delete": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Deletes a template from a document in an existing envelope.",
                "description": "Deletes the specified template from a document in an existing envelope.",
                "operationId": "Templates_DeleteDocumentTemplates",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteTemplatesFromDocument"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/email_settings": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets the email setting overrides for an envelope.",
                "description": "Retrieves the email override settings for the specified envelope.",
                "operationId": "EmailSettings_GetEmailSettings",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/emailSettings"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getEmailSettings"
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Updates the email setting overrides for an envelope.",
                "description": "Updates the existing email override settings for the specified envelope. Note that modifying email settings will only affect email communications that occur after the modification was made.\n\nThis can also be used to delete an individual email override setting by using an empty string for the value to be deleted.",
                "operationId": "EmailSettings_PutEmailSettings",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "emailSettings",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/emailSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/emailSettings"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateEmailSettings"
            },
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Adds email setting overrides to an envelope.",
                "description": "Adds email override settings, changing the email address to reply to an email address, name, or the BCC for email archive information, for the envelope. Note that adding email settings will only affect email communications that occur after the addition was made.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.",
                "operationId": "EmailSettings_PostEmailSettings",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "emailSettings",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/emailSettings"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/emailSettings"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createEmailSettings"
            },
            "delete": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Deletes the email setting overrides for an envelope.",
                "description": "Deletes all existing email override settings for the envelope. If you want to delete an individual email override setting, use the PUT and set the value to an empty string. Note that deleting email settings will only affect email communications that occur after the deletion and the normal account email settings are used for future email communications.",
                "operationId": "EmailSettings_DeleteEmailSettings",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/emailSettings"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteEmailSettings"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/form_data": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Returns envelope form data for an existing envelope.",
                "operationId": "FormData_GetFormData",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeFormData"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getFormData",
                "description": "This method downloads the envelope and tab data (also called form data) from any in-process, completed, or canceled envelope that you sent or that is shared with you. Recipients who are also full administrators on an account can view form data for any envelopes that another user on the account has sent to them.\n\n**Note:** To use this feature, the Sending Setting \"Allow sender to download form data\" must be enabled for the account.\n\n### Related topics\n\n- [How to get envelope tab values](/docs/esign-rest-api/how-to/get-envelope-tab-values/)\n"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/html_definitions": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Get the Original HTML Definition used to generate the Responsive HTML for the envelope.",
                "operationId": "ResponsiveHtml_GetEnvelopeHtmlDefinitions",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentHtmlDefinitionOriginals"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getEnvelopeHtmlDefinitions",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/lock": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets envelope lock information.",
                "description": "Retrieves general information about the envelope lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.",
                "operationId": "Lock_GetEnvelopeLock",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/lockInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getLock"
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Updates an envelope lock.",
                "description": "Updates the lock duration time or update the `lockedByApp` property information for the specified envelope. The user and integrator key must match the user specified by the `lockByUser` property and integrator key information and the `X-DocuSign-Edit` header must be included or an error will be generated.",
                "operationId": "Lock_PutEnvelopeLock",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lockRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/lockRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/lockInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateLock"
            },
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Lock an envelope.",
                "description": "Locks the specified envelope, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the envelope.\n\n###### Note: Users must have envelope locking capability enabled to use this function (userSetting `canLockEnvelopes` must be  set to true for the user).",
                "operationId": "Lock_PostEnvelopeLock",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lockRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/lockRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/lockInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createLock"
            },
            "delete": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Deletes an envelope lock.",
                "description": "Deletes the lock from the specified envelope. The `X-DocuSign-Edit` header must be included in the request.",
                "operationId": "Lock_DeleteEnvelopeLock",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/lockInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteLock"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/notification": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets envelope notification information.",
                "description": "Retrieves the envelope notification, reminders and expirations, information for an existing envelope.",
                "operationId": "Notification_GetEnvelopesEnvelopeIdNotification",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/notification"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getNotificationSettings"
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Sets envelope notification (Reminders/Expirations) structure for an existing envelope.",
                "operationId": "Notification_PutEnvelopesEnvelopeIdNotification",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeNotificationRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeNotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/notification"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateNotificationSettings",
                "description": "This method sets the notifications (reminders and expirations) for an existing envelope. The request body sends a structure containing reminders and expirations settings. It also specifies whether to use the settings specified in the request, or the account default notification settings for the envelope.\n\nNote that this request only specifies when notifications are sent; it does not initiate sending of email messages."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets the status of recipients for an envelope.",
                "description": "Retrieves the status of all recipients in a single envelope and identifies the current recipient in the routing list. \n\nThe `currentRoutingOrder` property of the response contains the `routingOrder` value of the current recipient indicating that the envelope has been sent to the recipient, but the recipient has not completed their actions.",
                "operationId": "Recipients_GetRecipients",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_anchor_tab_locations",
                        "in": "query",
                        "description": " When set to **true** and `include_tabs` is set to **true**, all tabs with anchor tab properties are included in the response. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_extended",
                        "in": "query",
                        "description": " When set to **true**, the extended properties are included in the response. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_metadata",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_tabs",
                        "in": "query",
                        "description": "When set to **true**, the tab information associated with the recipient is included in the response.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/recipients"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listRecipients"
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Updates recipients in a draft envelope or corrects recipient information for an in process envelope.",
                "description": "Updates recipients in a draft envelope or corrects recipient information for an in process envelope. \n\nFor draft envelopes, you can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.\n\nOnce an envelope has been sent, you can only edit: `email`, `userName`, `signerName`, `routingOrder`, `faxNumber`, and `deliveryMethod`. You can also select to resend an envelope by using the `resend_envelope` option.\n\nIf you send information for a recipient that does not already exist in a draft envelope, the recipient is added to the envelope (similar to the POST).",
                "operationId": "Recipients_PutRecipients",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "combine_same_order_recipients",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offline_signing",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "resend_envelope",
                        "in": "query",
                        "description": "When set to **true**, resends the   envelope if the new recipient's routing order is before or the same as the envelope's next recipient.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "recipients",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/recipients"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/recipientsUpdateSummary"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateRecipients"
            },
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Adds one or more recipients to an envelope.",
                "description": "Adds one or more recipients to an envelope.\n\nFor an in process envelope, one that has been sent and has not been completed or voided, an email is sent to a new recipient when they are reached in the routing order. If the new recipient's routing order is before or the same as the envelope's next recipient, an email is only sent if the optional `resend_envelope` query string is set to **true**.",
                "operationId": "Recipients_PostRecipients",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "resend_envelope",
                        "in": "query",
                        "description": "When set to **true**, resends the   envelope if the new recipient's routing order is before or the same as the envelope's next recipient.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "recipients",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/recipients"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/recipients"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createRecipient"
            },
            "delete": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Deletes recipients from an envelope.",
                "description": "Deletes one or more recipients from a draft or sent envelope. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.\n\nIf the envelope is `In Process`, meaning that it has been sent and has not  been completed or voided, recipients that have completed their actions cannot be deleted.",
                "operationId": "Recipients_DeleteRecipients",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipients",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/recipients"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/recipients"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteRecipients"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}": {
            "delete": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Deletes a recipient from an envelope.",
                "description": "Deletes the specified recipient file from the specified envelope. This cannot be used if the envelope has been sent.",
                "operationId": "Recipients_DeleteRecipient",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/recipients"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteRecipient"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/consumer_disclosure": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets the Electronic Record and Signature Disclosure associated with the account.",
                "description": "Retrieves the Electronic Record and Signature Disclosure, with html formatting, associated with the account. You can use an optional query string to set the language for the disclosure.",
                "operationId": "ConsumerDisclosure_GetConsumerDisclosureEnvelopeIdRecipientId",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "langCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/consumerDisclosure"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getConsumerDisclosureDefault"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/consumer_disclosure/{langCode}": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Reserved: Gets the Electronic Record and Signature Disclosure associated with the account.",
                "description": "Reserved: Retrieves the Electronic Record and Signature Disclosure, with HTML formatting, associated with the account.",
                "operationId": "ConsumerDisclosure_GetConsumerDisclosureEnvelopeIdRecipientIdLangCode",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "langCode",
                        "in": "path",
                        "description": "The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "langCode",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/consumerDisclosure"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getConsumerDisclosure"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/document_visibility": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Returns document visibility for the recipients",
                "operationId": "Recipients_GetRecipientDocumentVisibility",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentVisibilityList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getRecipientDocumentVisibility",
                "description": "This method returns information about document visibility for a recipient."
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Updates document visibility for the recipients",
                "operationId": "Recipients_PutRecipientDocumentVisibility",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentVisibilityList",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/documentVisibilityList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentVisibilityList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateRecipientDocumentVisibility",
                "description": "This method updates document visibility for a recipient.\n\n**Note:** A document cannot be hidden from a recipient if the recipient has tabs assigned to them on the document. Carbon Copy, Certified Delivery (Needs to Sign), Editor, and Agent recipients can always see all documents."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/identity_proof": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns a link to access to the identity events stored in the proof service related to this recipient.",
                "operationId": "Recipients_PostRecipientProofFileLink",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/idEvidenceViewLink"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createRecipientProofFileLink",
                "x-ds-api-status": "beta",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/identity_proof_token": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns a resource token to get access to the identity events stored in the proof service related to this recipient.",
                "operationId": "Recipients_PostRecipientProofFileResourceToken",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "token_scopes",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/idEvidenceResourceToken"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createRecipientProofFileResourceToken",
                "x-ds-api-status": "beta",
                "description": "Creates a resource token for a sender. This token allows a sender to return identification data for a recipient using the [ID Evidence API](/docs/idevidence-api/)."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/initials_image": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets the initials image for a user.",
                "description": "Retrieves the initials image for the specified user. The image is returned in the same format as it was uploaded. In the request you can specify if the chrome (the added line and identifier around the initial image) is returned with the image.\n\nThe userId specified in the endpoint must match the authenticated user's user id and the user must be a member of the account.\n\nThe `signatureIdOrName` paramter accepts signature ID or signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly URL encode. If you use the user name, it is likely that the name includes spaces and you might need to URL encode the name before using it in the endpoint. \n\nFor example: \"Bob Smith\" to \"Bob%20Smith\"\n\nOlder envelopes might only contain chromed images. If getting the non-chromed image fails, try getting the chromed image.",
                "operationId": "Recipients_GetRecipientInitialsImage",
                "consumes": [],
                "produces": [
                    "image/gif"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_chrome",
                        "in": "query",
                        "description": "The added line and identifier around the initial image. Note: Older envelopes might only have chromed images. If getting the non-chromed image fails, try getting the chromed image.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getRecipientInitialsImage"
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Sets the initials image for an accountless signer.",
                "description": "Updates the initials image for a signer that does not have a DocuSign account. The supported image formats for this file are: gif, png, jpeg, and bmp. The file size must be less than 200K.\n\nFor the Authentication/Authorization for this call, the credentials must match the sender of the envelope, the recipient must be an accountless signer or in person signer. The account must have the `CanSendEnvelope` property set to **true** and the `ExpressSendOnly` property in `SendingUser` structure must be set to **false**.",
                "operationId": "Recipients_PutRecipientInitialsImage",
                "consumes": [
                    "image/gif"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateRecipientInitialsImage"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/signature": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets signature information for a signer or sign-in-person recipient.",
                "description": "Retrieves signature information for a signer or sign-in-person recipient.",
                "operationId": "Recipients_GetRecipientSignature",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userSignature"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getRecipientSignature"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/signature_image": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Retrieve signature image information for a signer/sign-in-person recipient.",
                "description": "Retrieves the specified user signature image. The image is returned in the same format as uploaded. In the request you can specify if the chrome (the added line and identifier around the initial image) is returned with the image.\n\nThe userId specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureIdOrName` parameter accepts signature ID or signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that don't properly URL encode. If you use the user name, it is likely that the name includes spaces and you might need to URL encode the name before using it in the endpoint. \n\nFor example: \"Bob Smith\" to \"Bob%20Smith\"\n\nOlder envelopes might only have chromed images. If getting the non-chromed image fails, try getting the chromed image.",
                "operationId": "Recipients_GetRecipientSignatureImage",
                "consumes": [],
                "produces": [
                    "image/gif"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_chrome",
                        "in": "query",
                        "description": "When set to **true**, indicates the chromed version of the signature image should be retrieved.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getRecipientSignatureImage"
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Sets the signature image for an accountless signer.",
                "description": "Updates the signature image for an accountless signer. The supported image formats for this file are: gif, png, jpeg, and bmp. The file size must be less than 200K.\n\nFor the Authentication/Authorization for this call, the credentials must match the sender of the envelope, the recipient must be an accountless signer or in person signer. The account must have the `CanSendEnvelope` property set to **true** and the `ExpressSendOnly` property in `SendingUser` structure must be set to **false**.",
                "operationId": "Recipients_PutRecipientSignatureImage",
                "consumes": [
                    "image/gif"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateRecipientSignatureImage"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/tabs": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets the tabs information for a signer or sign-in-person recipient in an envelope.",
                "description": "Retrieves information about the tabs associated with a recipient in a draft envelope.",
                "operationId": "Recipients_GetRecipientTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_anchor_tab_locations",
                        "in": "query",
                        "description": "When set to **true**, all tabs with anchor tab properties are included in the response. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_metadata",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listTabs"
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Updates the tabs for a recipient.\n\n",
                "description": "Updates one or more tabs for a recipient in a draft envelope.",
                "operationId": "Recipients_PutRecipientTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tabs",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateTabs"
            },
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Adds tabs for a recipient.",
                "description": "Adds one or more tabs for a recipient.",
                "operationId": "Recipients_PostRecipientTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tabs",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createTabs"
            },
            "delete": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Deletes the tabs associated with a recipient.",
                "description": "Deletes one or more tabs associated with a recipient in a draft envelope.",
                "operationId": "Recipients_DeleteRecipientTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tabs",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteTabs"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/views/identity_manual_review": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Provides a link to access the Identity manual review related to a recipient.",
                "operationId": "Views_PostRecipientManualReviewView",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/viewUrl"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createRecipientManualReviewView",
                "description": "This method returns the URL of the page that allows a sender to [manually review](https://support.docusign.com/en/guides/ndse-user-guide-send-documents-with-id-verification) the ID of a recipient. "
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/document_visibility": {
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Updates document visibility for the recipients",
                "operationId": "Recipients_PutRecipientsDocumentVisibility",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentVisibilityList",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/documentVisibilityList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentVisibilityList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateRecipientsDocumentVisibility",
                "description": "This method updates document visibility for one or more recipients based on the `recipientId` and `visible` values that you include in the request body.\n\n**Note:** A document cannot be hidden from a recipient if the recipient has tabs assigned to them on the document. Carbon Copy, Certified Delivery (Needs to Sign), Editor, and Agent recipients can always see all documents."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/responsive_html_preview": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Get Responsive HTML Preview for all documents in an envelope.",
                "operationId": "ResponsiveHtml_PostResponsiveHtmlPreview",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentHtmlDefinition",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/documentHtmlDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentHtmlDefinitions"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createResponsiveHtmlPreview",
                "description": "Creates a preview of the\n[responsive](/docs/esign-rest-api/esign101/concepts/responsive/),\nHTML versions of all of the documents in an\nenvelope. This method enables you to preview the\nPDF document conversions to responsive HTML across\ndevice types prior to sending.\n\nThe request body is a `documentHtmlDefinition`\nobject, which holds the responsive signing\nparameters that define how to generate the HTML\nversion of the documents.\n"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/tabs_blob": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Get encrypted tabs for envelope.",
                "operationId": "TabsBlob_GetTabsBlob",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getTabsBlob",
                "description": ""
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Update encrypted tabs for envelope.",
                "operationId": "TabsBlob_PutTabsBlob",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateTabsBlob",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/templates": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Get List of Templates used in an Envelope",
                "description": "This returns a list of the server-side templates, their name and ID, used in an envelope.\n",
                "operationId": "Templates_GetEnvelopeTemplates",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "The possible values are:  matching_applied - This returns template matching information for the template.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/templateInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listTemplates"
            },
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Adds templates to an envelope.",
                "description": "Adds templates to the specified envelope.",
                "operationId": "Templates_PostEnvelopeTemplates",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "preserve_template_recipient",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "documentTemplateList",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/documentTemplateList"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentTemplateList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "applyTemplate"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/views/correct": {
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Returns a URL to the envelope correction UI.",
                "description": "Returns a URL that allows you to embed the envelope correction view of the DocuSign UI in your applications.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. ",
                "operationId": "Views_PostEnvelopeCorrectView",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "correctViewRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/correctViewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/viewUrl"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createCorrectView"
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Revokes the correction view URL to the Envelope UI",
                "operationId": "Views_DeleteEnvelopeCorrectView",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "correctViewRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/correctViewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteEnvelopeCorrectView",
                "description": "Revokes the correction view URL to the Envelope UI."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/views/edit": {
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Returns a URL to the edit view UI.",
                "description": "Returns a URL that allows you to embed the edit view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign editing view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. ",
                "operationId": "Views_PostEnvelopeEditView",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeViewRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeViewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/viewUrl"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createEditView"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/views/recipient": {
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Returns a URL to the recipient view UI.",
                "description": "Returns a URL that allows you to embed the recipient view of the DocuSign UI in your applications. This call cannot be used to view draft envelopes, since those envelopes have not been sent. \n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. \n\nAn entry is added into the Security Level section of the DocuSign Certificate of Completion that reflects the `securityDomain` and `authenticationMethod` properties used to verify the user identity.",
                "operationId": "Views_PostEnvelopeRecipientView",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientViewRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/recipientViewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/viewUrl"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createRecipientView"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/views/recipient_preview": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Provides a URL to start a recipient view of the Envelope UI",
                "operationId": "Views_PostEnvelopeRecipientPreview",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientPreviewRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/recipientPreviewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/viewUrl"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createEnvelopeRecipientPreview",
                "description": "This method returns a URL for an envelope recipient preview  in the DocuSign UI that you can embed in your application. You use this method to enable the sender to preview the recipients' experience.\n\nFor more information, see [Preview and Send](https://support.docusign.com/en/guides/ndse-user-guide-send-your-documents)."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/views/sender": {
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Returns a URL to the sender view UI.",
                "description": "Returns a URL that allows you to embed the sender view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign sending view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. ",
                "operationId": "Views_PostEnvelopeSenderView",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeViewRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeViewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/viewUrl"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createSenderView"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/views/shared": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Provides a URL to start a shared recipient view of the Envelope UI",
                "operationId": "Views_PostEnvelopeRecipientSharedView",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientViewRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/recipientViewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/viewUrl"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createEnvelopeRecipientSharedView",
                "description": "Returns a URL that enables you to embed the DocuSign UI recipient view of a [shared envelope](https://support.docusign.com/en/guides/ndse-admin-guide-share-envelopes) in your applications. This is the view that a user sees of an envelope that a recipient on the same account has shared with them.\n\nDue to screen space issues,\ndo not use an `<iframe>` for embedded operations on mobile devices.\nFor iOS devices, DocuSign recommends using a WebView.\n\n### Revoking the URL\n\nYou can revoke this URL by making\na DELETE HTTP request to the URL\nwith no request body.\n\n### Related topics\n\n- [Embedded signing and sending](/docs/esign-rest-api/esign101/concepts/embedding/)\n- [How to send an envelope via your app](/docs/esign-rest-api/how-to/embedded-sending/)\n- [How to embed the DocuSign UI in your app](/docs/esign-rest-api/how-to/embed-ui/)\n"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/workflow": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns the workflow definition for an envelope.",
                "operationId": "EnvelopeWorkflowDefinitionV2_GetEnvelopeWorkflowDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workflow"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getEnvelopeWorkflowDefinition",
                "description": "Returns an envelope's workflow definition if the envelope specified by `envelopeId` has one."
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates the envelope workflow definition for an envelope.",
                "operationId": "EnvelopeWorkflowDefinitionV2_PutEnvelopeWorkflowDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflow",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/workflow"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workflow"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateEnvelopeWorkflowDefinition",
                "description": "Updates the specified envelope's workflow definition if  it has one."
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Delete the workflow definition for an envelope.",
                "operationId": "EnvelopeWorkflowDefinitionV2_DeleteEnvelopeWorkflowDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteEnvelopeWorkflowDefinition",
                "description": "Deletes the specified envelope's workflow definition if it has one.\n"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/workflow/scheduledSending": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns the scheduled sending rules for an envelope's workflow definition.",
                "operationId": "EnvelopeWorkflowScheduledSending_GetEnvelopeScheduledSendingDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/scheduledSending"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getEnvelopeScheduledSendingDefinition"
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates the scheduled sending rules for an envelope's workflow definition.",
                "operationId": "EnvelopeWorkflowScheduledSending_PutEnvelopeScheduledSendingDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scheduledSending",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/scheduledSending"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/scheduledSending"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateEnvelopeScheduledSendingDefinition"
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Deletes the scheduled sending rules for the envelope's workflow.",
                "operationId": "EnvelopeWorkflowScheduledSending_DeleteEnvelopeScheduledSendingDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteEnvelopeScheduledSendingDefinition"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/workflow/steps": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Creates and adds a new workflow step definition for an envelope's workflow",
                "operationId": "EnvelopeWorkflowStep_PostEnvelopeWorkflowStepDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStep",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/workflowStep"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workflowStep"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createEnvelopeWorkflowStepDefinition"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/workflow/steps/{workflowStepId}": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns the workflow step definition for an envelope by step id.",
                "operationId": "EnvelopeWorkflowStep_GetEnvelopeWorkflowStepDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStepId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workflowStep"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getEnvelopeWorkflowStepDefinition"
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates the envelope workflow step definition for an envelope.",
                "operationId": "EnvelopeWorkflowStep_PutEnvelopeWorkflowStepDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStepId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStep",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/workflowStep"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workflowStep"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateEnvelopeWorkflowStepDefinition"
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Deletes the envelope workflow step definition for an envelope's workflow by step id.",
                "operationId": "EnvelopeWorkflowStep_DeleteEnvelopeWorkflowStepDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStepId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteEnvelopeWorkflowStepDefinition"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/workflow/steps/{workflowStepId}/delayedRouting": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns the delayed routing rules for an envelope's workflow step definition.",
                "operationId": "EnvelopeWorkflowDelayedRouting_GetEnvelopeDelayedRoutingDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStepId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/delayedRouting"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getEnvelopeDelayedRoutingDefinition"
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates the delayed routing rules for an envelope's workflow step definition.",
                "operationId": "EnvelopeWorkflowDelayedRouting_PutEnvelopeDelayedRoutingDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStepId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "delayedRouting",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/delayedRouting"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/delayedRouting"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateEnvelopeDelayedRoutingDefinition"
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Deletes the delayed routing rules for the specified envelope workflow step.",
                "operationId": "EnvelopeWorkflowDelayedRouting_DeleteEnvelopeDelayedRoutingDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelopeId Guid of the envelope being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStepId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteEnvelopeDelayedRoutingDefinition"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/status": {
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets the envelope status for the specified envelopes.",
                "description": "Retrieves the envelope status for the specified envelopes.",
                "operationId": "Envelopes_PutStatus",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ac_status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "block",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "envelope_ids",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from_to_status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transaction_ids",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "envelopeIdsRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeIdsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopesInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listStatus"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/transfer_rules": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns a list of envelope transfer rules in the specified account.",
                "operationId": "EnvelopeTransferRules_GetEnvelopeTransferRules",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeTransferRuleInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getEnvelopeTransferRules",
                "description": "This method retrieves a list of envelope transfer rules associated with an account.\n\n**Note:** Only Administrators can create and use envelope transfer rules. In addition, to use envelope transfer rules, the **Transfer Custody** feature must be enabled for your account."
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Update envelope transfer rules for an account.",
                "operationId": "EnvelopeTransferRules_PutEnvelopeTransferRules",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeTransferRuleInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeTransferRuleInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeTransferRuleInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateEnvelopeTransferRules",
                "description": "This method changes the status for one or more envelope transfer rules based on the `envelopeTransferRuleId`s in the request body. You use this method to change whether or not the rules are enabled.\n\n**Note:** You cannot change any other information about the envelope transfer rule. Only Administrators can update envelope transfer rules. In addition, to use envelope transfer rules, the **Transfer Custody** feature must be enabled for your account."
            },
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Add envelope transfer rules to an account.",
                "operationId": "EnvelopeTransferRules_PostEnvelopeTransferRules",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeTransferRuleRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeTransferRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeTransferRuleInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createEnvelopeTransferRules",
                "description": "This method creates an envelope transfer rule.\n\nWhen you create an envelope transfer rule, you specify the following properties: \n\n- `eventType`\n- `fromGroups`\n- `toUser`\n- `toFolder`\n- `carbonCopyOriginalOwner`\n- `enabled`\n\n**Note:** Only Administrators can create envelope transfer rules. In addition, to use envelope transfer rules, the **Transfer Custody** feature must be enabled for your account."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/transfer_rules/{envelopeTransferRuleId}": {
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Update an envelope transfer rule for an account.",
                "operationId": "EnvelopeTransferRules_PutEnvelopeTransferRule",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeTransferRuleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeTransferRule",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeTransferRule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeTransferRule"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateEnvelopeTransferRule",
                "description": "This method changes the status of an envelope transfer rule. You use this method to change whether or not the rule is enabled.\n\nYou must include the `envelopeTransferRuleId` both as a query parameter, and in the request body.\n\n**Note:** You cannot change any other information about the envelope transfer rule. Only Administrators can update an envelope transfer rule. In addition, to use envelope transfer rules, the **Transfer Custody** feature must be enabled for your account."
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Delete envelope transfer rules for an account.",
                "operationId": "EnvelopeTransferRules_DeleteEnvelopeTransferRules",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeTransferRuleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteEnvelopeTransferRules",
                "description": "This method deletes an envelope transfer rule.\n\n**Note:** Only Administrators can delete envelope transfer rules. In addition, to use envelope transfer rules, the **Transfer Custody** feature must be enabled for your account."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/favorite_templates": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Retrieves the list of favorited templates for this caller",
                "operationId": "FavoriteTemplates_GetFavoriteTemplates",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/favoriteTemplatesInfo"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getFavoriteTemplates",
                "x-ds-api-status": "beta",
                "description": ""
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Favorites a template",
                "operationId": "FavoriteTemplates_PutFavoriteTemplate",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "favoriteTemplatesInfo",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/favoriteTemplatesInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/favoriteTemplatesInfo"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateFavoriteTemplate",
                "x-ds-api-status": "beta",
                "description": ""
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Unfavorite a template",
                "operationId": "FavoriteTemplates_UnFavoriteTemplate",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "favoriteTemplatesInfo",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/favoriteTemplatesInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/favoriteTemplatesInfo"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "unFavoriteTemplate",
                "x-ds-api-status": "beta",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/folders": {
            "get": {
                "tags": [
                    "Folders"
                ],
                "summary": "Gets a list of the folders for the account.",
                "description": "Retrieves a list of the folders for the account, including the folder hierarchy. You can specify whether to return just the template folder or template folder and normal folders by setting the `template` query string parameter.",
                "operationId": "Folders_GetFolders",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_items",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sub_folder_depth",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "template",
                        "in": "query",
                        "description": "Specifies the items that are returned. Valid values are: \n\n* include - The folder list will return normal folders plus template folders. \n* only - Only the list of template folders are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_filter",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/foldersResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "list"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/folders/{folderId}": {
            "get": {
                "tags": [
                    "Folders"
                ],
                "summary": "Gets a list of the envelopes in the specified folder.",
                "description": "Retrieves a list of the envelopes in the specified folder. You can narrow the query by specifying search criteria in the query string parameters.",
                "operationId": "Folders_GetFolderItems",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "folderId",
                        "in": "path",
                        "description": "The ID of the folder being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": " Only return items on or after this date. If no value is provided, the default search is the previous 30 days. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_items",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner_email",
                        "in": "query",
                        "description": " The email of the folder owner. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner_name",
                        "in": "query",
                        "description": " The name of the folder owner. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_text",
                        "in": "query",
                        "description": " The search text used to search the items of the envelope. The search looks at recipient names and emails, envelope custom fields, sender name, and subject. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "description": "The position of the folder items to return. This is used for repeated calls, when the number of envelopes returned is too much for one return (calls return 100 envelopes at a time). The default value is 0.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The current status of the envelope. If no value is provided, the default search is all/any status.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Only return items up to this date. If no value is provided, the default search is to the current date.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/folderItemsResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listItems"
            },
            "put": {
                "tags": [
                    "Folders"
                ],
                "summary": "Moves an envelope from its current folder to the specified folder.",
                "description": "Moves envelopes to the specified folder.",
                "operationId": "Folders_PutFolderById",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "folderId",
                        "in": "path",
                        "description": "The ID of the folder being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "foldersRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/foldersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/foldersResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "moveEnvelopes"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/groups": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Gets information about groups associated with the account.",
                "description": "Retrieves information about groups associated with the account.",
                "operationId": "Groups_GetGroups",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of records to return. The number must be greater than 1 and less than or equal to 100.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "group_type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_usercount",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_text",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "description": "Starting value for the list.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/groupInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listGroups"
            },
            "put": {
                "tags": [
                    "Groups"
                ],
                "summary": "Updates the group information for a group.",
                "description": "Updates the group name and modifies, or sets, the permission profile for the group.",
                "operationId": "Groups_PutGroups",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/groupInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/groupInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateGroups"
            },
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Creates one or more groups for the account.",
                "description": "Creates one or more groups for the account.\n\nGroups can be used to help manage users by associating users with a group. You can associate a group with a Permission Profile, which sets the user permissions for users in that group without having to set the `userSettings` property for each user. You are not required to set Permission Profiles for a group, but it makes it easier to manage user permissions for a large number of users. You can also use groups with template sharing to limit user access to templates.",
                "operationId": "Groups_PostGroups",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/groupInformation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/groupInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createGroups"
            },
            "delete": {
                "tags": [
                    "Groups"
                ],
                "summary": "Deletes an existing user group.",
                "description": "Deletes an existing user group.",
                "operationId": "Groups_DeleteGroups",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/groupInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/groupInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteGroups"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/groups/{groupId}/brands": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Gets group brand ID Information.\n",
                "description": "Retrieves information about the brands associated with the requested group.",
                "operationId": "Brands_GetGroupBrands",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The ID of the group being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/brandsResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBrands"
            },
            "put": {
                "tags": [
                    "Groups"
                ],
                "summary": "Adds group brand ID information to a group.",
                "description": "Adds group brand ID information to a group.",
                "operationId": "Brands_PutGroupBrands",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The ID of the group being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brandsRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/brandsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/brandsResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateBrands"
            },
            "delete": {
                "tags": [
                    "Groups"
                ],
                "summary": "Deletes brand information from the requested group.",
                "description": "Deletes brand information from the requested group.",
                "operationId": "Brands_DeleteGroupBrands",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The ID of the group being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brandsRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/brandsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/brandsResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteBrands"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/groups/{groupId}/users": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Gets a list of users in a group.",
                "description": "Retrieves a list of users in a group.",
                "operationId": "Groups_GetGroupUsers",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The ID of the group being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of records to return. The number must be greater than 1 and less than or equal to 100. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "description": "Starting value for the list.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/usersResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listGroupUsers"
            },
            "put": {
                "tags": [
                    "Groups"
                ],
                "summary": "Adds one or more users to an existing group.",
                "description": "Adds one or more users to an existing group.",
                "operationId": "Groups_PutGroupUsers",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The ID of the group being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userInfoList",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/userInfoList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/usersResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateGroupUsers"
            },
            "delete": {
                "tags": [
                    "Groups"
                ],
                "summary": "Deletes one or more users from a gro",
                "description": "Deletes one or more users from a group.\n",
                "operationId": "Groups_DeleteGroupUsers",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The ID of the group being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userInfoList",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/userInfoList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/usersResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteGroupUsers"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/identity_verification": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Get the list of identity verification options for an account",
                "operationId": "AccountIdentityVerification_GetAccountIdentityVerification",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "identity_verification_workflow_status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountIdentityVerificationResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getAccountIdentityVerification",
                "description": "This method returns a list of Identity Verification workflows that are available to an account.\n\n**Note:** To use this method, you must either be an account administrator or a sender.\n\n### Related topics\n\n- [How to require ID Verification (IDV) for a recipient](/docs/esign-rest-api/how-to/id-verification/)\n\n"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/payment_gateway_accounts": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get all payment gateway account for the provided accountId",
                "operationId": "PaymentGatewayAccounts_GetAllPaymentGatewayAccounts",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/paymentGatewayAccountsInfo"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getAllPaymentGatewayAccounts",
                "x-ds-api-status": "beta",
                "description": "This method returns a list of payment gateway accounts and basic information about them."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/permission_profiles": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets a list of permission profiles.",
                "description": "Retrieves a list of Permission Profiles. Permission Profiles are a standard set of user permissions that you can apply to individual users or users in a Group. This makes it easier to manage user permissions for a large number of users, without having to change permissions on a user-by-user basis.\n\nCurrently, Permission Profiles can only be created and modified in the DocuSign console.",
                "operationId": "PermissionProfiles_GetPermissionProfiles",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/permissionProfileInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listPermissions"
            },
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Creates a new permission profile in the specified account.",
                "operationId": "PermissionProfiles_PostPermissionProfiles",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "permissionProfile",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/permissionProfile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/permissionProfile"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createPermissionProfile",
                "description": "This method creates a new permission profile for an account.\n\n### Related topics\n\n- [How to create a permission profile](/docs/esign-rest-api/how-to/permission-profile-creating/)\n"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/permission_profiles/{permissionProfileId}": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Returns a permissions profile in the specified account.",
                "operationId": "PermissionProfiles_GetPermissionProfile",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "permissionProfileId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/permissionProfile"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getPermissionProfile",
                "description": "This method returns information about a specific permission profile that is associated with an account.\n\n### Related topics\n\n- [How to set a permission profile](/docs/esign-rest-api/how-to/permission-profile-setting/)\n"
            },
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Updates a permission profile within the specified account.",
                "operationId": "PermissionProfiles_PutPermissionProfiles",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "permissionProfileId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "permissionProfile",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/permissionProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/permissionProfile"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updatePermissionProfile",
                "description": "This method updates an account permission profile.\n\n### Related topics\n\n- [How to update individual permission settings](/docs/esign-rest-api/how-to/permission-profile-updating/)\n"
            },
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Deletes a permissions profile within the specified account.",
                "operationId": "PermissionProfiles_DeletePermissionProfiles",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "permissionProfileId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "move_users_to",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deletePermissionProfile",
                "description": "This method deletes a permission profile from an account.\n\nTo delete a permission profile, it must not have any users associated with it. When you use this method to delete a permission profile, you can reassign the users associated with it to a new permission profile at the same time by using the `move_users_to` query parameter.\n\n\n### Related topics\n\n- [How to delete a permission profile](/docs/esign-rest-api/how-to/permission-profile-deleting/)"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/powerforms": {
            "get": {
                "tags": [
                    "PowerForms"
                ],
                "summary": "Returns the list of PowerForms available to the user.",
                "operationId": "PowerForms_GetPowerFormsList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_fields",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_text",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/powerFormsResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listPowerForms",
                "description": "This method returns a list of PowerForms that are available to the user."
            },
            "post": {
                "tags": [
                    "PowerForms"
                ],
                "summary": "Creates a new PowerForm.",
                "operationId": "PowerForms_PostPowerForm",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "powerForm",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/powerForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/powerForm"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createPowerForm",
                "description": "This method creates a new PowerForm.\n\nYou create a PowerForm from an existing DocuSign [template](/docs/esign-rest-api/reference/templates/templates/create/), based on the `templateId` in the request body.\n\n PowerForms that you create from a template are referred to as *web PowerForms*.\n\n**Note:** The DocuSign Admin console also supports creating a PowerForm by uploading a PDF file that has active form fields (referred to as a *PDF PowerForm*). However, PDF PowerForms are deprecated and are not supported in the API.\n\n**Note:** A PowerForm can have only one sender. (Because PowerForms are not necessarily sent by email, this user is also referred to as the PowerForm *initiator*.) If you need to associate multiple senders with a PowerForm, create multiple copies of the PowerForm by using the same template (one copy for each sender). By default, the sender is the PowerForm Administrator who creates the PowerForm.\n\n\n### Signing modes\n\nYou can use one of the following signing modes for a PowerForm:\n\n**`email`**\n\nThis mode verifies the recipient's identity by using email authentication before the recipient can sign a document. The recipient enters their email address on the landing page and then clicks **Begin Signing** to begin the signing process. The system then sends an email message with a validation code to the recipient. If the recipient does not provide a valid email address, they do not receive the email message containing the access code and are not able to open and sign the document.\n\nAlternatively, you can make the process easier for signers by using email authentication only and omitting the access code. To do this, you append the `activateonly` flag to the PowerForm URL and set it to true by passing in the value `1`.  When the flag is active, the first recipient receives an email with a link that initiates the signing session without having to enter access code.\n\nExample: `activateonly=1`\n\n**`direct`**\n\nThis mode does not require any verification. After a recipient enters their email address on the landing page and clicks **Begin Signing,** a new browser tab opens and the recipient can immediately begin the signing process.\n\nBecause the `direct` signing mode does not verify the recipient's identity by using email authentication, we strongly recommend that you use this mode only when the PowerForm is accessible behind a secure portal where the recipient's identity is already authenticated, or where another form of authentication is specified for the recipient in the DocuSign template (for example, an access code, phone authentication, or ID check).\n\n**Note:** In the account settings, `enablePowerFormDirect` must be **true** to use `direct` as the `signingMode`.\n\n### Redirect URLs\n\nYou can control the URL to which signers are redirected after signing your PowerForm. However, the URL is specified elsewhere, outside of the PowerForm creation process. For details, see [How do I specify a URL to redirect to when a PowerForm is completed?](https://support.docusign.com/en/articles/How-do-I-specify-a-URL-to-redirect-to-when-a-Powerform-is-completed).\n\n### More information\n\nFor more information about creating PowerForms, see [Create a PowerForm](https://support.docusign.com/en/guides/ndse-user-guide-create-a-powerform).\n\n"
            },
            "delete": {
                "tags": [
                    "PowerForms"
                ],
                "summary": "Deletes one or more PowerForms",
                "operationId": "PowerForms_DeletePowerFormsList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "powerFormsRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/powerFormsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/powerFormsResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deletePowerForms",
                "description": "This method deletes one or more PowerForms. The request body takes an array of PowerForm objects that are deleted based on the `powerFormId`."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/powerforms/{powerFormId}": {
            "get": {
                "tags": [
                    "PowerForms"
                ],
                "summary": "Returns a single PowerForm.",
                "operationId": "PowerForms_GetPowerForm",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "powerFormId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/powerForm"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getPowerForm",
                "description": "This method returns detailed information about a specific PowerForm."
            },
            "put": {
                "tags": [
                    "PowerForms"
                ],
                "summary": "Creates a new PowerForm.",
                "operationId": "PowerForms_PutPowerForm",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "powerFormId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "powerForm",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/powerForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/powerForm"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updatePowerForm",
                "description": "This method updates an existing PowerForm."
            },
            "delete": {
                "tags": [
                    "PowerForms"
                ],
                "summary": "Delete a PowerForm.",
                "operationId": "PowerForms_DeletePowerForm",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "powerFormId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deletePowerForm",
                "description": "This method deletes a PowerForm."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/powerforms/{powerFormId}/form_data": {
            "get": {
                "tags": [
                    "PowerForms"
                ],
                "summary": "Returns the form data associated with the usage of a PowerForm.",
                "operationId": "PowerForms_GetPowerFormFormData",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "powerFormId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "data_layout",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/powerFormsFormDataResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getPowerFormData",
                "description": "This method enables Powerform Administrators or the sender of a PowerForm to download the data that recipients have entered into a PowerForm.\n\nYou specify the format in which you want to retrieve the data in the `Accept` header. This header accepts the following values:\n\n\n- `application/json`: JSON format\n- `application/xml`: XML format\n- `text/csv`: Comma-separated value (CSV) format\n\n**Note:** Only PowerForm Administrators or the PowerForm Sender can download the data associated with a PowerForm."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/powerforms/senders": {
            "get": {
                "tags": [
                    "PowerForms"
                ],
                "summary": "Returns the list of PowerForms available to the user.",
                "operationId": "PowerForms_GetPowerFormsSenders",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/powerFormSendersResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listPowerFormSenders",
                "description": "This method returns a list of users who have sent PowerForms."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/recipient_names": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets recipient names associated with an email address.",
                "description": "Retrieves a list of recipients in the specified account that are associated with a email address supplied in the query string.",
                "operationId": "RecipientNames_GetRecipientNames",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email address for the user",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/recipientNamesResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listRecipientNamesByEmail"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/seals": {
            "get": {
                "tags": [
                    "TrustServiceProviders"
                ],
                "summary": "Returns Account available seals for specified account.",
                "operationId": "AccountSignatureProviders_GetSealProviders",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountSeals"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getSealProviders",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/search_folders/{searchFolderId}": {
            "get": {
                "tags": [
                    "Folders"
                ],
                "summary": "Gets a list of envelopes in folders matching the specified criteria.",
                "description": "Retrieves a list of envelopes that match the criteria specified in the query.\n\nIf the user ID of the user making the call is the same as the user ID for any returned recipient, then the userId property is added to the returned information for those recipients.",
                "operationId": "SearchFolders_GetSearchFolderContents",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchFolderId",
                        "in": "path",
                        "description": "Specifies the envelope group that is searched by the request. These are logical groupings, not actual folder names. Valid values are: drafts, awaiting_my_signature, completed, out_for_signature.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "description": "Specifies that all envelopes that match the criteria are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Specifies the number of records returned in the cache. The number must be greater than 0 and less than or equal to 100.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Specifies the start of the date range to return. If no value is provided, the default search is the previous 30 days.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_recipients",
                        "in": "query",
                        "description": "When set to **true**, the recipient information is returned in the response.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Specifies the order in which the list is returned. Valid values are: `asc` for ascending order, and `desc` for descending order.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Specifies the property used to sort the list. Valid values are: `action_required`, `created`, `completed`, `sent`, `signer_list`, `status`, or `subject`.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "description": "Specifies the the starting location in the result set of the items that are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Specifies the end of the date range to return.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/folderItemResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "search"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/settings": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets account settings information.",
                "description": "Retrieves the account settings information for the specified account.",
                "operationId": "Settings_GetSettings",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountSettingsInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listSettings"
            },
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Updates the account settings for an account.",
                "description": "Updates the account settings for the specified account.",
                "operationId": "Settings_PutSettings",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountSettingsInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/accountSettingsInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateSettings"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/settings/bcc_email_archives": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Get the blind carbon copy email archive entries owned by the specified account",
                "operationId": "BCCEmailArchive_GetBCCEmailArchiveList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bccEmailArchiveList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBCCEmailArchiveList",
                "description": "This method retrieves all of the BCC email archive configurations associated with an account."
            },
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Creates a blind carbon copy email archive entry",
                "operationId": "BCCEmailArchive_PostBCCEmailArchive",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bccEmailArchive",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/bccEmailArchive"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bccEmailArchive"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createBCCEmailArchive",
                "description": "This method creates a BCC email archive configuration for an account (adds a BCC email address to the account for archiving the emails that DocuSign generates).\n\nThe only property that you must set in the request body is the BCC email address that you want to use.\n\n**Note:** An account can have up to five active and pending email archive addresses combined, but you must use this method to add them to the account one at a time. Each email address is considered a separate BCC email archive configuration.\n"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/settings/bcc_email_archives/{bccEmailArchiveId}": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Get the blind carbon copy email archive history entries for the specified archive",
                "operationId": "BCCEmailArchive_GetBCCEmailArchiveHistoryList",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bccEmailArchiveId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/bccEmailArchiveHistoryList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBCCEmailArchiveHistoryList",
                "description": "This method returns a specific BCC email archive configuration for an account, as well as the history of changes to the email address."
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Delete a blind carbon copy email archive for an account.",
                "operationId": "BCCEmailArchive_DeleteBCCEmailArchive",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bccEmailArchiveId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteBCCEmailArchive",
                "description": "This method deletes a BCC email archive configuration from an account.\n\nWhen you use this method, the status of the BCC email archive configuration switches to `closed` and the BCC email address is no longer used to archive DocuSign-generated email messages.\n"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/settings/enote_configuration": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Returns the configuration information for the eNote eOriginal integration.",
                "operationId": "ENoteConfiguration_GetENoteConfiguration",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/eNoteConfiguration"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getENoteConfiguration",
                "x-ds-api-status": "beta",
                "description": ""
            },
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Updates configuration information for the eNote eOriginal integration.",
                "operationId": "ENoteConfiguration_PutENoteConfiguration",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "eNoteConfiguration",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/eNoteConfiguration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/eNoteConfiguration"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateENoteConfiguration",
                "x-ds-api-status": "beta",
                "description": ""
            },
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Deletes configuration information for the eNote eOriginal integration.",
                "operationId": "ENoteConfiguration_DeleteENoteConfiguration",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteENoteConfiguration",
                "x-ds-api-status": "beta",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/settings/envelope_purge_configuration": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Select envelope purge configuration.",
                "operationId": "EnvelopePurgeConfiguration_GetEnvelopePurgeConfiguration",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopePurgeConfiguration"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getEnvelopePurgeConfiguration",
                "x-ds-api-status": "beta",
                "description": "An envelope purge configuration enables account administrators to permanently remove documents and their field data from completed and voided envelopes after a specified retention period (`retentionDays`). This method retrieves the current envelope purge configuration for your account.\n\n**Note:** To use this method, you must be an account administrator."
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates envelope purge configuration.",
                "operationId": "EnvelopePurgeConfiguration_PutEnvelopePurgeConfiguration",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopePurgeConfiguration",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopePurgeConfiguration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopePurgeConfiguration"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateEnvelopePurgeConfiguration",
                "x-ds-api-status": "beta",
                "description": "An envelope purge configuration enables account administrators to permanently remove documents and their field data from completed and voided envelopes after a specified retention period (`retentionDays`). This method sets the envelope purge configuration for your account.\n\n**Note:** To use this method, you must be an account administrator.\n\nFor more information, see [Purge Envelopes](https://support.docusign.com/en/guides/ndse-user-guide-purge-envelopes)."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/settings/notification_defaults": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns default user level settings for a specified account",
                "operationId": "NotificationDefaults_GetNotificationDefaults",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/notificationDefaults"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getNotificationDefaults",
                "description": "This method returns the default settings for the email notifications that signers and senders receive about envelopes."
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates default user level settings for a specified account",
                "operationId": "NotificationDefaults_PutNotificationDefaults",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "notificationDefaults",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/notificationDefaults"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/notificationDefaults"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateNotificationDefaults",
                "description": "This method changes the default settings for the email notifications that signers and senders receive about envelopes."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/settings/password_rules": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get the password rules",
                "operationId": "AccountPasswordRules_GetAccountPasswordRules",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountPasswordRules"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getPasswordRules",
                "description": "This method retrieves the password rules for an account."
            },
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Update the password rules",
                "operationId": "AccountPasswordRules_PutAccountPasswordRules",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountPasswordRules",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/accountPasswordRules"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountPasswordRules"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updatePasswordRules",
                "description": "This method updates the password rules for an account.\n\n**Note:** To update the password rules for an account, you must be an account administrator."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/settings/tabs": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Returns tab settings list for specified account",
                "operationId": "TabSettings_GetTabSettings",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabAccountSettings"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getAccountTabSettings",
                "description": "This method returns information about the tab types and tab functionality that is currently enabled for an account."
            },
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Modifies tab settings for specified account",
                "operationId": "TabSettings_PutSettings",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tabAccountSettings",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/tabAccountSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabAccountSettings"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateAccountTabSettings",
                "description": "This method modifies the tab types and tab functionality that is enabled for an account."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/shared_access": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Reserved: Gets the shared item status for one or more users.",
                "description": "Reserved: Retrieves shared item status for one or more users and types of items.\n\nUsers with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves and the returned information is limited to the retrieving the status of all members of the account that are sharing their folders to the user. This is equivalent to setting the shared=shared_from.",
                "operationId": "SharedAccess_GetSharedAccess",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Specifies maximum number of results included in the response. If no value is specified, this defaults to 1000.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "envelopes_not_shared_user_status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "folder_ids",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "item_type",
                        "in": "query",
                        "description": "Specifies the type of shared item being requested. The accepted values are:\n-envelopes: returns information about envelope sharing between users.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_text",
                        "in": "query",
                        "description": "This can be used to filter user names in the response. The wild-card '*' (asterisk) can be used around the string.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "shared",
                        "in": "query",
                        "description": "Specifies which users should be included in the response. Multiple values can be used in the query by using a comma separated list of shared values. If the requestor does not have account administrator privileges, the shared_to value is used. Requestors that do not have account administrator privileges can only use the shared_to, any other setting will result in an error. The accepted values are:\n\n-not_shared: Returns account users that the specified item type is not being shared with and that are not sharing the specified item type with the user.\n\nUser X (Share) X Account user\n\n-shared_to: Returns account users that the specified item type is not being shared with and who are sharing the specified item type with the user (only shared to the user).\n\nUser X (Share) Account user\n\n-shared_from: Returns account users that the specified item type is being shared with and who are not sharing the specified item type with the user (only shared from the user).\n\nUser (Share) >> Account user\n\n-shared_to_and_from: Returns account users that the specified item type is being shared with and who are sharing the specified item type with the user.\n\nUser << (Share) >> Account user",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "description": "If the response set exceeds Count, this can be used to specify that the method should return users starting at the specified index. The first index is 0, and should be used in the first GET call. Typically this number is a multiple of Count. If no value is specified, this defaults to be 0.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "description": "A comma separated list of userIds for whom the shared item information is being requested.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountSharedAccess"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listSharedAccess"
            },
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Reserved: Sets the shared access information for users.",
                "description": "Reserved: Sets the shared access information for one or more users.",
                "operationId": "SharedAccess_PutSharedAccess",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "item_type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "preserve_existing_shared_access",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_ids",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "accountSharedAccess",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/accountSharedAccess"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountSharedAccess"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateSharedAccess"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/signatureProviders": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Returns Account available signature providers for specified account.",
                "operationId": "AccountSignatureProviders_GetSignatureProviders",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountSignatureProviders"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listSignatureProviders",
                "description": "Returns a list of signature providers that the specified account can use."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/signatures": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns the managed signature definitions for the account",
                "operationId": "AccountSignatures_GetAccountSignatures",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stamp_format",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "stamp_name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "stamp_type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountSignaturesInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getAccountSignatures",
                "description": ""
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates a account signature.",
                "operationId": "AccountSignatures_PutAccountSignature",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountSignaturesInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/accountSignaturesInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountSignaturesInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateAccountSignature",
                "description": ""
            },
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Adds/updates one or more account signatures. This request may include images in multi-part format.",
                "operationId": "AccountSignatures_PostAccountSignatures",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "decode_only",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "accountSignaturesInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/accountSignaturesInformation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountSignaturesInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createAccountSignatures",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/signatures/{signatureId}": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns information about a single signature by specifed signatureId.",
                "operationId": "AccountSignatures_GetAccountSignature",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signatureId",
                        "in": "path",
                        "description": "The ID of the signature being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountSignature"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getAccountSignature",
                "description": ""
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates a account signature.",
                "operationId": "AccountSignatures_PutAccountSignatureById",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signatureId",
                        "in": "path",
                        "description": "The ID of the signature being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "close_existing_signature",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "accountSignatureDefinition",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/accountSignatureDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountSignature"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateAccountSignatureById",
                "description": ""
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Close the specified signature by Id.",
                "operationId": "AccountSignatures_DeleteAccountSignature",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signatureId",
                        "in": "path",
                        "description": "The ID of the signature being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteAccountSignature",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/signatures/{signatureId}/{imageType}": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns a signature, initials, or stamps image.",
                "operationId": "AccountSignatures_GetAccountSignatureImage",
                "consumes": [],
                "produces": [
                    "image/gif"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "imageType",
                        "in": "path",
                        "description": "One of **signature_image** or **initials_image**.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signatureId",
                        "in": "path",
                        "description": "The ID of the signature being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_chrome",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getAccountSignatureImage",
                "description": ""
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Sets a signature, initials, or stamps image.",
                "operationId": "AccountSignatures_PutAccountSignatureImage",
                "consumes": [
                    "image/gif"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "imageType",
                        "in": "path",
                        "description": "One of **signature_image** or **initials_image**.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signatureId",
                        "in": "path",
                        "description": "The ID of the signature being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "transparent_png",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountSignature"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateAccountSignatureImage",
                "description": ""
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Deletes a signature, initials, or stamps image.",
                "operationId": "AccountSignatures_DeleteAccountSignatureImage",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "imageType",
                        "in": "path",
                        "description": "One of **signature_image** or **initials_image**.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signatureId",
                        "in": "path",
                        "description": "The ID of the signature being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/accountSignature"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteAccountSignatureImage",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/signing_groups": {
            "get": {
                "tags": [
                    "SigningGroups"
                ],
                "summary": "Gets a list of the Signing Groups in an account.",
                "description": "Retrieves a list of all signing groups in the specified account.",
                "operationId": "SigningGroups_GetSigningGroups",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "group_type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_users",
                        "in": "query",
                        "description": "When set to **true**, the response includes the signing group members. ",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/signingGroupInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "list"
            },
            "put": {
                "tags": [
                    "SigningGroups"
                ],
                "summary": "Updates signing group names.",
                "description": "Updates the name of one or more existing signing groups. ",
                "operationId": "SigningGroups_PutSigningGroups",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signingGroupInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/signingGroupInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/signingGroupInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateList"
            },
            "post": {
                "tags": [
                    "SigningGroups"
                ],
                "summary": "Creates a signing group. ",
                "description": "Creates one or more signing groups. \n\nMultiple signing groups can be created in one call. Only users with account administrator privileges can create signing groups. \n\nAn account can have a maximum of 50 signing groups. Each signing group can have a maximum of 50 group members.\n \nSigning groups can be used by any account user.",
                "operationId": "SigningGroups_PostSigningGroups",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signingGroupInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/signingGroupInformation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/signingGroupInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createList"
            },
            "delete": {
                "tags": [
                    "SigningGroups"
                ],
                "summary": "Deletes one or more signing groups.",
                "description": "Deletes one or more signing groups in the specified account.",
                "operationId": "SigningGroups_DeleteSigningGroups",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signingGroupInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/signingGroupInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/signingGroupInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteList"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/signing_groups/{signingGroupId}": {
            "get": {
                "tags": [
                    "SigningGroups"
                ],
                "summary": "Gets information about a signing group. ",
                "description": "Retrieves information, including group member information, for the specified signing group. ",
                "operationId": "SigningGroups_GetSigningGroup",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signingGroupId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/signingGroup"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "get"
            },
            "put": {
                "tags": [
                    "SigningGroups"
                ],
                "summary": "Updates a signing group. ",
                "description": "Updates signing group name and member information. You can also add new members to the signing group. A signing group can have a maximum of 50 members. ",
                "operationId": "SigningGroups_PutSigningGroup",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signingGroupId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signingGroup",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/signingGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/signingGroup"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "update"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/signing_groups/{signingGroupId}/users": {
            "get": {
                "tags": [
                    "SigningGroups"
                ],
                "summary": "Gets a list of members in a Signing Group.",
                "description": "Retrieves the list of members in the specified Signing Group.",
                "operationId": "SigningGroups_GetSigningGroupUsers",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signingGroupId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/signingGroupUsers"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listUsers"
            },
            "put": {
                "tags": [
                    "SigningGroups"
                ],
                "summary": "Adds members to a signing group. ",
                "description": "Adds one or more new members to a signing group. A signing group can have a maximum of 50 members. ",
                "operationId": "SigningGroups_PutSigningGroupUsers",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signingGroupId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signingGroupUsers",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/signingGroupUsers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/signingGroupUsers"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateUsers"
            },
            "delete": {
                "tags": [
                    "SigningGroups"
                ],
                "summary": "Deletes  one or more members from a signing group.",
                "description": "Deletes  one or more members from the specified signing group. ",
                "operationId": "SigningGroups_DeleteSigningGroupUsers",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signingGroupId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signingGroupUsers",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/signingGroupUsers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/signingGroupUsers"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteUsers"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/supported_languages": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets list of supported languages for recipient language setting.",
                "operationId": "SupportedLanguages_GetSupportedLanguages",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/supportedLanguages"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getSupportedLanguages",
                "description": "Retrieves a list of supported languages that you can set for an individual recipient when creating an envelope, as well as their simple type enumeration values. These are the languages that you can set for the standard email format and signing view for each recipient.\n\nFor example, in the recipient's email notification, this setting affects elements such as the standard introductory text describing the request to sign. It also determines the language used for buttons and tabs in both the email notification and the signing experience.\n\n**Note:** Setting a language for a recipient affects only the DocuSign standard text. Any custom text that you enter for the `emailBody` and `emailSubject` of the notification is not translated, and appears exactly as you enter it.\n\nFor more information, see [Set Recipient Language and Specify Custom Email Messages](https://support.docusign.com/en/guides/ndse-user-guide-recipient-language)."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/tab_definitions": {
            "get": {
                "tags": [
                    "CustomTabs"
                ],
                "summary": "Gets a list of all account tabs.",
                "description": "Retrieves a list of all tabs associated with the account.",
                "operationId": "Tabs_GetTabDefinitions",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "custom_tab_only",
                        "in": "query",
                        "description": "When set to **true**, only custom tabs are returned in the response. ",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabMetadataList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "list"
            },
            "post": {
                "tags": [
                    "CustomTabs"
                ],
                "summary": "Creates a custom tab.",
                "description": "Creates a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.\n\nCustom tabs can be created for approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.",
                "operationId": "Tabs_PostTabDefinitions",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tabMetadata",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/tabMetadata"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabMetadata"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "create"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/tab_definitions/{customTabId}": {
            "get": {
                "tags": [
                    "CustomTabs"
                ],
                "summary": "Gets custom tab information.",
                "description": "Retrieves information about the requested custom tab on the specified account.",
                "operationId": "Tab_GetCustomTab",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "customTabId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabMetadata"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "get"
            },
            "put": {
                "tags": [
                    "CustomTabs"
                ],
                "summary": "Updates custom tab information.\n\n",
                "description": "Updates the information in a custom tab for the specified account.",
                "operationId": "Tab_PutCustomTab",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "customTabId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tabMetadata",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/tabMetadata"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabMetadata"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "update"
            },
            "delete": {
                "tags": [
                    "CustomTabs"
                ],
                "summary": "Deletes custom tab information.",
                "description": "Deletes the custom from the specified account.",
                "operationId": "Tab_DeleteCustomTab",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "customTabId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "delete"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Gets the definition of a template.",
                "description": "Retrieves the list of templates for the specified account. The request can be limited to a specific folder.",
                "operationId": "Templates_GetTemplates",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of records to return in the cache.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_from_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_to_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "folder_ids",
                        "in": "query",
                        "description": "A comma separated list of folder ID GUIDs.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "folder_types",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "A comma separated list of additional template attributes to include in the response. Valid values are: recipients, folders, documents, custom_fields, and notifications.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_deleted_template_only",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_download",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "modified_from_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "modified_to_date",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sets the direction order used to sort the list. Valid values are: -asc = ascending sort order (a to z)  -desc = descending sort order (z to a)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sets the file attribute used to sort the list. Valid values are:  -name: template name  -modified: date/time template was last modified.  -used: date/time the template was last used.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_fields",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_text",
                        "in": "query",
                        "description": "The search text used to search the names of templates.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "shared_by_me",
                        "in": "query",
                        "description": "If true, the response only includes templates shared by the user. If false, the response only returns template not shared by the user. If not specified, the response is not affected.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "description": "The starting index for the first template shown in the response. This must be greater than or equal to 0 (zero).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "template_ids",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "used_from_date",
                        "in": "query",
                        "description": "Start of the search date range. Only returns templates used or edited on or after this date/time. If no value is specified, there is no limit on the earliest date used.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "used_to_date",
                        "in": "query",
                        "description": "End of the search date range. Only returns templates used or edited up to this date/time. If no value is provided, this defaults to the current date.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_filter",
                        "in": "query",
                        "description": "Sets if the templates shown in the response Valid values are:  -owned_by_me: only shows templates the user owns.  -shared_with_me: only shows templates that are shared with the user.  -all: shows all templates owned or shared with the user.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeTemplateResults"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "ListTemplates"
            },
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Creates an envelope from a template.",
                "description": "Creates a template definition using a multipart request.\n\n###Template Email Subject Merge Fields\n\nCall this endpoint to insert a recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient's role name, are added to the `emailSubject` property when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n###### Note: If merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\nTo add a recipient's name in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[<roleName>_UserName]]\n\nExample:\n\n`\"emailSubject\":\"[[Signer 1_UserName]], Please sign this NDA\",`\n\nTo add a recipient's email address in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n[[<roleName>_Email]]\n\nExample:\n\n`\"emailSubject\":\"[[Signer 1_Email]], Please sign this NDA\",`\n\n\nIn both cases the <roleName> is the recipient's contents of the `roleName` property in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[<roleName>_UserName]] or [[<roleName>_Email]] is shown in the email subject.",
                "operationId": "Templates_PostTemplates",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeTemplate",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/templateSummary"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createTemplate"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Gets a list of templates for a specified account.",
                "description": "Retrieves the definition of the specified template.",
                "operationId": "Templates_GetTemplate",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeTemplate"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "get"
            },
            "put": {
                "tags": [
                    "Templates"
                ],
                "summary": "Updates an existing template.",
                "description": "Updates an existing template.",
                "operationId": "Templates_PutTemplate",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeTemplate",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/templateUpdateSummary"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "update"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/{templatePart}": {
            "put": {
                "tags": [
                    "Templates"
                ],
                "summary": "Shares a template with a group",
                "description": "Shares a template with the specified members group.",
                "operationId": "Templates_PutTemplatePart",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templatePart",
                        "in": "path",
                        "description": "Currently, the only defined part is **groups**.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/groupInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/groupInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateGroupShare"
            },
            "delete": {
                "tags": [
                    "Templates"
                ],
                "summary": "Removes a member group's sharing permissions for a template.",
                "description": "Removes a member group's sharing permissions for a specified template.",
                "operationId": "Templates_DeleteTemplatePart",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templatePart",
                        "in": "path",
                        "description": "Currently, the only defined part is **groups**.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/groupInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/groupInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteGroupShare"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/custom_fields": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Gets the custom document fields from a template.",
                "description": "Retrieves the custom document field information from an existing template.",
                "operationId": "CustomFields_GetTemplateCustomFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/customFields"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listCustomFields"
            },
            "put": {
                "tags": [
                    "Templates"
                ],
                "summary": "Updates envelope custom fields in a template.",
                "description": "Updates the custom fields in a template.\n\nEach custom field used in a template must have a unique name.",
                "operationId": "CustomFields_PutTemplateCustomFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateCustomFields",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateCustomFields"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/customFields"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateCustomFields"
            },
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Creates custom document fields in an existing template document.",
                "description": "Creates custom document fields in an existing template document.",
                "operationId": "CustomFields_PostTemplateCustomFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateCustomFields",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateCustomFields"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/customFields"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createCustomFields"
            },
            "delete": {
                "tags": [
                    "Templates"
                ],
                "summary": "Deletes envelope custom fields in a template.",
                "description": "Deletes envelope custom fields in a template.",
                "operationId": "CustomFields_DeleteTemplateCustomFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateCustomFields",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateCustomFields"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/customFields"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteCustomFields"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/documents": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Gets a list of documents associated with a template.",
                "description": "Retrieves a list of documents associated with the specified template.",
                "operationId": "Documents_GetTemplateDocuments",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_tabs",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/templateDocumentsResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listDocuments"
            },
            "put": {
                "tags": [
                    "Templates"
                ],
                "summary": "Adds documents to a template document.",
                "description": "Adds one or more documents to an existing template document.",
                "operationId": "Documents_PutTemplateDocuments",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeDefinition",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/templateDocumentsResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateDocuments"
            },
            "delete": {
                "tags": [
                    "Templates"
                ],
                "summary": "Deletes documents from a template.",
                "description": "Deletes one or more documents from an existing template.",
                "operationId": "Documents_DeleteTemplateDocuments",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "envelopeDefinition",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/templateDocumentsResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteDocuments"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Gets PDF documents from a template.",
                "description": "Retrieves one or more PDF documents from the specified template.\n\nYou can specify the ID of the document to retrieve or can specify `combined` to retrieve all documents in the template as one pdf.",
                "operationId": "Documents_GetTemplateDocument",
                "consumes": [],
                "produces": [
                    "application/pdf"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "encrypt",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file_type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "show_changes",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getDocument"
            },
            "put": {
                "tags": [
                    "Templates"
                ],
                "summary": "Adds a document to a template document.",
                "description": "Adds the specified document to an existing template document.",
                "operationId": "Documents_PutTemplateDocument",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "is_envelope_definition",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "envelopeDefinition",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/envelopeDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/envelopeDocument"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateDocument"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/fields": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Gets the custom document fields for a an existing template document.",
                "description": "Retrieves the custom document fields for an existing template document.",
                "operationId": "DocumentFields_GetTemplateDocumentFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentFieldsInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listDocumentFields"
            },
            "put": {
                "tags": [
                    "Templates"
                ],
                "summary": "Updates existing custom document fields in an existing template document.",
                "description": "Updates existing custom document fields in an existing template document.",
                "operationId": "DocumentFields_PutTemplateDocumentFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentFieldsInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/documentFieldsInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentFieldsInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateDocumentFields"
            },
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Creates custom document fields in an existing template document.",
                "description": "Creates custom document fields in an existing template document.",
                "operationId": "DocumentFields_PostTemplateDocumentFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentFieldsInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/documentFieldsInformation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentFieldsInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createDocumentFields"
            },
            "delete": {
                "tags": [
                    "Templates"
                ],
                "summary": "Deletes custom document fields from an existing template document.",
                "description": "Deletes custom document fields from an existing template document.",
                "operationId": "DocumentFields_DeleteTemplateDocumentFields",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentFieldsInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/documentFieldsInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentFieldsInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteDocumentFields"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/html_definitions": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Get the Original HTML Definition used to generate the Responsive HTML for a given document in a template.",
                "operationId": "ResponsiveHtml_GetTemplateDocumentHtmlDefinitions",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentHtmlDefinitionOriginals"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getTemplateDocumentHtmlDefinitions",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Returns document page image(s) based on input.",
                "operationId": "Pages_GetTemplatePageImages",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dpi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "max_height",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "max_width",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nocache",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "show_changes",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/pageImages"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getPages",
                "description": "Returns images of the pages in a template document for display based on the parameters that you specify."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}": {
            "delete": {
                "tags": [
                    "Templates"
                ],
                "summary": "Deletes a page from a document in an template.",
                "description": "Deletes a page from a document in a template based on the page number.",
                "operationId": "Pages_DeleteTemplatePage",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "path",
                        "description": "The page number being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/pageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteDocumentPage"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}/page_image": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Gets a page image from a template for display.",
                "description": "Retrieves a page image for display from the specified template.",
                "operationId": "Pages_GetTemplatePageImage",
                "consumes": [],
                "produces": [
                    "image/png"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "path",
                        "description": "The page number being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dpi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "max_height",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "max_width",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "show_changes",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getDocumentPageImage"
            },
            "put": {
                "tags": [
                    "Templates"
                ],
                "summary": "Rotates page image from a template for display.",
                "description": "Rotates page image from a template for display. The page image can be rotated to the left or right.",
                "operationId": "Pages_PutTemplatePageImage",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "path",
                        "description": "The page number being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/pageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "rotateDocumentPage"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}/tabs": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Returns tabs on the specified page.",
                "operationId": "Tabs_GetTemplatePageTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "path",
                        "description": "The page number being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getPageTabs",
                "description": "Returns the tabs from the page specified by `pageNumber` of the document specified by `documentId` in the\ntemplate specified by `templateId`.\n"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/responsive_html_preview": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Post Responsive HTML Preview for a document in a template.",
                "operationId": "ResponsiveHtml_PostTemplateDocumentResponsiveHtmlPreview",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentHtmlDefinition",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/documentHtmlDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentHtmlDefinitions"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createTemplateDocumentResponsiveHtmlPreview",
                "description": "Creates a preview of the\n[responsive](/docs/esign-rest-api/esign101/concepts/responsive/),\nHTML version of a specific template document. This\nmethod enables you to preview a PDF document\nconversion to responsive HTML across device types\nprior to sending.\n\nThe request body is a `documentHtmlDefinition`\nobject, which holds the responsive signing\nparameters that define how to generate the HTML\nversion of the signing document."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/tabs": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Returns tabs on the document.",
                "operationId": "Tabs_GetTemplateDocumentTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page_numbers",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getDocumentTabs",
                "description": "Returns the tabs on the document specified by `documentId` in the\ntemplate specified by `templateId`.\n\n"
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates the tabs for a template",
                "operationId": "Tabs_PutTemplateDocumentTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateTabs",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateTabs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateTemplateDocumentTabs",
                "description": "Updates tabs in the document specified by `documentId` in the\ntemplate specified by `templateId`.\n"
            },
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Adds the tabs to a tempate",
                "operationId": "Tabs_PostTemplateDocumentTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateTabs",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateTabs"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createTemplateDocumentTabs",
                "description": "Adds tabs to the document specified by `documentId` in the\ntemplate specified by `templateId`.\n\nIn the request body, you only need to specify the tabs that your\nare adding. For example, to add a text\n[prefill tab](/docs/esign-rest-api/reference/templates/templatedocumenttabs/create/#definition__templatetabs_prefilltabs),\nyour request body might look like this:\n\n```\n{\n  \"prefillTabs\": {\n    \"textTabs\": [\n      {\n        \"value\": \"a prefill text tab\",\n        \"pageNumber\": \"1\",\n        \"documentId\": \"1\",\n        \"xPosition\": 316,\n        \"yPosition\": 97\n      }\n    ]\n  }\n}\n```\n"
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Deletes tabs from an envelope document",
                "operationId": "Tabs_DeleteTemplateDocumentTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateTabs",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateTabs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteTemplateDocumentTabs",
                "description": "Deletes tabs from the document specified by `documentId` in the\ntemplate specified by `templateId`.\n"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/html_definitions": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Get the Original HTML Definition used to generate the Responsive HTML for the template.",
                "operationId": "ResponsiveHtml_GetTemplateHtmlDefinitions",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentHtmlDefinitionOriginals"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getTemplateHtmlDefinitions",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/lock": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Gets template lock information.",
                "description": "Retrieves general information about the template lock.\n\nIf the call is made by the user who has the lock and the request has the same integrator key as original, then the `X-DocuSign-Edit` header  field and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.",
                "operationId": "Lock_GetTemplateLock",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/lockInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getLock"
            },
            "put": {
                "tags": [
                    "Templates"
                ],
                "summary": "Updates a template lock.",
                "description": "Updates the lock duration time or update the `lockedByApp` property information for the specified template. The user and integrator key must match the user specified by the `lockByUser` property and integrator key information and the `X-DocuSign-Edit` header must be included or an error will be generated.",
                "operationId": "Lock_PutTemplateLock",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lockRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/lockRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/lockInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateLock"
            },
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Lock a template.",
                "description": "Locks the specified template, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the template.\n\n###### Note: Users must have envelope locking capability enabled to use this function (the userSetting property `canLockEnvelopes` must be set to **true** for the user).",
                "operationId": "Lock_PostTemplateLock",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lockRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/lockRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/lockInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createLock"
            },
            "delete": {
                "tags": [
                    "Templates"
                ],
                "summary": "Deletes a template lock.",
                "description": "Deletes the lock from the specified template. The `X-DocuSign-Edit` header must be included in the request.",
                "operationId": "Lock_DeleteTemplateLock",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lockRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/lockRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/lockInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteLock"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/notification": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Gets template notification information.",
                "description": "Retrieves the envelope notification, reminders and expirations, information for an existing template.",
                "operationId": "Notification_GetTemplatesTemplateIdNotification",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/notification"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getNotificationSettings"
            },
            "put": {
                "tags": [
                    "Templates"
                ],
                "summary": "Updates the notification  structure for an existing template.",
                "description": "Updates the notification structure for an existing template. Use this endpoint to set reminder and expiration notifications.",
                "operationId": "Notification_PutTemplatesTemplateIdNotification",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateNotificationRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateNotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/notification"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateNotificationSettings"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/recipients": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Gets recipient information from a template.",
                "description": "Retrieves the information for all recipients in the specified template.",
                "operationId": "Recipients_GetTemplateRecipients",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_anchor_tab_locations",
                        "in": "query",
                        "description": " When set to **true** and `include_tabs` is set to **true**, all tabs with anchor tab properties are included in the response. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_extended",
                        "in": "query",
                        "description": " When set to **true**, the extended properties are included in the response. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_tabs",
                        "in": "query",
                        "description": "When set to **true**, the tab information associated with the recipient is included in the response.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/recipients"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listRecipients"
            },
            "put": {
                "tags": [
                    "Templates"
                ],
                "summary": "Updates recipients in a template.",
                "description": "Updates recipients in a template. \n\nYou can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.",
                "operationId": "Recipients_PutTemplateRecipients",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "resend_envelope",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "templateRecipients",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateRecipients"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/recipientsUpdateSummary"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateRecipients"
            },
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Adds tabs for a recipient.",
                "description": "Adds one or more recipients to a template.",
                "operationId": "Recipients_PostTemplateRecipients",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "resend_envelope",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "templateRecipients",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateRecipients"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/recipients"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createRecipients"
            },
            "delete": {
                "tags": [
                    "Templates"
                ],
                "summary": "Deletes recipients from a template.",
                "description": "Deletes one or more recipients from a template. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.",
                "operationId": "Recipients_DeleteTemplateRecipients",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateRecipients",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateRecipients"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/recipients"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteRecipients"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}": {
            "delete": {
                "tags": [
                    "Templates"
                ],
                "summary": "Deletes the specified recipient file from a template.",
                "description": "Deletes the specified recipient file from the specified template.",
                "operationId": "Recipients_DeleteTemplateRecipient",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateRecipients",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateRecipients"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/recipients"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteRecipient"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}/document_visibility": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Returns document visibility for the recipients",
                "operationId": "Recipients_GetTemplateRecipientDocumentVisibility",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentVisibilityList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getTemplateRecipientDocumentVisibility",
                "description": "This method returns information about document visibility for a template recipient."
            },
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Updates document visibility for the recipients",
                "operationId": "Recipients_PutTemplateRecipientDocumentVisibility",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateDocumentVisibilityList",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateDocumentVisibilityList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/templateDocumentVisibilityList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateTemplateRecipientDocumentVisibility",
                "description": "This method updates the document visibility for a template recipient.\n\n**Note:** A document cannot be hidden from a recipient if the recipient has tabs assigned to them on the document. Carbon Copy, Certified Delivery (Needs to Sign), Editor, and Agent recipients can always see all documents."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}/tabs": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Gets the tabs information for a signer or sign-in-person recipient in a template.",
                "description": "Gets the tabs information for a signer or sign-in-person recipient in a template.",
                "operationId": "Recipients_GetTemplateRecipientTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_anchor_tab_locations",
                        "in": "query",
                        "description": "When set to **true**, all tabs with anchor tab properties are included in the response. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_metadata",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listTabs"
            },
            "put": {
                "tags": [
                    "Templates"
                ],
                "summary": "Updates the tabs for a recipient.",
                "description": "Updates one or more tabs for a recipient in a template.",
                "operationId": "Recipients_PutTemplateRecipientTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateTabs",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateTabs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateTabs"
            },
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Adds tabs for a recipient.",
                "description": "Adds one or more tabs for a recipient.",
                "operationId": "Recipients_PostTemplateRecipientTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateTabs",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateTabs"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createTabs"
            },
            "delete": {
                "tags": [
                    "Templates"
                ],
                "summary": "Deletes the tabs associated with a recipient in a template.",
                "description": "Deletes one or more tabs associated with a recipient in a template.",
                "operationId": "Recipients_DeleteTemplateRecipientTabs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientId",
                        "in": "path",
                        "description": "The ID of the recipient being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateTabs",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateTabs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/tabs"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteTabs"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/recipients/document_visibility": {
            "put": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Updates document visibility for the recipients",
                "operationId": "Recipients_PutTemplateRecipientsDocumentVisibility",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateDocumentVisibilityList",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateDocumentVisibilityList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/templateDocumentVisibilityList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateTemplateRecipientsDocumentVisibility",
                "description": "This method updates document visibility for one or more template recipients based on the `recipientId` and `visible` values that you include in the request body.\n\n\n**Note:** A document cannot be hidden from a recipient if the recipient has tabs assigned to them on the document. Carbon Copy, Certified Delivery (Needs to Sign), Editor, and Agent recipients can always see all documents."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/responsive_html_preview": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Get Responsive HTML Preview for all documents in a template.",
                "operationId": "ResponsiveHtml_PostTemplateResponsiveHtmlPreview",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentHtmlDefinition",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/documentHtmlDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/documentHtmlDefinitions"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createTemplateResponsiveHtmlPreview",
                "description": "Creates a preview of the\n[responsive](/docs/esign-rest-api/esign101/concepts/responsive/),\nHTML versions of all of the documents associated\nwith a template. This method enables you to\npreview the PDF document conversions to responsive\nHTML across device types prior to sending.\n\nThe request body is a `documentHtmlDefinition`\nobject, which holds the responsive signing\nparameters that define how to generate the HTML\nversion of the documents."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/views/edit": {
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Provides a URL to start an edit view of the Template UI",
                "operationId": "Views_PostTemplateEditView",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateViewRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/templateViewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/viewUrl"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createEditView",
                "description": "This method returns a URL for starting an edit view of a template that uses the DocuSign Template UI."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/views/recipient_preview": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Provides a URL to start a recipient view of the Envelope UI",
                "operationId": "Views_PostTemplateRecipientPreview",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recipientPreviewRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/recipientPreviewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/viewUrl"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createTemplateRecipientPreview",
                "description": "This method returns a URL for a template recipient preview  in the DocuSign UI that you can embed in your application. You use this method to enable the sender to preview the recipients' experience.\n\nFor more information, see [Preview and Send](https://support.docusign.com/en/guides/ndse-user-guide-send-your-documents)."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/workflow": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns the workflow definition for a template.",
                "operationId": "TemplateWorkflowDefinition_GetTemplateWorkflowDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workflow"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getTemplateWorkflowDefinition",
                "description": "Returns template's workflow definition if the template specified by `templateId` has one."
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates the workflow definition for a template.",
                "operationId": "TemplateWorkflowDefinition_PutTemplateWorkflowDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflow",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/workflow"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workflow"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateTemplateWorkflowDefinition",
                "description": "Updates the specified template's workflow definition if  it has one."
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Delete the workflow definition for a template.",
                "operationId": "TemplateWorkflowDefinition_DeleteTemplateWorkflowDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteTemplateWorkflowDefinition",
                "description": "Deletes the specified template's workflow definition if it has one."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/workflow/scheduledSending": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns the scheduled sending rules for a template's workflow definition.",
                "operationId": "TemplateWorkflowScheduledSending_GetTemplateScheduledSendingDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/scheduledSending"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getTemplateScheduledSendingDefinition"
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates the scheduled sending rules for a template's workflow definition.",
                "operationId": "TemplateWorkflowScheduledSending_PutTemplateScheduledSendingDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scheduledSending",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/scheduledSending"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/scheduledSending"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateTemplateScheduledSendingDefinition"
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Deletes the scheduled sending rules for the template's workflow.",
                "operationId": "TemplateWorkflowScheduledSending_DeleteTemplateScheduledSendingDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteTemplateScheduledSendingDefinition"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/workflow/steps": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Creates and adds a new workflow step definition for a template's workflow",
                "operationId": "TemplateWorkflowStep_PostTemplateWorkflowStepDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStep",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/workflowStep"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workflowStep"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createTemplateWorkflowStepDefinition"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/workflow/steps/{workflowStepId}": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns the workflow step definition for a template by step id.",
                "operationId": "TemplateWorkflowStep_GetTemplateWorkflowStepDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStepId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workflowStep"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getTemplateWorkflowStepDefinition"
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates the template workflow step definition for an envelope.",
                "operationId": "TemplateWorkflowStep_PutTemplateWorkflowStepDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStepId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStep",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/workflowStep"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workflowStep"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateTemplateWorkflowStepDefinition"
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Deletes the workflow step definition for an template's workflow by step id.",
                "operationId": "TemplateWorkflowStep_DeleteTemplateWorkflowStepDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStepId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteTemplateWorkflowStepDefinition"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/templates/{templateId}/workflow/steps/{workflowStepId}/delayedRouting": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns the delayed routing rules for a template's workflow step definition.",
                "operationId": "TemplateWorkflowDelayedRouting_GetTemplateDelayedRoutingDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStepId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/delayedRouting"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getTemplateDelayedRoutingDefinition"
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates the delayed routing rules for a template's workflow step definition.",
                "operationId": "TemplateWorkflowDelayedRouting_PutTemplateDelayedRoutingDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStepId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "delayedRouting",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/delayedRouting"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/delayedRouting"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateTemplateDelayedRoutingDefinition"
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Deletes the delayed routing rules for the specified template workflow step.",
                "operationId": "TemplateWorkflowDelayedRouting_DeleteTemplateDelayedRoutingDefinition",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The ID of the template being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowStepId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteTemplateDelayedRoutingDefinition"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/unsupported_file_types": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets a list of unsupported file types.",
                "description": "Retrieves a list of file types (mime-types and file-extensions) that are not supported for upload through the DocuSign system.",
                "operationId": "UnsupportedFileTypes_GetUnsupportedFileTypes",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/fileTypeList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listUnsupportedFileTypes"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieves the list of users for the specified account.",
                "description": "Retrieves the list of users for the specified account.\n\nThe response returns the list of users for the account along with the information about the result set. If the `additional_info` query was added to the endpoint and set to **true**, the full user information is returned for each user",
                "operationId": "Users_GetUsers",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "additional_info",
                        "in": "query",
                        "description": "When set to **true**, the full list of user information is returned for each user in the account.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alternate_admins_only",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of records to return. The number must be greater than 0 and less than or equal to 100. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domain_users_only",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email_substring",
                        "in": "query",
                        "description": "Filters the returned user records by the email address or a sub-string of email address.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Filters user records returned by one or more group Id's.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_usersettings_for_csv",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "login_status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "not_group_id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "description": "Starting value for the list. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_name_substring",
                        "in": "query",
                        "description": "Filters the user records returned by the user name or a sub-string of user name.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userInformationList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "list"
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Change one or more user in the specified account.",
                "operationId": "Users_PutUsers",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "allow_all_languages",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "userInformationList",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/userInformationList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userInformationList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateUsers",
                "description": "This method updates the information about one or more account users."
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Adds news user to the specified account.",
                "description": "Adds new users to your account. Set the `userSettings` property in the request to specify the actions the users can perform on the account.",
                "operationId": "Users_PostUsers",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "newUsersDefinition",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/newUsersDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/newUsersSummary"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "create"
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Removes users account privileges.",
                "description": "This closes one or more user records in the account. Users are never deleted from an account, but closing a user prevents them from using account functions.\n\nThe response returns whether the API execution was successful (200 - OK) or  if it failed. The response contains a user structure similar to the request and includes the user changes. If an error occurred during the DELETE operation for any of the users, the response for that user contains an `errorDetails` node with `errorCode` and `message` properties.",
                "operationId": "Users_DeleteUsers",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "delete",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "userInfoList",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/userInfoList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/usersResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "delete"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Gets the user information for a specified user.",
                "description": "Retrieves the user information for the specified user. \n\nTo return additional user information that details the last login date, login status, and the user's password expiration date, set the optional `additional_info` query string parameter to **true**.",
                "operationId": "User_GetUser",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "additional_info",
                        "in": "query",
                        "description": "When set to **true**, the full list of user information is returned for each user in the account.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getInformation"
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Updates the specified user information.",
                "operationId": "User_PutUser",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "allow_all_languages",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "userInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/userInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateUser",
                "description": "To update user information for a specific user, submit a [Users](#Users) object with updated field values in the request body of this operation."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/authorization": {
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Creates the user authorization",
                "operationId": "UserAuthorization_CreateUserAuthorization",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userAuthorizationCreateRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/userAuthorizationCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userAuthorization"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createUserAuthorization"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/authorization/{authorizationId}": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns the user authorization for a given authorization id",
                "operationId": "UserAuthorization_GetUserAuthorization",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "authorizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userAuthorization"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getUserAuthorization"
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Updates the user authorization",
                "operationId": "UserAuthorization_UpdateUserAuthorization",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "authorizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userAuthorizationUpdateRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/userAuthorizationUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userAuthorization"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateUserAuthorization"
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Deletes the user authorization",
                "operationId": "UserAuthorization_DeleteUserAuthorization",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "authorizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteUserAuthorization"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/authorizations": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns the principal user authorizations",
                "operationId": "UserAuthorizations_GetPrincipalUserAuthorizations",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "active_only",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email_substring",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Part (substring) of email we are searching for."
                    },
                    {
                        "name": "include_closed_users",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "permissions",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_name_substring",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userAuthorizations"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getPrincipalUserAuthorizations"
            },
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Creates ot updates user authorizations",
                "operationId": "UserAuthorizations_PostUserAuthorizations",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userAuthorizationsRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/userAuthorizationsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userAuthorizationsResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createUserAuthorizations"
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Creates ot updates user authorizations",
                "operationId": "UserAuthorizations_DeleteUserAuthorizations",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userAuthorizationsDeleteRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/userAuthorizationsDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userAuthorizationsDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteUserAuthorizations"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/authorizations/agent": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Returns the agent user authorizations",
                "operationId": "UserAgentAuthorizations_GetAgentUserAuthorizations",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "active_only",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email_substring",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Part (substring) of email we are searching for."
                    },
                    {
                        "name": "include_closed_users",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "permissions",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_name_substring",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userAuthorizations"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getAgentUserAuthorizations"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/cloud_storage": {
            "get": {
                "tags": [
                    "CloudStorage"
                ],
                "summary": "Get the Cloud Storage Provider configuration for the specified user.",
                "description": "Retrieves the list of cloud storage providers enabled for the account and the configuration information for the user.\n\nThe {serviceId} parameter can be either the service name or serviceId.",
                "operationId": "CloudStorage_GetCloudStorageProviders",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "redirectUrl",
                        "in": "query",
                        "description": " The URL the user is redirected to after the cloud storage provider authenticates the user. Using this will append the redirectUrl to the authenticationUrl.\n\nThe redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.\n ",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/cloudStorageProviders"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listProviders"
            },
            "post": {
                "tags": [
                    "CloudStorage"
                ],
                "summary": "Configures the redirect URL information  for one or more cloud storage providers for the specified user.",
                "description": "Configures the redirect URL information  for one or more cloud storage providers for the specified user. The redirect URL is added to the authentication URL to complete the return route.",
                "operationId": "CloudStorage_PostCloudStorage",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cloudStorageProviders",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/cloudStorageProviders"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/cloudStorageProviders"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createProvider"
            },
            "delete": {
                "tags": [
                    "CloudStorage"
                ],
                "summary": "Deletes the user authentication information for one or more cloud storage providers.",
                "description": "Deletes the user authentication information for one or more cloud storage providers. The next time the user tries to access the cloud storage provider, they must pass normal authentication.",
                "operationId": "CloudStorage_DeleteCloudStorageProviders",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cloudStorageProviders",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/cloudStorageProviders"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/cloudStorageProviders"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteProviders"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/cloud_storage/{serviceId}": {
            "get": {
                "tags": [
                    "CloudStorage"
                ],
                "summary": "Gets the specified Cloud Storage Provider configuration for the User.",
                "description": "Retrieves the list of cloud storage providers enabled for the account and the configuration information for the user.",
                "operationId": "CloudStorage_GetCloudStorage",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "The ID of the service to access. \n\nValid values are the service name (\"Box\") or the numerical serviceId (\"4136\").",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "redirectUrl",
                        "in": "query",
                        "description": " The URL the user is redirected to after the cloud storage provider authenticates the user. Using this will append the redirectUrl to the authenticationUrl.\n\nThe redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.\n ",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/cloudStorageProviders"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getProvider"
            },
            "delete": {
                "tags": [
                    "CloudStorage"
                ],
                "summary": "Deletes the user authentication information for the specified cloud storage provider.",
                "description": "Deletes the user authentication information for the specified cloud storage provider. The next time the user tries to access the cloud storage provider, they must pass normal authentication for this cloud storage provider.",
                "operationId": "CloudStorage_DeleteCloudStorage",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "The ID of the service to access. \n\nValid values are the service name (\"Box\") or the numerical serviceId (\"4136\").",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/cloudStorageProviders"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteProvider"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/cloud_storage/{serviceId}/folders": {
            "get": {
                "tags": [
                    "CloudStorage"
                ],
                "summary": "Retrieves a list of all the items in a specified folder from the specified cloud storage provider.",
                "description": "Retrieves a list of all the items in a specified folder from the specified cloud storage provider. ",
                "operationId": "CloudStorageFolder_GetCloudStorageFolderAll",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "The ID of the service to access. \n\nValid values are the service name (\"Box\") or the numerical serviceId (\"4136\").",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cloud_storage_folder_path",
                        "in": "query",
                        "description": "A comma separated list of folder IDs included in the request. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "An optional value that sets how many items are included in the response. \n\nThe default setting for this is 25. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "An optional value that sets the direction order used to sort the item list. \n\nValid values are: \n\n* asc = ascending sort order\n* desc = descending sort order ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "An optional value that sets the file attribute used to sort the item list. \n\nValid values are: \n\n* modified\n* name  ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_text",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "description": "Indicates the starting point of the first item included in the response set. It uses a 0-based index. The default setting for this is 0.  ",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/externalFolder"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listFolders"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/cloud_storage/{serviceId}/folders/{folderId}": {
            "get": {
                "tags": [
                    "CloudStorage"
                ],
                "summary": "Gets a list of all the items from the specified cloud storage provider.",
                "description": "Retrieves a list of all the items in all  the folders associated with the user from the specified cloud storage provider. You can limit the scope of the returned items by providing a comma separated list of folder IDs in the request.",
                "operationId": "CloudStorageFolder_GetCloudStorageFolder",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "folderId",
                        "in": "path",
                        "description": "The ID of the folder being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "The ID of the service to access. \n\nValid values are the service name (\"Box\") or the numerical serviceId (\"4136\").",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cloud_storage_folder_path",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cloud_storage_folderid_plain",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "An optional value that sets how many items are included in the response. \n\nThe default setting for this is 25. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "An optional value that sets the direction order used to sort the item list. \n\nValid values are: \n\n* asc = ascending sort order\n* desc = descending sort order ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "An optional value that sets the file attribute used to sort the item list. \n\nValid values are: \n\n* modified\n* name  ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_text",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "description": "Indicates the starting point of the first item included in the response set. It uses a 0-based index. The default setting for this is 0.  ",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/externalFolder"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "list"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/custom_settings": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieves the custom user settings for a specified user.",
                "description": "Retrieves a list of custom user settings for a single user.\n\nCustom settings provide a flexible way to store and retrieve custom user information that can be used in your own system.\n\n###### Note: Custom user settings are not the same as user account settings.\n\n###Getting Grouped Custom User Settings###\n\nIf the custom user settings you want to retrieve are grouped, you must include the following information in the header, after Content-Type, in the request:\n\n`X-DocuSign-User-Settings-Key:group_name`\n\nWhere the `group_name` is your designated name for the group of customer user settings.\n\nIf the extra header information is not included, only the custom user settings that were added without a group are retrieved.",
                "operationId": "UserCustomSettings_GetCustomSettings",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/customSettingsInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listCustomSettings"
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Adds or updates custom user settings for the specified user.",
                "description": "Adds or updates custom user settings for the specified user.\n\n###### Note: Custom user settings are not the same as user account settings.\n\nCustom settings provide a flexible way to store and retrieve custom user information that you can use in your own system.\n\n**Important**: There is a limit on the size for all the custom user settings for a single user. The limit is 4,000 characters, which includes the XML and JSON structure for the settings.\n\n### Grouping Custom User Settings ###\n\nYou can group custom user settings when adding them. Grouping allows you to retrieve settings that are in a specific group, instead of retrieving all the user custom settings.\n\nTo group custom user settings, add the following information in the header, after Content-Type:\n\n`X-DocuSign-User-Settings-Key:group_name`\n\nWhere the `group_name` is your designated name for the group of customer user settings. Grouping is shown in the Example Request Body below.\n\nWhen getting or deleting grouped custom user settings, you must include the extra header information.\n\nGrouping custom user settings is not required and if the extra header information is not included, the custom user settings are added normally and can be retrieved or deleted without including the additional header.",
                "operationId": "UserCustomSettings_PutCustomSettings",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "customSettingsInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/customSettingsInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/customSettingsInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateCustomSettings"
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Deletes custom user settings for a specified user.",
                "description": "Deletes the specified custom user settings for a single user.\n\n###Deleting Grouped Custom User Settings###\n\nIf the custom user settings you want to delete are grouped, you must include the following information in the header, after Content-Type, in the request:\n\n`X-DocuSign-User-Settings-Key:group_name`\n\nWhere the `group_name` is your designated name for the group of customer user settings.\n\nIf the extra header information is not included, only the custom user settings that were added without a group are deleted.",
                "operationId": "UserCustomSettings_DeleteCustomSettings",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "customSettingsInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/customSettingsInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/customSettingsInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteCustomSettings"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/profile": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieves the user profile for a specified user.",
                "description": "Retrieves the user profile information, the privacy settings and personal information (address, phone number, etc.) for the specified user.\n\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.",
                "operationId": "UserProfile_GetProfile",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userProfile"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getProfile"
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Updates the user profile information for the specified user.",
                "description": "Updates the user's detail information, profile information, privacy settings, and personal information in the user ID card.\n\nYou can also change a user's name by changing the information in the `userDetails` property. When changing a user's name, you can either change the information in the `userName` property OR change the information in `firstName`, `middleName`, `lastName, suffixName`, and `title` properties. Changes to `firstName`, `middleName`, `lastName`, `suffixName`, and `title` properties take precedence over changes to the `userName` property.",
                "operationId": "UserProfile_PutProfile",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userProfile",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/userProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateProfile"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/profile/image": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieves the user profile image for the specified user.",
                "description": "Retrieves the user profile picture for the specified user. The image is returned in the same format as uploaded.\n\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.\n\nIf successful, the response returns a 200 - OK and the user profile image.",
                "operationId": "UserProfileImage_GetUserProfileImage",
                "consumes": [],
                "produces": [
                    "image/gif"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "encoding",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getProfileImage"
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Updates the user profile image for a specified user.",
                "description": "Updates the user profile image by uploading an image to the user profile.\n\nThe supported image formats are: gif, png, jpeg, and bmp. The file must be less than 200K. For best viewing results, DocuSign recommends that the image is no more than 79 pixels wide and high.",
                "operationId": "UserProfileImage_PutUserProfileImage",
                "consumes": [
                    "image/gif"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateProfileImage"
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Deletes the user profile image for the specified user.",
                "description": "Deletes the user profile image from the  specified user's profile.\n\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.",
                "operationId": "UserProfileImage_DeleteUserProfileImage",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteProfileImage"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/settings": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Gets the user account settings for a specified user.",
                "description": "Retrieves a list of the account settings and email notification information for the specified user.\n\nThe response returns the account setting name/value information and the email notification settings for the specified user. For more information about the different user settings, see the [ML:userSettings list].",
                "operationId": "UserSettings_GetUserSettings",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userSettingsInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getSettings"
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Updates the user account settings for a specified user.",
                "description": "Updates the account settings list and email notification types for the specified user.",
                "operationId": "UserSettings_PutUserSettings",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "allow_all_languages",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "userSettingsInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/userSettingsInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateSettings"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/signatures": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieves a list of user signature definitions for a specified user.",
                "description": "Retrieves the signature definitions for the specified user.\n\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".",
                "operationId": "UserSignatures_GetUserSignatures",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stamp_type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userSignaturesInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listSignatures"
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Adds/updates a user signature.",
                "operationId": "UserSignatures_PutUserSignature",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userSignaturesInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/userSignaturesInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userSignaturesInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateSignatures",
                "description": ""
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Adds user Signature and initials images to a Signature.",
                "description": "Adds a user signature image and/or user initials image to the specified user. \n\nThe userId property specified in the endpoint must match the authenticated user's userId and the user must be a member of the account.\n\nThe rules and processes associated with this are:\n\n* If Content-Type is set to application/json, then the default behavior for creating a default signature image, based on the name and a DocuSign font, is used.\n* If Content-Type is set to multipart/form-data, then the request must contain a first part with the user signature information, followed by parts that contain the images.\n\nFor each Image part, the Content-Disposition header has a \"filename\" value that is used to map to the `signatureName` and/or `signatureInitials` properties in the JSON to the image. \n\nFor example: \n`Content-Disposition: file; filename=\"Ron Test20121127083900\"`\n\nIf no matching image (by filename value) is found, then the image is not set. One, both, or neither of the signature and initials images can be set with this call.\n\nThe Content-Transfer-Encoding: base64 header, set in the header for the part containing the image, can be set to indicate that the images are formatted as base64 instead of as binary.\n\nIf successful, 200-OK is returned, and a JSON structure containing the signature information is provided, note that the signatureId can change with each API POST, PUT, or DELETE since the changes to the signature structure cause the current signature to be closed, and a new signature record to be created.",
                "operationId": "UserSignatures_PostUserSignatures",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userSignaturesInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/userSignaturesInformation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userSignaturesInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createSignatures"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/signatures/{signatureId}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Gets the user signature information for the specified user.",
                "description": "Retrieves the structure of a single signature with a known signature name.\n\nThe userId specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".",
                "operationId": "UserSignatures_GetUserSignature",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signatureId",
                        "in": "path",
                        "description": "The ID of the signature being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userSignature"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getSignature"
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Updates the user signature for a specified user.",
                "description": "Creates, or updates, the signature font and initials for the specified user. When creating a signature, you use this resource to create the signature name and then add the signature and initials images into the signature.\n\n###### Note: This will also create a default signature for the user when one does not exist.\n\nThe userId property specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".",
                "operationId": "UserSignatures_PutUserSignatureById",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signatureId",
                        "in": "path",
                        "description": "The ID of the signature being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "close_existing_signature",
                        "in": "query",
                        "description": "When set to **true**, closes the current signature.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "userSignatureDefinition",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/userSignatureDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userSignature"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateSignature"
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Removes removes signature information for the specified user.",
                "description": "Removes the signature information for the user.\n\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureId` accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".",
                "operationId": "UserSignatures_DeleteUserSignature",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signatureId",
                        "in": "path",
                        "description": "The ID of the signature being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteSignature"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/signatures/{signatureId}/{imageType}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieves the user initials image or the  user signature image for the specified user.",
                "description": "Retrieves the specified initials image or signature image for the specified user. The image is returned in the same format as uploaded. In the request you can specify if the chrome (the added line and identifier around the initial image) is returned with the image.\n\nThe userId property specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".\n\n###### Note: Older envelopes might only have chromed images. If getting the non-chromed image fails, try getting the chromed image.",
                "operationId": "UserSignatures_GetUserSignatureImage",
                "consumes": [],
                "produces": [
                    "image/gif"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "imageType",
                        "in": "path",
                        "description": "One of **signature_image** or **initials_image**.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signatureId",
                        "in": "path",
                        "description": "The ID of the signature being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_chrome",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getSignatureImage"
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Updates the user signature image or user initials image for the specified user.",
                "description": "Updates the user signature image or user initials image for the specified user. The supported image formats for this file are: gif, png, jpeg, and bmp. The file must be less than 200K.\n\nThe userId property specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".\n",
                "operationId": "UserSignatures_PutUserSignatureImage",
                "consumes": [
                    "image/gif"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "imageType",
                        "in": "path",
                        "description": "One of **signature_image** or **initials_image**.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signatureId",
                        "in": "path",
                        "description": "The ID of the signature being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "transparent_png",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "imageBytes",
                        "in": "body",
                        "description": "Updated image content.",
                        "required": true,
                        "schema": {
                            "format": "binary",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userSignature"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateSignatureImage"
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Deletes the user initials image or the  user signature image for the specified user.",
                "description": "Deletes the specified initials image or signature image for the specified user.\n\nThe function deletes one or the other of the image types, to delete both the initials image and signature image you must call the endpoint twice.\n\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".",
                "operationId": "UserSignatures_DeleteUserSignatureImage",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "imageType",
                        "in": "path",
                        "description": "One of **signature_image** or **initials_image**.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signatureId",
                        "in": "path",
                        "description": "The ID of the signature being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userSignature"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteSignatureImage"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/users/{userId}/social": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Gets a list of a user's social accounts.",
                "description": "Retrieves a list of social accounts linked to a user's account.",
                "operationId": "UserSocialLogin_GetUserSocialLogin",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userSocialIdResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listSocialLogins"
            },
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Adds social account for a user.",
                "description": "Adds a new social account to a user's account.",
                "operationId": "UserSocialLogin_PutUserSocialLogin",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "socialAccountInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/socialAccountInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateSocialLogin"
            },
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Deletes user's social account.",
                "description": "Deletes a social account from a use's account.",
                "operationId": "UserSocialLogin_DeleteUserSocialLogin",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "socialAccountInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/socialAccountInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteSocialLogin"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/views/console": {
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Returns a URL to the authentication view UI.",
                "description": "Returns a URL that allows you to embed the authentication view of the DocuSign UI in your applications.",
                "operationId": "Views_PostAccountConsoleView",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "consoleViewRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/consoleViewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/viewUrl"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createConsoleView"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/watermark": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get watermark information.",
                "operationId": "Watermark_GetWatermark",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/watermark"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getWatermark",
                "description": ""
            },
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Update watermark information.",
                "operationId": "Watermark_PutWatermark",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "watermark",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/watermark"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/watermark"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateWatermark",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/watermark/preview": {
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get watermark preview.",
                "operationId": "WatermarkPreview_PutWatermarkPreview",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "watermark",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/watermark"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/watermark"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getWatermarkPreview",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/workspaces": {
            "get": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "List Workspaces",
                "description": "Gets information about the Workspaces that have been created.",
                "operationId": "Workspace_GetWorkspaces",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workspaceList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listWorkspaces"
            },
            "post": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Create a Workspace",
                "description": "Creates a new workspace.",
                "operationId": "Workspace_PostWorkspace",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workspace",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/workspace"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workspace"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createWorkspace"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/workspaces/{workspaceId}": {
            "get": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get Workspace",
                "description": "Retrives properties about a workspace given a unique workspaceId. ",
                "operationId": "Workspace_GetWorkspace",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Specifies the workspace ID GUID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workspace"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getWorkspace"
            },
            "put": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Update Workspace",
                "description": "Updates information about a specific workspace.",
                "operationId": "Workspace_PutWorkspace",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Specifies the workspace ID GUID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workspace",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/workspace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workspace"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateWorkspace"
            },
            "delete": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Delete Workspace",
                "description": "Deletes an existing workspace (logically).",
                "operationId": "Workspace_DeleteWorkspace",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Specifies the workspace ID GUID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workspace"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteWorkspace"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}": {
            "get": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "List Workspace Folder Contents",
                "description": "Retrieves workspace folder contents, which can include sub folders and files.",
                "operationId": "WorkspaceFolder_GetWorkspaceFolder",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "folderId",
                        "in": "path",
                        "description": "The ID of the folder being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Specifies the workspace ID GUID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The maximum number of results to be returned by this request.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_files",
                        "in": "query",
                        "description": "When set to **true**, file information is returned in the response along with folder information. The default is **false**.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_sub_folders",
                        "in": "query",
                        "description": "When set to **true**, information about the sub-folders of the current folder is returned. The default is **false**.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_thumbnails",
                        "in": "query",
                        "description": "When set to **true**, thumbnails are returned as part of the response.  The default is **false**.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_user_detail",
                        "in": "query",
                        "description": "Set to **true** to return extended details about the user. The default is **false**.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "description": "The position within the total result set from which to start returning values.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "workspace_user_id",
                        "in": "query",
                        "description": "If set, then the results are filtered to those associated with the specified userId.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workspaceFolderContents"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listWorkspaceFolderItems"
            },
            "delete": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Deletes workspace one or more specific files/folders from the given folder or root.",
                "operationId": "WorkspaceFolder_DeleteWorkspaceItems",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "folderId",
                        "in": "path",
                        "description": "The ID of the folder being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Specifies the workspace ID GUID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workspaceItemList",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/workspaceItemList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteWorkspaceFolderItems",
                "description": "This method deletes one or more files or sub-folders from a workspace folder or root.\n\nNote: To delete items from a workspace, the `status` of the workspace must be `active`."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files": {
            "post": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Creates a workspace file.",
                "operationId": "WorkspaceFile_PostWorkspaceFiles",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "folderId",
                        "in": "path",
                        "description": "The ID of the folder being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Specifies the workspace ID GUID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workspaceItem"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createWorkspaceFile",
                "description": "This method adds a file to a workspace."
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files/{fileId}": {
            "get": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get Workspace File",
                "description": "Retrieves a workspace file (the binary).",
                "operationId": "WorkspaceFile_GetWorkspaceFile",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "Specifies the room file ID GUID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "folderId",
                        "in": "path",
                        "description": "The ID of the folder being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Specifies the workspace ID GUID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "is_download",
                        "in": "query",
                        "description": "When set to **true**, the Content-Disposition header is set in the response. The value of the header provides the filename of the file. Default is **false**.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf_version",
                        "in": "query",
                        "description": "When set to **true** the file returned as a PDF.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getWorkspaceFile"
            },
            "put": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Update Workspace File Metadata",
                "description": "Updates workspace item metadata for one or more specific files/folders.",
                "operationId": "WorkspaceFile_PutWorkspaceFile",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "Specifies the room file ID GUID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "folderId",
                        "in": "path",
                        "description": "The ID of the folder being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Specifies the workspace ID GUID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/workspaceItem"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateWorkspaceFile"
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files/{fileId}/pages": {
            "get": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "List File Pages",
                "description": "Retrieves a workspace file as rasterized pages.",
                "operationId": "WorkspaceFilePages_GetWorkspaceFilePages",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID Guid.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "Specifies the room file ID GUID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "folderId",
                        "in": "path",
                        "description": "The ID of the folder being accessed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Specifies the workspace ID GUID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The maximum number of results to be returned by this request.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dpi",
                        "in": "query",
                        "description": "Number of dots per inch for the resulting image. The default if not used is 94. The range is 1-310.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "max_height",
                        "in": "query",
                        "description": "Sets the maximum height (in pixels) of the returned image.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "max_width",
                        "in": "query",
                        "description": "Sets the maximum width (in pixels) of the returned image.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "description": "The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/pageImages"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listWorkspaceFilePages"
            },
            "parameters": []
        },
        "/v2.1/accounts/provisioning": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Retrieves the account provisioning information for the account.",
                "description": "Retrieves the account provisioning information for the account.",
                "operationId": "Accounts_GetProvisioning",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/provisioningInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getProvisioning"
            },
            "parameters": []
        },
        "/v2.1/billing_plans": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Gets the list of available billing plans.",
                "description": "Retrieves a list of the billing plans associated with a distributor.",
                "operationId": "BillingPlans_GetBillingPlans",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/billingPlansResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listBillingPlans"
            },
            "parameters": []
        },
        "/v2.1/billing_plans/{billingPlanId}": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Get the billing plan details.",
                "description": "Retrieves the billing plan details for the specified billing plan ID.",
                "operationId": "BillingPlans_GetBillingPlan",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "billingPlanId",
                        "in": "path",
                        "description": "The ID of the billing plan being accessed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/billingPlanResponse"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getBillingPlan"
            },
            "parameters": []
        },
        "/v2.1/current_user/notary": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Get notary settings for a user",
                "operationId": "Notary_GetNotary",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "include_jurisdictions",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/notaryResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getNotary",
                "description": "Gets settings for a notary user.\nThe current user must be a notary."
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Update a notary",
                "operationId": "Notary_PutNotary",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "notary",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/notary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/notary"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateNotary",
                "description": "Updates notary information for the current user."
            },
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Add a notary to the system",
                "operationId": "Notary_PostNotary",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "notary",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/notary"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/notary"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createNotary",
                "description": "Registers the current user as a notary."
            },
            "parameters": []
        },
        "/v2.1/current_user/notary/journals": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "summary": "Get notary jurisdictions for a user",
                "operationId": "NotaryJournals_GetNotaryJournals",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_text",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/notaryJournalList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listNotaryJournals",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/current_user/notary/jurisdictions": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Get notary jurisdictions for a user",
                "operationId": "NotaryJurisdictions_GetNotaryJurisdictions",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/notaryJurisdictionList"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getNotaryJurisdictions",
                "description": "Returns a list of jurisdictions that the notary is registered in.\nThe current user must be a notary."
            },
            "post": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Add a notary jurisdiction to the system",
                "operationId": "NotaryJurisdictions_PostNotaryJurisdictions",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "notaryJurisdiction",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/notaryJurisdiction"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/notaryJurisdiction"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "createNotaryJurisdictions",
                "description": "Creates a jurisdiction object."
            },
            "parameters": []
        },
        "/v2.1/current_user/notary/jurisdictions/{jurisdictionId}": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Get notary a jurisdiction for a user",
                "operationId": "NotaryJurisdictions_GetNotaryJurisdiction",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "jurisdictionId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/notaryJurisdiction"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getNotaryJurisdiction",
                "description": "Gets a jurisdiction object for the current user.  The following restrictions apply:\n\n- The current user must be a notary.\n- The `jurisdictionId` must be a jurisdiction that the notary is registered for.\n"
            },
            "put": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Update a notary jurisdiction",
                "operationId": "NotaryJurisdictions_PutNotaryJurisdiction",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "jurisdictionId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "notaryJurisdiction",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/notaryJurisdiction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/notaryJurisdiction"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateNotaryJurisdiction",
                "description": "Updates the jurisdiction information about a notary.\n\nThe following restrictions apply:\n\n- The current user must be a notary.\n- The `jurisdictionId` path parameter must be a jurisdiction that the notary is registered for.\n- The `jurisdictionId` path parameter must match the request body's `jurisdiction.jurisdictionId`.\n\nThe request body must have a full `jurisdiction` object for the jurisdiction property.\nThe best way to do this is to use `getNotaryJurisdiction` to obtain the current values and update the properties you want to change.\n\nFor example, assume `getNotaryJurisdiction` returns this:\n\n```\n{\n    \"jurisdiction\": {\n        \"jurisdictionId\": \"15\",\n        \"name\": \"Iowa\",\n        \"county\": \"\",\n        \"enabled\": \"true\",\n        \"countyInSeal\": \"false\",\n        \"commissionIdInSeal\": \"true\",\n        \"stateNameInSeal\": \"true\",\n        \"notaryPublicInSeal\": \"true\",\n        \"allowSystemCreatedSeal\": \"true\",\n        \"allowUserUploadedSeal\": \"false\"\n    },\n    \"commissionId\": \"123456\",\n    \"commissionExpiration\": \"2020-08-31T07:00:00.0000000Z\",\n    \"registeredName\": \"Bob Notary\",\n    \"county\": \"Adams\",\n    \"sealType\": \"system_created\"\n}\n```\n\nIf you want to change the name of the notary from \"Bob Notary\" to \"Robert Notary\", your request body would be:\n\n```\n{\n    \"jurisdiction\": {\n        \"jurisdictionId\": \"15\",\n        \"name\": \"Iowa\",\n        \"county\": \"\",\n        \"enabled\": \"true\",\n        \"countyInSeal\": \"false\",\n        \"commissionIdInSeal\": \"true\",\n        \"stateNameInSeal\": \"true\",\n        \"notaryPublicInSeal\": \"true\",\n        \"allowSystemCreatedSeal\": \"true\",\n        \"allowUserUploadedSeal\": \"false\"\n    },\n    \"commissionId\": \"123456\",\n    \"commissionExpiration\": \"2020-08-31T07:00:00.0000000Z\",\n    \"registeredName\": \"Robert Notary\",\n    \"county\": \"Adams\",\n    \"sealType\": \"system_created\"\n}\n```\n"
            },
            "delete": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Delete a notary jurisdiction a specified user.",
                "operationId": "NotaryJurisdictions_DeleteNotaryJurisdiction",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "jurisdictionId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteNotaryJurisdiction",
                "description": "Deletes the specified jurisdiction."
            },
            "parameters": []
        },
        "/v2.1/current_user/notary/jurisdictions/{jurisdictionId}/seal": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Get notary seal for a jurisdiction",
                "operationId": "NotaryJurisdictionSeal_GetNotaryJurisdictionSeal",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "jurisdictionId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getNotaryJurisdictionSeal",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/current_user/password_rules": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get membership account password rules",
                "operationId": "PasswordRules_GetPasswordRules",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/userPasswordRules"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getPasswordRules",
                "description": ""
            },
            "parameters": []
        },
        "/v2.1/diagnostics/request_logs": {
            "get": {
                "tags": [
                    "Diagnostics"
                ],
                "summary": "Gets the API request logging log files.",
                "description": "Retrieves a list of log entries as a JSON or xml object or as a zip file containing the entries.\n\nIf the Accept header is set to application/zip, the response is a zip file containing individual text files, each representing an API request.\n\nIf the Accept header is set to `application/json` or `application/xml`, the response returns list of log entries in either JSON or XML. An example JSON response body is shown below. ",
                "operationId": "APIRequestLog_GetRequestLogs",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "encoding",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/apiRequestLogsResult"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "listRequestLogs"
            },
            "delete": {
                "tags": [
                    "Diagnostics"
                ],
                "summary": "Deletes the request log files.",
                "description": "Deletes the request log files.",
                "operationId": "APIRequestLog_DeleteRequestLogs",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "deleteRequestLogs"
            },
            "parameters": []
        },
        "/v2.1/diagnostics/request_logs/{requestLogId}": {
            "get": {
                "tags": [
                    "Diagnostics"
                ],
                "summary": "Gets a request logging log file.",
                "description": "Retrieves information for a single log entry.\n\n**Request**\nThe `requestLogfId` property can be retrieved by getting the list of log entries. The Content-Transfer-Encoding header can be set to base64 to retrieve the API request/response as base 64 string. Otherwise the bytes of the request/response are returned.\n\n**Response**\nIf the Content-Transfer-Encoding header was set to base64, the log is returned as a base64 string.",
                "operationId": "APIRequestLog_GetRequestLog",
                "consumes": [],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "requestLogId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getRequestLog"
            },
            "parameters": []
        },
        "/v2.1/diagnostics/settings": {
            "get": {
                "tags": [
                    "Diagnostics"
                ],
                "summary": "Gets the API request logging settings.",
                "description": "Retrieves the current API request logging setting for the user and remaining log entries.\n\n**Response**\nThe response includes the current API request logging setting for the user, along with the maximum log entries and remaining log entries.",
                "operationId": "APIRequestLog_GetRequestLogSettings",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/diagnosticsSettingsInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getRequestLogSettings"
            },
            "put": {
                "tags": [
                    "Diagnostics"
                ],
                "summary": "Enables or disables API request logging for troubleshooting.",
                "description": "Enables or disables API request logging for troubleshooting.\n\nWhen enabled (`apiRequestLogging` is set to true), REST API requests and responses for the user are added to a log. A log can have up to 50 requests/responses and the current number of log entries can be determined by getting the settings. Logging is automatically disabled when the log limit of 50 is reached.\n\nYou can call [ML:GetRequestLog] or [ML:GetRequestLogs] to download the log files (individually or as a zip file). Call [ML:DeleteRequestLogs] to clear the log by deleting current entries.\n\nPrivate information, such as passwords and integrator key information, which is normally located in the call header is omitted from the request/response log.\n\n###### Note: API request logging only captures requests from the authenticated user. Any call that does not authenticate the user and resolve a userId isn't logged. Meaning that login_information, NewAccounts, or other distributor-credential calls are not logged.\n",
                "operationId": "APIRequestLog_PutRequestLogSettings",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "diagnosticsSettingsInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/diagnosticsSettingsInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/diagnosticsSettingsInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updateRequestLogSettings"
            },
            "parameters": []
        },
        "/v2.1/login_information": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Gets login information for a specified user.",
                "description": "Retrieves login information for a specified user. Each account that is associated with the login credentials is listed. You can use the returned information to determine whether a user is authenticated and select an account to use in future operations.  \n\nThe `baseUrl` property, returned in the response, is used in all future API calls as the base of the request URL. The `baseUrl` property contains the DocuSign server, the API version, and the `accountId` property that is used for the login. This request uses your DocuSign credentials to retrieve the account information.",
                "operationId": "LoginInformation_GetLoginInformation",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "api_password",
                        "in": "query",
                        "description": "When set to **true**, shows the account API password in the response.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "embed_account_id_guid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_account_id_guid",
                        "in": "query",
                        "description": "When set to **true**, shows the account ID GUID in the response.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "login_settings",
                        "in": "query",
                        "description": "Determines whether login settings are returned in the response.\n\nValid Values:\n\n* all -  All the login settings are returned. \n* none - no login settings are returned.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/loginInformation"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "login"
            },
            "parameters": []
        },
        "/v2.1/login_information/{loginPart}": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Updates the password for a specified user.",
                "description": "Updates the password for a specified user.",
                "operationId": "LoginInformation_PutLoginInformation",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "loginPart",
                        "in": "path",
                        "description": "Currently, only the value **password** is supported.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userPasswordInformation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/userPasswordInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "updatePassword"
            },
            "parameters": []
        },
        "/v2.1/oauth2/revoke": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Revokes an authorization token.",
                "description": "Revokes an OAuth2 authorization server token. After the revocation is complete, a caller must re-authenticate to restore access.",
                "operationId": "OAuth2_PostRevoke",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "revokeOAuthToken"
            },
            "parameters": []
        },
        "/v2.1/oauth2/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Creates an authorization token.",
                "description": "Creates an OAuth2 authorization server token endpoint.",
                "operationId": "OAuth2_PostToken",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "$ref": "#/definitions/oauthAccess"
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getOAuthToken"
            },
            "parameters": []
        },
        "/v2.1/organization_reporting/{organizationId}/reportsv2/{reportCorrelationId}": {
            "get": {
                "tags": [
                    "Uncategorized"
                ],
                "summary": "Retrieves org level report by correlation id and site.",
                "operationId": "OrgReportingSite_GetReportV2",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reportCorrelationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "description": "Error encountered.",
                        "schema": {
                            "$ref": "#/definitions/errorDetails"
                        }
                    }
                },
                "deprecated": false,
                "x-ds-methodname": "getReportV2",
                "x-ds-api-status": "beta",
                "description": ""
            },
            "parameters": []
        }
    },
    "definitions": {
        "accessCodeFormat": {
            "type": "object",
            "properties": {
                "formatRequired": {
                    "description": "",
                    "type": "string"
                },
                "formatRequiredMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata indicating whether the `formatRequired` property is editable."
                },
                "letterRequired": {
                    "description": "",
                    "type": "string"
                },
                "letterRequiredMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata indicating whether the `letterRequired` property is editable."
                },
                "minimumLength": {
                    "description": "",
                    "type": "string"
                },
                "minimumLengthMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata indicating whether the `minimumLength` property is editable."
                },
                "numberRequired": {
                    "description": "",
                    "type": "string"
                },
                "numberRequiredMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata indicating whether the `numberRequired` property is editable."
                },
                "specialCharacterRequired": {
                    "description": "",
                    "type": "string"
                },
                "specialCharacterRequiredMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata indicating whether the `specialCharacterRequired` property is editable."
                }
            },
            "description": "Object specifying the format of the string provided to a recipient in order to access an envelope."
        },
        "accountAddress": {
            "description": "Contains information about an account address.",
            "type": "object",
            "properties": {
                "address1": {
                    "description": "First Line of the address.\nMaximum length: 100 characters.",
                    "type": "string"
                },
                "address2": {
                    "description": "Second Line of the address.\nMaximum length: 100 characters.",
                    "type": "string"
                },
                "city": {
                    "description": "The city value of the address.",
                    "type": "string"
                },
                "country": {
                    "description": "Specifies the country associated with the address.",
                    "type": "string"
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "fax": {
                    "description": "",
                    "type": "string"
                },
                "firstName": {
                    "description": "The user's first name. \nMaximum Length: 50 characters.",
                    "type": "string"
                },
                "lastName": {
                    "description": "",
                    "type": "string"
                },
                "phone": {
                    "description": "",
                    "type": "string"
                },
                "postalCode": {
                    "description": "",
                    "type": "string"
                },
                "state": {
                    "description": "The state or province associated with the address.",
                    "type": "string"
                },
                "supportedCountries": {
                    "description": "Contains an array of countries supported by the billing plan.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/country"
                    }
                }
            }
        },
        "accountBillingPlan": {
            "description": "Contains information about an account billing plan.",
            "type": "object",
            "properties": {
                "addOns": {
                    "description": "Reserved:",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addOn"
                    }
                },
                "appStoreReceiptExpirationDate": {
                    "description": "",
                    "type": "string"
                },
                "appStoreReceiptPurchaseDate": {
                    "description": "",
                    "type": "string"
                },
                "canCancelRenewal": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "canUpgrade": {
                    "description": "When set to **true**, specifies that you can upgrade the account through the API.",
                    "type": "string"
                },
                "currencyCode": {
                    "description": "Specifies the ISO currency code for the account.",
                    "type": "string"
                },
                "downgradePlanInformation": {
                    "$ref": "#/definitions/downgradePlanUpdateResponse",
                    "description": ""
                },
                "enableSupport": {
                    "description": "When set to **true**, then customer support is provided as part of the account plan.",
                    "type": "string"
                },
                "includedSeats": {
                    "description": "The number of seats (users) included.",
                    "type": "string"
                },
                "incrementalSeats": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "isDowngrade": {
                    "description": "",
                    "type": "string"
                },
                "notificationType": {
                    "description": "",
                    "type": "string"
                },
                "otherDiscountPercent": {
                    "description": " Any other percentage discount for the plan. ",
                    "type": "string"
                },
                "paymentCycle": {
                    "description": "",
                    "type": "string"
                },
                "paymentMethod": {
                    "description": " The payment method used with the plan. The possible values are: CreditCard, PurchaseOrder, Premium, or Freemium. ",
                    "type": "string"
                },
                "perSeatPrice": {
                    "description": "",
                    "type": "string"
                },
                "planClassification": {
                    "description": "Identifies the type of plan. Examples include Business, Corporate, Enterprise, Free.",
                    "type": "string"
                },
                "planFeatureSets": {
                    "description": "A complex type that sets the feature sets for the account. It contains the following information (all string content):\n\n* currencyFeatureSetPrices - Contains the currencyCode and currencySymbol for the alternate currency values for envelopeFee, fixedFee, seatFee that are configured for this plan feature set.\n* envelopeFee - An incremental envelope cost for plans with envelope overages (when isEnabled=true).\n* featureSetId - A unique ID for the feature set.\n* fixedFee - A one-time fee associated with the plan (when isEnabled=true).\n* isActive - Specifies whether the feature set is actively set as part of the plan.\n* isEnabled - Specifies whether the feature set is actively enabled as part of the plan.\n* name - The name of the feature set.\n* seatFee - An incremental seat cost for seat-based plans (when isEnabled=true).\n",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featureSet"
                    }
                },
                "planId": {
                    "description": "",
                    "type": "string"
                },
                "planName": {
                    "description": "The name of the Billing Plan.",
                    "type": "string"
                },
                "planStartDate": {
                    "description": "",
                    "type": "string"
                },
                "productId": {
                    "description": "",
                    "type": "string"
                },
                "renewalDate": {
                    "description": "",
                    "type": "string"
                },
                "renewalStatus": {
                    "description": "The renewal status for the account. The acceptable values are:\n\n* auto: The account automatically renews.\n* queued_for_close: Account will be closed at the billingPeriodEndDate.\n* queued_for_downgrade: Account will be downgraded at the billingPeriodEndDate.",
                    "type": "string"
                },
                "seatDiscounts": {
                    "description": " A complex type that contains any seat discount information.\n\nValues are: BeginSeatCount, EndSeatCount, and SeatDiscountPercent.\n ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/seatDiscount"
                    }
                },
                "subscriptionStartDate": {
                    "description": "",
                    "type": "string"
                },
                "supportIncidentFee": {
                    "description": "The support incident fee charged for each support incident.",
                    "type": "string"
                },
                "supportPlanFee": {
                    "description": "The support plan fee charged for this plan.",
                    "type": "string"
                },
                "taxExemptId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "accountBillingPlanResponse": {
            "description": "Defines an account billing plan response object.",
            "type": "object",
            "properties": {
                "billingAddress": {
                    "$ref": "#/definitions/accountAddress",
                    "description": "The billing address for the account."
                },
                "billingAddressIsCreditCardAddress": {
                    "description": "When set to **true**, the credit card address information is the same as that returned as the billing address. If false, then the billing address is considered a billing contact address, and the credit card address can be different.",
                    "type": "string"
                },
                "billingPlan": {
                    "$ref": "#/definitions/accountBillingPlan",
                    "description": "An object that contains details about the billing plan."
                },
                "creditCardInformation": {
                    "$ref": "#/definitions/creditCardInformation",
                    "description": "A complex type that has information about the credit card used to pay for this account."
                },
                "directDebitProcessorInformation": {
                    "$ref": "#/definitions/directDebitProcessorInformation",
                    "description": "Information about the bank that processes direct debits for the payment plan."
                },
                "downgradePlanInformation": {
                    "$ref": "#/definitions/downgradePlanUpdateResponse",
                    "description": ""
                },
                "downgradeRequestInformation": {
                    "$ref": "#/definitions/downgradeRequestInformation",
                    "description": ""
                },
                "entityInformation": {
                    "$ref": "#/definitions/billingEntityInformationResponse",
                    "description": ""
                },
                "paymentMethod": {
                    "description": "",
                    "type": "string"
                },
                "paymentProcessorInformation": {
                    "$ref": "#/definitions/paymentProcessorInformation",
                    "description": "Information about the entity that processes payments for the billing plan."
                },
                "referralInformation": {
                    "$ref": "#/definitions/referralInformation",
                    "description": "A complex type that contains properties for entering referral and discount information."
                },
                "successorPlans": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/billingPlan"
                    }
                },
                "taxExemptId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "accountIdentityInputOption": {
            "type": "object",
            "properties": {
                "isRequired": {
                    "description": "",
                    "type": "boolean"
                },
                "optionName": {
                    "description": "",
                    "type": "string"
                },
                "valueType": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "accountIdentityVerificationResponse": {
            "type": "object",
            "properties": {
                "identityVerification": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/accountIdentityVerificationWorkflow"
                    }
                }
            }
        },
        "accountIdentityVerificationStep": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Information about a specific step in an Identity Verification workflow."
        },
        "accountIdentityVerificationWorkflow": {
            "type": "object",
            "properties": {
                "defaultDescription": {
                    "description": "",
                    "type": "string"
                },
                "defaultName": {
                    "description": "",
                    "type": "string"
                },
                "inputOptions": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/accountIdentityInputOption"
                    }
                },
                "isDisabled": {
                    "description": "",
                    "type": "string"
                },
                "ownerType": {
                    "description": "",
                    "type": "string"
                },
                "signatureProvider": {
                    "$ref": "#/definitions/accountSignatureProvider",
                    "description": "The signature provider associated with the Identity Verification workflow."
                },
                "steps": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/accountIdentityVerificationStep"
                    }
                },
                "workflowId": {
                    "description": "",
                    "type": "string"
                },
                "workflowLabel": {
                    "description": "",
                    "type": "string"
                },
                "workflowResourceKey": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Specifies an Identity Verification workflow."
        },
        "accountInformation": {
            "description": "Contains account Information.",
            "type": "object",
            "properties": {
                "accountIdGuid": {
                    "description": "The GUID associated with the account ID.",
                    "type": "string"
                },
                "accountName": {
                    "description": "The name of the current account.",
                    "type": "string"
                },
                "accountSettings": {
                    "$ref": "#/definitions/accountSettingsInformation",
                    "description": "The list of account settings. These determine the features available for the account. Note that some features are determined by the plan used to create the account, and cannot be overridden."
                },
                "allowTransactionRooms": {
                    "description": "When set to **true**, the transaction rooms feature exposed through the Workspaces API is enabled.",
                    "type": "string"
                },
                "billingPeriodDaysRemaining": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "billingPeriodEndDate": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "billingPeriodEnvelopesAllowed": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "billingPeriodEnvelopesSent": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "billingPeriodStartDate": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "billingProfile": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "brands": {
                    "$ref": "#/definitions/brandsResponse",
                    "description": ""
                },
                "canUpgrade": {
                    "description": "When set to **true**, specifies that you can upgrade the account through the API.",
                    "type": "string"
                },
                "connectPermission": {
                    "description": "",
                    "type": "string"
                },
                "createdDate": {
                    "description": "",
                    "type": "string"
                },
                "currencyCode": {
                    "description": "Specifies the ISO currency code for the account.",
                    "type": "string"
                },
                "currentPlanId": {
                    "description": "Identifies the plan that was used create this account.",
                    "type": "string"
                },
                "displayApplianceStartUrl": {
                    "description": "",
                    "type": "string"
                },
                "displayApplianceUrl": {
                    "description": "",
                    "type": "string"
                },
                "distributorCode": {
                    "description": "The code that identifies the billing plan groups and plans for the new account.",
                    "type": "string"
                },
                "docuSignLandingUrl": {
                    "description": "",
                    "type": "string"
                },
                "dssValues": {
                    "description": "",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "envelopeSendingBlocked": {
                    "description": "",
                    "type": "string"
                },
                "envelopeUnitPrice": {
                    "description": "",
                    "type": "string"
                },
                "externalAccountId": {
                    "description": "",
                    "type": "string"
                },
                "forgottenPasswordQuestionsCount": {
                    "description": " A complex element that contains up to four Question/Answer pairs for forgotten password information for a user.",
                    "type": "string"
                },
                "isDowngrade": {
                    "description": "",
                    "type": "string"
                },
                "paymentMethod": {
                    "description": "",
                    "type": "string"
                },
                "planClassification": {
                    "description": "Identifies the type of plan. Examples include Business, Corporate, Enterprise, Free.",
                    "type": "string"
                },
                "planEndDate": {
                    "description": "The date that the current plan will end.",
                    "type": "string"
                },
                "planName": {
                    "description": "The name of the Billing Plan.",
                    "type": "string"
                },
                "planStartDate": {
                    "description": "The date that the Account started using the current plan.",
                    "type": "string"
                },
                "recipientDomains": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientDomain"
                    }
                },
                "seatsAllowed": {
                    "description": "",
                    "type": "string"
                },
                "seatsInUse": {
                    "description": "",
                    "type": "string"
                },
                "status21CFRPart11": {
                    "description": "",
                    "type": "string"
                },
                "suspensionDate": {
                    "description": "",
                    "type": "string"
                },
                "suspensionStatus": {
                    "description": "",
                    "type": "string"
                },
                "useDisplayAppliance": {
                    "description": "",
                    "type": "boolean"
                }
            }
        },
        "accountMinimumPasswordLength": {
            "type": "object",
            "properties": {
                "maximumLength": {
                    "description": "",
                    "type": "string"
                },
                "minimumLength": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "accountNotification": {
            "type": "object",
            "properties": {
                "expirations": {
                    "$ref": "#/definitions/expirations",
                    "description": "A complex element that specifies the expiration settings for the envelope."
                },
                "reminders": {
                    "$ref": "#/definitions/reminders",
                    "description": "A complex element that specifies reminder settings for the envelope."
                },
                "userOverrideEnabled": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "A complex element that specifies notifications (expirations and reminders) for the envelope."
        },
        "accountPasswordExpirePasswordDays": {
            "type": "object",
            "properties": {
                "maximumDays": {
                    "description": "",
                    "type": "string"
                },
                "minimumDays": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "accountPasswordLockoutDurationMinutes": {
            "type": "object",
            "properties": {
                "maximumMinutes": {
                    "description": "",
                    "type": "string"
                },
                "minimumMinutes": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "accountPasswordLockoutDurationType": {
            "type": "object",
            "properties": {
                "options": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "accountPasswordMinimumPasswordAgeDays": {
            "type": "object",
            "properties": {
                "maximumAge": {
                    "description": "",
                    "type": "string"
                },
                "minimumAge": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "accountPasswordQuestionsRequired": {
            "type": "object",
            "properties": {
                "maximumQuestions": {
                    "description": "",
                    "type": "string"
                },
                "minimumQuestions": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Information about the number of password questions required (0 to 4) to confirm a user's identity when a user needs to reset their password."
        },
        "accountPasswordRules": {
            "type": "object",
            "properties": {
                "expirePassword": {
                    "description": "",
                    "type": "string"
                },
                "expirePasswordDays": {
                    "description": "",
                    "type": "string"
                },
                "expirePasswordDaysMetadata": {
                    "$ref": "#/definitions/accountPasswordExpirePasswordDays",
                    "description": "Metadata that indicates whether the `expirePasswordDays` property is editable.\n"
                },
                "lockoutDurationMinutes": {
                    "description": "",
                    "type": "string"
                },
                "lockoutDurationMinutesMetadata": {
                    "$ref": "#/definitions/accountPasswordLockoutDurationMinutes",
                    "description": "Metadata that indicates whether the `lockoutDurationMinutes` property is editable.\n"
                },
                "lockoutDurationType": {
                    "description": "",
                    "type": "string"
                },
                "lockoutDurationTypeMetadata": {
                    "$ref": "#/definitions/accountPasswordLockoutDurationType",
                    "description": "Metadata that indicates whether the `lockoutDurationType` property is editable.\n"
                },
                "minimumPasswordAgeDays": {
                    "description": "",
                    "type": "string"
                },
                "minimumPasswordAgeDaysMetadata": {
                    "$ref": "#/definitions/accountPasswordMinimumPasswordAgeDays",
                    "description": "Metadata that indicates whether the `minimumPasswordAgeDays` property is editable.\n"
                },
                "minimumPasswordLength": {
                    "description": "",
                    "type": "string"
                },
                "minimumPasswordLengthMetadata": {
                    "$ref": "#/definitions/accountMinimumPasswordLength",
                    "description": "Metadata that indicates whether the `minimumPasswordLength` property is editable.\n"
                },
                "passwordIncludeDigit": {
                    "description": "",
                    "type": "string"
                },
                "passwordIncludeDigitOrSpecialCharacter": {
                    "description": "",
                    "type": "string"
                },
                "passwordIncludeLowerCase": {
                    "description": "",
                    "type": "string"
                },
                "passwordIncludeSpecialCharacter": {
                    "description": "",
                    "type": "string"
                },
                "passwordIncludeUpperCase": {
                    "description": "",
                    "type": "string"
                },
                "passwordStrengthType": {
                    "description": "",
                    "type": "string"
                },
                "passwordStrengthTypeMetadata": {
                    "$ref": "#/definitions/accountPasswordStrengthType",
                    "description": "Metadata that indicates whether the `passwordStrengthType` property is editable.\n"
                },
                "questionsRequired": {
                    "description": "",
                    "type": "string"
                },
                "questionsRequiredMetadata": {
                    "$ref": "#/definitions/accountPasswordQuestionsRequired",
                    "description": "Metadata that indicates whether the `questionsRequired` property is editable.\n"
                }
            }
        },
        "accountPasswordStrengthType": {
            "type": "object",
            "properties": {
                "options": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/accountPasswordStrengthTypeOption"
                    }
                }
            }
        },
        "accountPasswordStrengthTypeOption": {
            "type": "object",
            "properties": {
                "minimumLength": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "passwordIncludeDigit": {
                    "description": "",
                    "type": "string"
                },
                "passwordIncludeDigitOrSpecialCharacter": {
                    "description": "",
                    "type": "string"
                },
                "passwordIncludeLowerCase": {
                    "description": "",
                    "type": "string"
                },
                "passwordIncludeSpecialCharacter": {
                    "description": "",
                    "type": "string"
                },
                "passwordIncludeUpperCase": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "accountRoleSettings": {
            "type": "object",
            "properties": {
                "allowAccountManagement": {
                    "description": "",
                    "type": "string"
                },
                "allowAccountManagementMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowAccountManagement` property is editable.\n"
                },
                "allowApiAccess": {
                    "description": "",
                    "type": "string"
                },
                "allowApiAccessMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowApiAccess` property is editable.\n"
                },
                "allowApiAccessToAccount": {
                    "description": "",
                    "type": "string"
                },
                "allowApiAccessToAccountMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowApiAccessToAccount` property is editable.\n"
                },
                "allowApiSendingOnBehalfOfOthers": {
                    "description": "",
                    "type": "string"
                },
                "allowApiSendingOnBehalfOfOthersMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowApiSendingOnBehalfOfOthers` property is editable.\n"
                },
                "allowApiSequentialSigning": {
                    "description": "",
                    "type": "string"
                },
                "allowApiSequentialSigningMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowApiSequentialSigning` property is editable.\n"
                },
                "allowAutoTagging": {
                    "description": "",
                    "type": "string"
                },
                "allowAutoTaggingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowAutoTagging` property is editable."
                },
                "allowBulkSending": {
                    "description": "",
                    "type": "string"
                },
                "allowBulkSendingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowBulkSending` property is editable.\n"
                },
                "allowDocuSignDesktopClient": {
                    "description": "",
                    "type": "string"
                },
                "allowDocuSignDesktopClientMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowDocuSignDesktopClient` property is editable.\n"
                },
                "allowedAddressBookAccess": {
                    "description": "",
                    "type": "string"
                },
                "allowedAddressBookAccessMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowedAddressBookAccess` property is editable.\n"
                },
                "allowedClickwrapsAccess": {
                    "description": "",
                    "type": "string"
                },
                "allowedClickwrapsAccessMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowedOrchestrationAccess": {
                    "description": "",
                    "type": "string"
                },
                "allowedOrchestrationAccessMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowedTemplateAccess": {
                    "description": "",
                    "type": "string"
                },
                "allowedTemplateAccessMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowedTemplateAccess` property is editable.\n"
                },
                "allowedToBeEnvelopeTransferRecipient": {
                    "description": "",
                    "type": "string"
                },
                "allowedToBeEnvelopeTransferRecipientMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowedToBeEnvelopeTransferRecipient` property is editable.\n"
                },
                "allowEnvelopeSending": {
                    "description": "",
                    "type": "string"
                },
                "allowEnvelopeSendingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowEnvelopeSending` property is editable.\n"
                },
                "allowESealRecipients": {
                    "description": "",
                    "type": "string"
                },
                "allowESealRecipientsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowESealRecipients` property is editable."
                },
                "allowPowerFormsAdminToAccessAllPowerFormEnvelopes": {
                    "description": "",
                    "type": "string"
                },
                "allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowPowerFormsAdminToAccessAllPowerFormEnvelopes` property is editable."
                },
                "allowSendersToSetRecipientEmailLanguage": {
                    "description": "",
                    "type": "string"
                },
                "allowSendersToSetRecipientEmailLanguageMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSendersToSetRecipientEmailLanguage` property is editable.\n"
                },
                "allowSignerAttachments": {
                    "description": "",
                    "type": "string"
                },
                "allowSignerAttachmentsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSignerAttachments` property is editable.\n"
                },
                "allowSupplementalDocuments": {
                    "description": "",
                    "type": "string"
                },
                "allowSupplementalDocumentsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSupplementalDocuments` property is editable."
                },
                "allowTaggingInSendAndCorrect": {
                    "description": "",
                    "type": "string"
                },
                "allowTaggingInSendAndCorrectMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowTaggingInSendAndCorrect` property is editable.\n"
                },
                "allowTransactions": {
                    "description": "",
                    "type": "string"
                },
                "allowTransactionsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowVaulting": {
                    "description": "",
                    "type": "string"
                },
                "allowVaultingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "allowWetSigningOverride": {
                    "description": "",
                    "type": "string"
                },
                "allowWetSigningOverrideMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowWetSigningOverride` property is editable.\n"
                },
                "canCreateTransaction": {
                    "description": "",
                    "type": "string"
                },
                "canCreateTransactionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canCreateWorkspaces": {
                    "description": "",
                    "type": "string"
                },
                "canCreateWorkspacesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "canDeleteDocumentsInTransaction": {
                    "description": "",
                    "type": "string"
                },
                "canDeleteDocumentsInTransactionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canDeleteTransaction": {
                    "description": "",
                    "type": "string"
                },
                "canDeleteTransactionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canSendEnvelopesViaSMS": {
                    "description": "",
                    "type": "string"
                },
                "canSendEnvelopesViaSMSMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "disableDocumentUpload": {
                    "description": "",
                    "type": "string"
                },
                "disableDocumentUploadMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `disableDocumentUpload` property is editable.\n"
                },
                "disableOtherActions": {
                    "description": "",
                    "type": "string"
                },
                "disableOtherActionsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `disableOtherActions` property is editable.\n"
                },
                "enableApiRequestLogging": {
                    "description": "",
                    "type": "string"
                },
                "enableApiRequestLoggingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableApiRequestLogging` property is editable.\n"
                },
                "enableKeyTermsSuggestionsByDocumentType": {
                    "description": "",
                    "type": "string"
                },
                "enableKeyTermsSuggestionsByDocumentTypeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableRecipientViewingNotifications": {
                    "description": "",
                    "type": "string"
                },
                "enableRecipientViewingNotificationsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableRecipientViewingNotifications` property is editable.\n"
                },
                "enableSequentialSigningInterface": {
                    "description": "",
                    "type": "string"
                },
                "enableSequentialSigningInterfaceMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSequentialSigningInterface` property is editable.\n"
                },
                "enableTransactionPointIntegration": {
                    "description": "",
                    "type": "string"
                },
                "enableTransactionPointIntegrationMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "powerFormRole": {
                    "description": "",
                    "type": "string"
                },
                "powerFormRoleMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `powerFormRole` property is editable.\n"
                },
                "receiveCompletedSelfSignedDocumentsAsEmailLinks": {
                    "description": "",
                    "type": "string"
                },
                "receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `receiveCompletedSelfSignedDocumentsAsEmailLinks` property is editable.\n"
                },
                "signingUiVersionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "supplementalDocumentsMustAccept": {
                    "description": "",
                    "type": "string"
                },
                "supplementalDocumentsMustAcceptMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `supplementalDocumentsMustAccept` property is editable.\n"
                },
                "supplementalDocumentsMustRead": {
                    "description": "",
                    "type": "string"
                },
                "supplementalDocumentsMustReadMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `supplementalDocumentsMustRead` property is editable.\n"
                },
                "supplementalDocumentsMustView": {
                    "description": "",
                    "type": "string"
                },
                "supplementalDocumentsMustViewMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `supplementalDocumentsMustView` property is editable.\n"
                },
                "useNewDocuSignExperienceInterface": {
                    "description": "",
                    "type": "string"
                },
                "useNewDocuSignExperienceInterfaceMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "useNewSendingInterface": {
                    "description": "",
                    "type": "string"
                },
                "useNewSendingInterfaceMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "vaultingMode": {
                    "description": "",
                    "type": "string"
                },
                "vaultingModeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "webForms": {
                    "description": "",
                    "type": "string"
                },
                "webFormsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                }
            },
            "description": "This object defines account permissions for users who are associated with the account permission profile. "
        },
        "accountSeals": {
            "type": "object",
            "properties": {
                "seals": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sealIdentifier"
                    }
                }
            }
        },
        "accountSettingsInformation": {
            "description": "Contains account settings information.",
            "type": "object",
            "properties": {
                "accessCodeFormat": {
                    "$ref": "#/definitions/accessCodeFormat",
                    "description": "Format of the string provided to a recipient in order to access an envelope."
                },
                "accountDateTimeFormat": {
                    "description": "",
                    "type": "string"
                },
                "accountDateTimeFormatMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `accountDateTimeFormat` property is editable."
                },
                "accountDefaultLanguage": {
                    "description": "",
                    "type": "string"
                },
                "accountDefaultLanguageMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "accountName": {
                    "description": "",
                    "type": "string"
                },
                "accountNameMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `accountName` property is editable."
                },
                "accountNotification": {
                    "$ref": "#/definitions/accountNotification",
                    "description": "An object that specifies notifications (expirations and reminders) for the envelope."
                },
                "accountUISettings": {
                    "$ref": "#/definitions/accountUISettings",
                    "description": "An object that defines the settings to use in the UI."
                },
                "adoptSigConfig": {
                    "description": "",
                    "type": "string"
                },
                "adoptSigConfigMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `adoptSigConfig` property is editable.\n"
                },
                "advancedCorrect": {
                    "description": "",
                    "type": "string"
                },
                "advancedCorrectMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `advancedCorrect` property is editable.\n"
                },
                "advancedSearchEnableTabField": {
                    "description": "",
                    "type": "string"
                },
                "advancedSearchEnableTabFieldMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "advancedSearchEnableTemplateIdField": {
                    "description": "",
                    "type": "string"
                },
                "advancedSearchEnableTemplateIdFieldMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "advancedSearchEnableTemplateNameField": {
                    "description": "",
                    "type": "string"
                },
                "advancedSearchEnableTemplateNameFieldMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowAccessCodeFormat": {
                    "description": "",
                    "type": "string"
                },
                "allowAccessCodeFormatMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowAccessCodeFormat` property is editable.\n"
                },
                "allowAccountManagementGranular": {
                    "description": "",
                    "type": "string"
                },
                "allowAccountManagementGranularMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowAccountManagementGranular` property is editable.\n"
                },
                "allowAccountMemberNameChange": {
                    "description": "",
                    "type": "string"
                },
                "allowAccountMemberNameChangeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowAccountMemberNameChange` property is editable.\n"
                },
                "allowACE": {
                    "description": "",
                    "type": "string"
                },
                "allowACEMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowAdvancedRecipientRoutingConditional": {
                    "description": "",
                    "type": "string"
                },
                "allowAdvancedRecipientRoutingConditionalMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the ` allowAdvancedRecipientRoutingConditional` property is editable."
                },
                "allowAgentNameEmailEdit": {
                    "description": "",
                    "type": "string"
                },
                "allowAgentNameEmailEditMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowAgentNameEmailEdit` property is editable.\n"
                },
                "allowAgreementActions": {
                    "description": "",
                    "type": "string"
                },
                "allowAgreementActionsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `allowAgreementActions` property."
                },
                "allowAgreementOrchestrations": {
                    "description": "",
                    "type": "string"
                },
                "allowAgreementOrchestrationsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowAutoNavSettings": {
                    "description": "",
                    "type": "string"
                },
                "allowAutoNavSettingsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowAutoNavSettings` property is editable.\n"
                },
                "allowAutoTagging": {
                    "description": "",
                    "type": "string"
                },
                "allowAutoTaggingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowAutoTagging` property is editable."
                },
                "allowBulkSend": {
                    "description": "",
                    "type": "string"
                },
                "allowBulkSendMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowBulkSend` property is editable.\n"
                },
                "allowCDWithdraw": {
                    "description": "",
                    "type": "string"
                },
                "allowCDWithdrawMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowCDWithdraw` property is editable.\n"
                },
                "allowConnectEnvelopeRemovedEvent": {
                    "description": "",
                    "type": "string"
                },
                "allowConnectHttpListenerConfigs": {
                    "description": "",
                    "type": "string"
                },
                "AllowConnectIdentityVerificationUI": {
                    "description": "",
                    "type": "string"
                },
                "allowConnectOAuthUI": {
                    "description": "",
                    "type": "string"
                },
                "allowConnectSendFinishLater": {
                    "description": "",
                    "type": "string"
                },
                "allowConnectSendFinishLaterMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowConnectSendFinishLater` property is editable.\n"
                },
                "allowConnectUnifiedPayloadUI": {
                    "description": "",
                    "type": "string"
                },
                "allowConsumerDisclosureOverride": {
                    "description": "",
                    "type": "string"
                },
                "allowConsumerDisclosureOverrideMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowConsumerDisclosureOverride` property is editable.\n"
                },
                "allowDataDownload": {
                    "description": "",
                    "type": "string"
                },
                "allowDataDownloadMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowDataDownload` property is editable.\n"
                },
                "allowDelayedRouting": {
                    "description": "\\\"true\\\" if the account has permission to use the delayed routing feature to insert delays before routing an envelope to a recipient, \\\"false\\\" otherwise.",
                    "type": "string"
                },
                "allowDelayedRoutingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowDelegatedSigning": {
                    "description": "",
                    "type": "string"
                },
                "allowDelegatedSigningMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowDocGenDocuments": {
                    "description": "",
                    "type": "string"
                },
                "allowDocGenDocumentsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowDocumentDisclosures": {
                    "description": "",
                    "type": "string"
                },
                "allowDocumentDisclosuresMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowDocumentDisclosures` property is editable.\n"
                },
                "allowDocumentsOnSignedEnvelopes": {
                    "description": "",
                    "type": "string"
                },
                "allowDocumentsOnSignedEnvelopesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowDocumentsOnSignedEnvelopes` property is editable.\n"
                },
                "allowDocumentVisibility": {
                    "description": "",
                    "type": "string"
                },
                "allowDocumentVisibilityMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowDocumentVisibility` property is editable.\n"
                },
                "allowEditingEnvelopesOnBehalfOfOthers": {
                    "description": "",
                    "type": "string"
                },
                "allowEditingEnvelopesOnBehalfOfOthersMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowEHankoStamps": {
                    "description": "",
                    "type": "string"
                },
                "allowEHankoStampsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowEHankoStamps` property is editable.\n"
                },
                "allowENoteEOriginal": {
                    "description": "",
                    "type": "string"
                },
                "allowENoteEOriginalMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowENoteEOriginal` property is editable.\n"
                },
                "allowEnvelopeCorrect": {
                    "description": "",
                    "type": "string"
                },
                "allowEnvelopeCorrectMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowEnvelopeCorrect` property is editable.\n"
                },
                "allowEnvelopeCustodyTransfer": {
                    "description": "",
                    "type": "string"
                },
                "allowEnvelopeCustodyTransferMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowEnvelopeCustodyTransfer` property is editable.\n"
                },
                "allowEnvelopeCustomFields": {
                    "description": "",
                    "type": "string"
                },
                "allowEnvelopeCustomFieldsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowEnvelopeCustomFields` property is editable.\n"
                },
                "allowEnvelopePublishReporting": {
                    "description": "",
                    "type": "string"
                },
                "allowEnvelopePublishReportingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowEnvelopePublishReporting` property is editable.\n"
                },
                "allowEnvelopeReporting": {
                    "description": "",
                    "type": "string"
                },
                "allowEnvelopeReportingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowEnvelopeReporting` property is editable.\n"
                },
                "allowExpression": {
                    "description": "",
                    "type": "string"
                },
                "allowExpressionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowExpression` property is editable.\n"
                },
                "allowExpressSignerCertificate": {
                    "description": "",
                    "type": "string"
                },
                "allowExpressSignerCertificateMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowExpressSignerCertificate` property is editable.\n"
                },
                "allowExtendedSendingResourceFile": {
                    "description": "",
                    "type": "string"
                },
                "allowExtendedSendingResourceFileMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowExtendedSendingResourceFile` property is editable.\n"
                },
                "allowExternalLinkedAccounts": {
                    "description": "",
                    "type": "string"
                },
                "allowExternalLinkedAccountsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowExternalSignaturePad": {
                    "description": "",
                    "type": "string"
                },
                "allowExternalSignaturePadMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowExternalSignaturePad` property is editable.\n"
                },
                "allowIDVForEUQualifiedSignatures": {
                    "description": "",
                    "type": "string"
                },
                "allowIDVForEUQualifiedSignaturesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowIDVLevel1": {
                    "description": "",
                    "type": "string"
                },
                "allowIDVLevel1Metadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowIDVLevel1` property is editable."
                },
                "allowIDVLevel1Trial": {
                    "description": "",
                    "type": "string"
                },
                "allowIDVLevel1TrialMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowIDVLevel2": {
                    "description": "",
                    "type": "string"
                },
                "allowIDVLevel2Metadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowIDVLevel3": {
                    "description": "",
                    "type": "string"
                },
                "allowIDVLevel3Metadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowIDVPlatform": {
                    "description": "",
                    "type": "string"
                },
                "allowIDVPlatformMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowIDVPlatform` property is editable."
                },
                "allowInPerson": {
                    "description": "",
                    "type": "string"
                },
                "allowInPersonElectronicNotary": {
                    "description": "Account Level Flag that determines the availability to perform In Person Electronic Notarial (IPEN) actions",
                    "type": "string"
                },
                "allowInPersonElectronicNotaryMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "MetaData for the Account Level Flag that determines the availability to perform In Person Electronic Notarial (IPEN) actions"
                },
                "allowInPersonMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowInPerson` property is editable.\n"
                },
                "allowManagedStamps": {
                    "description": "",
                    "type": "string"
                },
                "allowManagedStampsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowManagedStamps` property is editable.\n"
                },
                "allowManagingEnvelopesOnBehalfOfOthers": {
                    "description": "",
                    "type": "string"
                },
                "allowManagingEnvelopesOnBehalfOfOthersMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowMarkup": {
                    "description": "When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this",
                    "type": "string"
                },
                "allowMarkupMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowMarkup` property is editable.\n"
                },
                "allowMemberTimeZone": {
                    "description": "",
                    "type": "string"
                },
                "allowMemberTimeZoneMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowMemberTimeZone` property is editable.\n"
                },
                "allowMergeFields": {
                    "description": "",
                    "type": "string"
                },
                "allowMergeFieldsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowMergeFields` property is editable.\n"
                },
                "allowMultipleBrandProfiles": {
                    "description": "",
                    "type": "string"
                },
                "allowMultipleBrandProfilesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowMultipleBrandProfiles` property is editable.\n"
                },
                "allowMultipleSignerAttachments": {
                    "description": "",
                    "type": "string"
                },
                "allowMultipleSignerAttachmentsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowMultipleSignerAttachments` property is editable.\n"
                },
                "allowNonUSPhoneAuth": {
                    "description": "",
                    "type": "string"
                },
                "allowNonUSPhoneAuthMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowNonUSPhoneAuth` property is editable.\n"
                },
                "allowOcrOfEnvelopeDocuments": {
                    "description": "",
                    "type": "string"
                },
                "allowOcrOfEnvelopeDocumentsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowOfflineSigning": {
                    "description": "",
                    "type": "string"
                },
                "allowOfflineSigningMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowOfflineSigning` property is editable.\n"
                },
                "allowOpenTrustSignerCertificate": {
                    "description": "",
                    "type": "string"
                },
                "allowOpenTrustSignerCertificateMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowOpenTrustSignerCertificate` property is editable.\n"
                },
                "allowOrganizationBranding": {
                    "description": "",
                    "type": "string"
                },
                "allowOrganizationBrandingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowOrganizationDocusignMonitor": {
                    "description": "",
                    "type": "string"
                },
                "allowOrganizationDocusignMonitorFree": {
                    "description": "",
                    "type": "string"
                },
                "allowOrganizationDocusignMonitorFreeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowOrganizationDocusignMonitorMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowOrganizationDomainUserManagement": {
                    "description": "",
                    "type": "string"
                },
                "allowOrganizationDomainUserManagementMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowOrganizations": {
                    "description": "",
                    "type": "string"
                },
                "allowOrganizationsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowOrganizations` property is editable.\n"
                },
                "allowOrganizationSsoManagement": {
                    "description": "",
                    "type": "string"
                },
                "allowOrganizationSsoManagementMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowOrganizationToUseInPersonElectronicNotary": {
                    "description": "Organization Level Flag that determines the availability to perform In Person Electronic Notarial (IPEN) actions",
                    "type": "string"
                },
                "allowOrganizationToUseInPersonElectronicNotaryMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "MetaData for the Organization Level Flag that determines the availability to perform In Person Electronic Notarial (IPEN) actions"
                },
                "allowOrganizationToUseRemoteNotary": {
                    "description": "",
                    "type": "string"
                },
                "allowOrganizationToUseRemoteNotaryMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowOrganizationToUseThirdPartyElectronicNotary": {
                    "description": "Org level flag that determines the abailability to perform Third Party Notary (3PN) actions.",
                    "type": "string"
                },
                "allowOrganizationToUseThirdPartyElectronicNotaryMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata for the org level flag that dtermines the availablity to perform Third Party Notary (3PN) actions."
                },
                "allowParticipantRecipientType": {
                    "description": "",
                    "type": "string"
                },
                "allowParticipantRecipientTypeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowPaymentProcessing": {
                    "description": "",
                    "type": "string"
                },
                "allowPaymentProcessingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowPaymentProcessing` property is editable.\n"
                },
                "allowPendingDestinationUrlEdition": {
                    "description": "",
                    "type": "string"
                },
                "allowPendingDestinationUrlEditionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowPerformanceAnalytics": {
                    "description": "",
                    "type": "string"
                },
                "allowPerformanceAnalyticsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowPhoneAuthentication": {
                    "description": "",
                    "type": "string"
                },
                "allowPhoneAuthenticationMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowPhoneAuthentication` property is editable.\n"
                },
                "allowPhoneAuthOverride": {
                    "description": "",
                    "type": "string"
                },
                "allowPhoneAuthOverrideMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowPhoneAuthOverride` property is editable.\n"
                },
                "allowPrivateSigningGroups": {
                    "description": "",
                    "type": "string"
                },
                "allowPrivateSigningGroupsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowPrivateSigningGroups` property is editable.\n"
                },
                "allowRecipientConnect": {
                    "description": "",
                    "type": "string"
                },
                "allowRecipientConnectMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowReminders": {
                    "description": "",
                    "type": "string"
                },
                "allowRemindersMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowReminders` property is editable.\n"
                },
                "allowRemoteNotary": {
                    "description": "",
                    "type": "string"
                },
                "allowRemoteNotaryMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowResourceFileBranding": {
                    "description": "",
                    "type": "string"
                },
                "allowResourceFileBrandingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowResourceFileBranding` property is editable.\n"
                },
                "allowSafeBioPharmaSignerCertificate": {
                    "description": "",
                    "type": "string"
                },
                "allowSafeBioPharmaSignerCertificateMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSafeBioPharmaSignerCertificate` property is editable.\n"
                },
                "allowScheduledSending": {
                    "description": "\\\"true\\\" if the account has permission to use the scheduled sending feature to send envelopes at a specified datetime in the future, \\\"false\\\" otherwise.",
                    "type": "string"
                },
                "allowScheduledSendingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowSecurityAppliance": {
                    "description": "",
                    "type": "string"
                },
                "allowSecurityApplianceMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSecurityAppliance` property is editable.\n"
                },
                "allowSendingEnvelopesOnBehalfOfOthers": {
                    "description": "",
                    "type": "string"
                },
                "allowSendingEnvelopesOnBehalfOfOthersMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowSendToCertifiedDelivery": {
                    "description": "",
                    "type": "string"
                },
                "allowSendToCertifiedDeliveryMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSendToCertifiedDelivery` property is editable.\n"
                },
                "allowSendToIntermediary": {
                    "description": "",
                    "type": "string"
                },
                "allowSendToIntermediaryMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSendToIntermediary` property is editable.\n"
                },
                "allowServerTemplates": {
                    "description": "",
                    "type": "string"
                },
                "allowServerTemplatesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowServerTemplates` property is editable.\n"
                },
                "allowSetEmbeddedRecipientStartURL": {
                    "description": "",
                    "type": "string"
                },
                "allowSetEmbeddedRecipientStartURLMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowSharedTabs": {
                    "description": "",
                    "type": "string"
                },
                "allowSharedTabsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSharedTabs` property is editable.\n"
                },
                "allowSignatureStamps": {
                    "description": "",
                    "type": "string"
                },
                "allowSignatureStampsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSignatureStamps` property is editable.\n"
                },
                "allowSignDocumentFromHomePage": {
                    "description": "",
                    "type": "string"
                },
                "allowSignDocumentFromHomePageMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSignDocumentFromHomePage` property is editable.\n"
                },
                "allowSignerReassign": {
                    "description": "",
                    "type": "string"
                },
                "allowSignerReassignMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSignerReassign` property is editable.\n"
                },
                "allowSignerReassignOverride": {
                    "description": "",
                    "type": "string"
                },
                "allowSignerReassignOverrideMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSignerReassignOverride` property is editable.\n"
                },
                "allowSigningExtensions": {
                    "description": "",
                    "type": "string"
                },
                "allowSigningExtensionsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSigningExtensions` property is editable.\n"
                },
                "allowSigningGroups": {
                    "description": "",
                    "type": "string"
                },
                "allowSigningGroupsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSigningGroups` property is editable.\n"
                },
                "allowSigningInsights": {
                    "description": "",
                    "type": "string"
                },
                "allowSigningInsightsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowSigningRadioDeselect": {
                    "description": "",
                    "type": "string"
                },
                "allowSigningRadioDeselectMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSigningRadioDeselect` property is editable.\n"
                },
                "allowSignNow": {
                    "description": "",
                    "type": "string"
                },
                "allowSignNowMetadata": {
                    "description": "",
                    "type": "string"
                },
                "allowSMSDelivery": {
                    "description": "",
                    "type": "string"
                },
                "allowSMSDeliveryMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowSocialIdLogin": {
                    "description": "",
                    "type": "string"
                },
                "allowSocialIdLoginMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Deprecated."
                },
                "allowSupplementalDocuments": {
                    "description": "",
                    "type": "string"
                },
                "allowSupplementalDocumentsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSupplementalDocuments` property is editable."
                },
                "allowThirdPartyElectronicNotary": {
                    "description": "Account level flag that determines the availability to perform Third Party Notary (3PN) actions.",
                    "type": "string"
                },
                "allowThirdPartyElectronicNotaryMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowTransactionsWorkspace": {
                    "description": "",
                    "type": "string"
                },
                "allowTransactionsWorkspaceMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowTransactionsWorkspaceOriginal": {
                    "description": "",
                    "type": "string"
                },
                "allowTransactionsWorkspaceOriginalMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowUsersToAccessDirectory": {
                    "description": "",
                    "type": "string"
                },
                "allowUsersToAccessDirectoryMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowValueInsights": {
                    "description": "",
                    "type": "string"
                },
                "allowValueInsightsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowWebForms": {
                    "description": "",
                    "type": "string"
                },
                "allowWebFormsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowWhatsAppDelivery": {
                    "description": "",
                    "type": "string"
                },
                "allowWhatsAppDeliveryMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "anchorPopulationScope": {
                    "description": "",
                    "type": "string"
                },
                "anchorPopulationScopeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `anchorPopulationScope` property is editable.\n"
                },
                "anchorTagVersionedPlacementEnabled": {
                    "description": "",
                    "type": "string"
                },
                "anchorTagVersionedPlacementMetadataEnabled": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "attachCompletedEnvelope": {
                    "description": "",
                    "type": "string"
                },
                "attachCompletedEnvelopeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `attachCompletedEnvelope` property is editable."
                },
                "authenticationCheck": {
                    "description": "",
                    "type": "string"
                },
                "authenticationCheckMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `authenticationCheck` property is editable.\n"
                },
                "autoNavRule": {
                    "description": "",
                    "type": "string"
                },
                "autoNavRuleMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `autoNavRule` property is editable.\n"
                },
                "autoProvisionSignerAccount": {
                    "description": "",
                    "type": "string"
                },
                "autoProvisionSignerAccountMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `autoProvisionSignerAccount` property is editable.\n"
                },
                "bccEmailArchive": {
                    "description": "",
                    "type": "string"
                },
                "bccEmailArchiveMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `bccEmailArchive` property is editable.\n"
                },
                "betaSwitchConfiguration": {
                    "description": "",
                    "type": "string"
                },
                "betaSwitchConfigurationMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "billingAddress": {
                    "$ref": "#/definitions/addressInformation",
                    "description": "The billing address for the account."
                },
                "billingAddressMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `billingAddress` property is editable.\n"
                },
                "bulkSend": {
                    "description": "",
                    "type": "string"
                },
                "bulkSendActionResendLimit": {
                    "description": "",
                    "type": "string"
                },
                "bulkSendMaxCopiesInBatch": {
                    "description": "",
                    "type": "string"
                },
                "bulkSendMaxUnprocessedEnvelopesCount": {
                    "description": "",
                    "type": "string"
                },
                "bulkSendMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `bulkSend` property is editable.\n"
                },
                "canSelfBrandSend": {
                    "description": "",
                    "type": "string"
                },
                "canSelfBrandSendMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `canSelfBrandSend` property is editable.\n"
                },
                "canSelfBrandSign": {
                    "description": "",
                    "type": "string"
                },
                "canSelfBrandSignMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `canSelfBrandSign` property is editable.\n"
                },
                "canUseSalesforceOAuth": {
                    "description": "",
                    "type": "string"
                },
                "canUseSalesforceOAuthMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "captureVoiceRecording": {
                    "description": "",
                    "type": "string"
                },
                "captureVoiceRecordingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "cfr21SimplifiedSigningEnabled": {
                    "description": "",
                    "type": "string"
                },
                "cfr21SimplifiedSigningEnabledMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "cfrUseWideImage": {
                    "description": "",
                    "type": "string"
                },
                "cfrUseWideImageMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `cfrUseWideImage` property is editable.\n"
                },
                "checkForMultipleAdminsOnAccount": {
                    "description": "",
                    "type": "string"
                },
                "checkForMultipleAdminsOnAccountMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `checkForMultipleAdminsOnAccount` property is editable."
                },
                "chromeSignatureEnabled": {
                    "description": "",
                    "type": "string"
                },
                "chromeSignatureEnabledMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `chromeSignatureEnabled` property is editable.\n"
                },
                "commentEmailShowMessageText": {
                    "description": "",
                    "type": "string"
                },
                "commentEmailShowMessageTextMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `commentEmailShowMessageText` property is editable.\n"
                },
                "commentsAllowEnvelopeOverride": {
                    "description": "",
                    "type": "string"
                },
                "commentsAllowEnvelopeOverrideMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `commentsAllowEnvelopeOverride` property is editable.\n"
                },
                "conditionalFieldsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "conditionalFieldsEnabledMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `conditionalFieldsEnabled` property is editable.\n"
                },
                "consumerDisclosureFrequency": {
                    "description": "",
                    "type": "string"
                },
                "consumerDisclosureFrequencyMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `consumerDisclosureFrequency` property is editable.\n"
                },
                "convertPdfFields": {
                    "description": "",
                    "type": "string"
                },
                "convertPdfFieldsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `convertPdfFields` property is editable.\n"
                },
                "dataPopulationScope": {
                    "description": "",
                    "type": "string"
                },
                "dataPopulationScopeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `dataPopulationScope` property is editable.\n"
                },
                "defaultToAdvancedEnvelopesFilterForm": {
                    "description": "",
                    "type": "string"
                },
                "defaultToAdvancedEnvelopesFilterFormMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "disableAutoTemplateMatching": {
                    "description": "",
                    "type": "string"
                },
                "disableAutoTemplateMatchingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "disableBulkSendRecipientLimit": {
                    "description": "",
                    "type": "string"
                },
                "disableBulkSendRecipientLimitMetaData": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "disableMobileApp": {
                    "description": "",
                    "type": "string"
                },
                "disableMobileAppMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `disableMobileApp` property is editable.\n"
                },
                "disableMobilePushNotifications": {
                    "description": "",
                    "type": "string"
                },
                "disableMobilePushNotificationsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `disableMobilePushNotifications` property is editable.\n"
                },
                "disableMobileSending": {
                    "description": "",
                    "type": "string"
                },
                "disableMobileSendingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `disableMobileSending` property is editable.\n"
                },
                "disableMultipleSessions": {
                    "description": "",
                    "type": "string"
                },
                "disableMultipleSessionsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `disableMultipleSessions` property is editable.\n"
                },
                "disablePurgeNotificationsForSenderMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "disableSignerCertView": {
                    "description": "",
                    "type": "string"
                },
                "disableSignerCertViewMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `disableSignerCertView` property is editable.\n"
                },
                "disableSignerHistoryView": {
                    "description": "",
                    "type": "string"
                },
                "disableSignerHistoryViewMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `disableSignerHistoryView` property is editable.\n"
                },
                "disableStyleSignature": {
                    "description": "",
                    "type": "string"
                },
                "disableStyleSignatureMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `disableStyleSignature` property is editable.\n"
                },
                "disableUploadSignature": {
                    "description": "",
                    "type": "string"
                },
                "disableUploadSignatureMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `disableUploadSignature` property is editable.\n"
                },
                "disableUserSharing": {
                    "description": "",
                    "type": "string"
                },
                "disableUserSharingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `disableUserSharing` property is editable.\n"
                },
                "displayBetaSwitch": {
                    "description": "",
                    "type": "string"
                },
                "displayBetaSwitchMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `displayBetaSwitch` property is editable.\n"
                },
                "documentConversionRestrictions": {
                    "description": "",
                    "type": "string"
                },
                "documentConversionRestrictionsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `documentConversionRestrictions` property is editable.\n"
                },
                "documentRetention": {
                    "description": "",
                    "type": "string"
                },
                "documentRetentionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `documentRetention` property is editable.\n"
                },
                "documentRetentionPurgeTabs": {
                    "description": "",
                    "type": "string"
                },
                "documentVisibility": {
                    "description": "",
                    "type": "string"
                },
                "documentVisibilityMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `documentVisibility` property is editable.\n"
                },
                "draftEnvelopeRetention": {
                    "description": "",
                    "type": "string"
                },
                "draftEnvelopeRetentionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "dss_EnableProvisioningPenConfiguration_RadminOption": {
                    "description": "",
                    "type": "string"
                },
                "dss_EnableSignatureTypeCustomTagRadmin_RadminOption": {
                    "description": "",
                    "type": "string"
                },
                "dss_SIGN_28411_EnableLeavePagePrompt_RadminOption": {
                    "description": "",
                    "type": "string"
                },
                "dss_SIGN_29182_SlideUpBar_RadminOption": {
                    "description": "",
                    "type": "string"
                },
                "emailTemplateVersion": {
                    "description": "",
                    "type": "string"
                },
                "emailTemplateVersionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `emailTemplateVersion` property is editable.\n"
                },
                "enableAccessCodeGenerator": {
                    "description": "",
                    "type": "string"
                },
                "enableAccessCodeGeneratorMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableAccessCodeGenerator` property is editable.\n"
                },
                "enableAccountWideSearch": {
                    "description": "",
                    "type": "string"
                },
                "enableAccountWideSearchMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableAdmHealthcare": {
                    "description": "Account Level Flag that determines the availability to use ADM Healthcare fields",
                    "type": "string"
                },
                "enableAdmHealthcareMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata for account Level Flag that determines the availability to use ADM Healthcare fields"
                },
                "enableAdvancedEnvelopesSearch": {
                    "description": "",
                    "type": "string"
                },
                "enableAdvancedEnvelopesSearchMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableAdvancedPayments": {
                    "description": "",
                    "type": "string"
                },
                "enableAdvancedPaymentsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableAdvancedPayments` property is editable.\n"
                },
                "enableAdvancedPowerForms": {
                    "description": "",
                    "type": "string"
                },
                "enableAdvancedPowerFormsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableAdvancedPowerForms` property is editable.\n"
                },
                "enableAdvancedSearch": {
                    "description": "",
                    "type": "string"
                },
                "enableAdvancedSearchMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableAgreementActionsForCLM": {
                    "description": "",
                    "type": "string"
                },
                "enableAgreementActionsForCLMMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableAgreementActionsForESign": {
                    "description": "",
                    "type": "string"
                },
                "enableAgreementActionsForESignMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableAutoNav": {
                    "description": "",
                    "type": "string"
                },
                "enableAutoNavMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableAutoNav` property is editable.\n"
                },
                "enableBccDummyLink": {
                    "description": "",
                    "type": "string"
                },
                "enableBccDummyLinkMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableCalculatedFields": {
                    "description": "",
                    "type": "string"
                },
                "enableCalculatedFieldsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableCalculatedFields` property is editable.\n"
                },
                "enableClickPlus": {
                    "description": "",
                    "type": "string"
                },
                "enableClickPlusConditionalContent": {
                    "description": "",
                    "type": "string"
                },
                "enableClickPlusConditionalContentMetaData": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableClickPlusCustomFields": {
                    "description": "",
                    "type": "string"
                },
                "enableClickPlusCustomFieldsMetaData": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableClickPlusCustomStyle": {
                    "description": "",
                    "type": "string"
                },
                "enableClickPlusCustomStyleMetaData": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableClickPlusDynamicContent": {
                    "description": "",
                    "type": "string"
                },
                "enableClickPlusDynamicContentMetaData": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableClickPlusMetaData": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableClickwraps": {
                    "description": "",
                    "type": "string"
                },
                "enableClickwrapsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableClickwraps` property is editable.\n"
                },
                "enableCombinedPDFDownloadForSBS": {
                    "description": "",
                    "type": "string"
                },
                "enableCommentsHistoryDownloadInSigning": {
                    "description": "",
                    "type": "string"
                },
                "enableCommentsHistoryDownloadInSigningMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableContactSuggestions": {
                    "description": "",
                    "type": "string"
                },
                "enableContactSuggestionsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableContentSearch": {
                    "description": "",
                    "type": "string"
                },
                "enableContentSearchMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableCustomerSatisfactionMetricTracking": {
                    "description": "",
                    "type": "string"
                },
                "enableCustomerSatisfactionMetricTrackingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableCustomerSatisfactionMetricTracking` property is editable.\n"
                },
                "enableDataVerificationExtensions": {
                    "description": "",
                    "type": "string"
                },
                "enableDataVerificationExtensionsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableDSigEUAdvancedPens": {
                    "description": "",
                    "type": "string"
                },
                "enableDSigEUAdvancedPensMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableDSigExpressPens": {
                    "description": "",
                    "type": "string"
                },
                "enableDSigExpressPensMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableDSigIDCheckForAESPens": {
                    "description": "",
                    "type": "string"
                },
                "enableDSigIDCheckForAESPensMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableDSigIDCheckInPersonForQESPens": {
                    "description": "",
                    "type": "string"
                },
                "enableDSigIDCheckInPersonForQESPensMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableDSigIDCheckRemoteForQESPens": {
                    "description": "",
                    "type": "string"
                },
                "enableDSigIDCheckRemoteForQESPensMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableDSigIDVerificationPens": {
                    "description": "",
                    "type": "string"
                },
                "enableDSigIDVerificationPensMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableDSigIDVerificationPremierPens": {
                    "description": "",
                    "type": "string"
                },
                "enableDSigIDVerificationPremierPensMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableDSPro": {
                    "description": "",
                    "type": "string"
                },
                "enableDSProMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableDSPro` property is editable.\n"
                },
                "enableEnforceTlsEmailsSettingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableEnvelopeStampingByAccountAdmin": {
                    "description": "",
                    "type": "string"
                },
                "enableEnvelopeStampingByAccountAdminMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableEnvelopeStampingByAccountAdmin` property is editable.\n"
                },
                "enableEnvelopeStampingByDSAdmin": {
                    "description": "",
                    "type": "string"
                },
                "enableEnvelopeStampingByDSAdminMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableEnvelopeStampingByDSAdmin` property is editable.\n"
                },
                "enableESignAPIHourlyLimitManagement": {
                    "description": "",
                    "type": "string"
                },
                "enableESignAPIHourlyLimitManagementMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableEsignCommunities": {
                    "description": "",
                    "type": "string"
                },
                "enableEsignCommunitiesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableIDFxAccountlessSMSAuthForPart11": {
                    "description": "",
                    "type": "string"
                },
                "enableIDFxAccountlessSMSAuthForPart11Metadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableIDFxIntuitKBA": {
                    "description": "",
                    "type": "string"
                },
                "enableIDFxIntuitKBAMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableIDFxPhoneAuthentication": {
                    "description": "",
                    "type": "string"
                },
                "enableIDFxPhoneAuthenticationMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableIdfxPhoneAuthSignatureAuthStatus": {
                    "description": "",
                    "type": "string"
                },
                "enableIdfxPhoneAuthSignatureAuthStatusMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableInboxBrowseViewsPoweredByElasticSearch": {
                    "description": "",
                    "type": "string"
                },
                "enableInboxBrowseViewsPoweredByElasticSearchMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableInboxRelevanceSort": {
                    "description": "",
                    "type": "string"
                },
                "enableInboxRelevanceSortMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableInBrowserEditor": {
                    "description": "",
                    "type": "string"
                },
                "enableInBrowserEditorMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableKeyTermsSuggestionsByDocumentType": {
                    "description": "",
                    "type": "string"
                },
                "enableKeyTermsSuggestionsByDocumentTypeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableLargeFileSupport": {
                    "description": "",
                    "type": "string"
                },
                "enableLargeFileSupportMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableMultiUserRepositoryFeatures": {
                    "description": "",
                    "type": "string"
                },
                "enableMultiUserRepositoryFeaturesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableParticipantRecipientSettingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enablePaymentProcessing": {
                    "description": "",
                    "type": "string"
                },
                "enablePaymentProcessingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enablePaymentProcessing` property is editable.\n"
                },
                "enablePDFAConversion": {
                    "description": "",
                    "type": "string"
                },
                "enablePDFAConversionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enablePowerForm": {
                    "description": "",
                    "type": "string"
                },
                "enablePowerFormDirect": {
                    "description": "",
                    "type": "string"
                },
                "enablePowerFormDirectMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enablePowerFormDirect` property is editable.\n"
                },
                "enablePowerFormMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enablePowerForm` property is editable.\n"
                },
                "enablePremiumDataVerificationExtensions": {
                    "description": "",
                    "type": "string"
                },
                "enablePremiumDataVerificationExtensionsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableRecipientDomainValidation": {
                    "description": "",
                    "type": "string"
                },
                "enableRecipientDomainValidationMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableRecipientDomainValidation` property is editable.\n"
                },
                "enableRecipientMayProvidePhoneNumber": {
                    "description": "",
                    "type": "string"
                },
                "enableRecipientMayProvidePhoneNumberMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableReportLinks": {
                    "description": "",
                    "type": "string"
                },
                "enableReportLinksMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableReportLinks` property is editable.\n"
                },
                "enableRequireSignOnPaper": {
                    "description": "",
                    "type": "string"
                },
                "enableRequireSignOnPaperMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableRequireSignOnPaper` property is editable.\n"
                },
                "enableReservedDomain": {
                    "description": "",
                    "type": "string"
                },
                "enableReservedDomainMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableReservedDomain` property is editable.\n"
                },
                "enableResponsiveSigning": {
                    "description": "",
                    "type": "string"
                },
                "enableResponsiveSigningMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableResponsiveSigning` property is editable.\n"
                },
                "enableSaveAsEnvelopeCustomFieldInWebForms": {
                    "description": "",
                    "type": "string"
                },
                "enableSaveAsEnvelopeCustomFieldInWebFormsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableScheduledRelease": {
                    "description": "",
                    "type": "string"
                },
                "enableScheduledReleaseMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableScheduledRelease` property is editable.\n"
                },
                "enableSearchServiceAzureUri": {
                    "description": "",
                    "type": "string"
                },
                "enableSearchServiceAzureUriMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableSearchSiteSpecificApi": {
                    "description": "",
                    "type": "string"
                },
                "enableSearchSiteSpecificApiMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableSendingTagsFontSettings": {
                    "description": "",
                    "type": "string"
                },
                "enableSendingTagsFontSettingsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSendingTagsFontSettings` property is editable.\n"
                },
                "enableSendToAgent": {
                    "description": "",
                    "type": "string"
                },
                "enableSendToAgentMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSendToAgent` property is editable.\n"
                },
                "enableSendToIntermediary": {
                    "description": "",
                    "type": "string"
                },
                "enableSendToIntermediaryMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSendToIntermediary` property is editable.\n"
                },
                "enableSendToManage": {
                    "description": "",
                    "type": "string"
                },
                "enableSendToManageMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSendToManage` property is editable.\n"
                },
                "enableSequentialSigningAPI": {
                    "description": "",
                    "type": "string"
                },
                "enableSequentialSigningAPIMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSequentialSigningAPI` property is editable.\n"
                },
                "enableSequentialSigningUI": {
                    "description": "",
                    "type": "string"
                },
                "enableSequentialSigningUIMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSequentialSigningUI` property is editable.\n"
                },
                "enableSignerAttachments": {
                    "description": "",
                    "type": "string"
                },
                "enableSignerAttachmentsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSignerAttachments` property is editable.\n"
                },
                "enableSigningExtensionComments": {
                    "description": "",
                    "type": "string"
                },
                "enableSigningExtensionCommentsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSigningExtensionComments` property is editable.\n"
                },
                "enableSigningExtensionConversations": {
                    "description": "",
                    "type": "string"
                },
                "enableSigningExtensionConversationsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSigningExtensionConversations` property is editable.\n"
                },
                "enableSigningOrderSettingsForAccount": {
                    "description": "",
                    "type": "string"
                },
                "enableSigningOrderSettingsForAccountMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSigningOrderSettingsForAccount` property is editable.\n"
                },
                "enableSignOnPaper": {
                    "description": "",
                    "type": "string"
                },
                "enableSignOnPaperMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSignOnPaper` property is editable.\n"
                },
                "enableSignOnPaperOverride": {
                    "description": "",
                    "type": "string"
                },
                "enableSignOnPaperOverrideMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSignOnPaperOverride` property is editable.\n"
                },
                "enableSignWithNotary": {
                    "description": "",
                    "type": "string"
                },
                "enableSignWithNotaryMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSignWithNotary` property is editable.\n"
                },
                "enableSmartContracts": {
                    "description": "",
                    "type": "string"
                },
                "enableSmartContractsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSmartContracts` property is editable."
                },
                "enableSMSAuthentication": {
                    "description": "",
                    "type": "string"
                },
                "enableSMSAuthenticationMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSMSAuthentication` property is editable.\n"
                },
                "enableSMSDeliveryAdditionalNotification": {
                    "description": "",
                    "type": "string"
                },
                "enableSMSDeliveryAdditionalNotificationMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableSMSDeliveryPrimary": {
                    "description": "",
                    "type": "string"
                },
                "enableSocialIdLogin": {
                    "description": "",
                    "type": "string"
                },
                "enableSocialIdLoginMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Deprecated."
                },
                "enableStrikeThrough": {
                    "description": "",
                    "type": "string"
                },
                "enableStrikeThroughMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableStrikeThrough` property is editable.\n"
                },
                "enableTransactionPoint": {
                    "description": "",
                    "type": "string"
                },
                "enableTransactionPointMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "enableUnifiedRepository": {
                    "description": "",
                    "type": "string"
                },
                "enableUnifiedRepositoryMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableVaulting": {
                    "description": "",
                    "type": "string"
                },
                "enableVaultingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableVaulting` property is editable.\n"
                },
                "enableWebFormsRuntimeAPIs": {
                    "description": "",
                    "type": "string"
                },
                "enableWebFormsRuntimeAPIsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableWebFormsSeparateUserPermissions": {
                    "description": "",
                    "type": "string"
                },
                "enableWebFormsSeparateUserPermissionsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableWitnessing": {
                    "description": "",
                    "type": "string"
                },
                "enableWitnessingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableWitnessing` property is editable.\n"
                },
                "enforceTemplateNameUniqueness": {
                    "description": "",
                    "type": "string"
                },
                "enforceTemplateNameUniquenessMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enforceTemplateNameUniqueness` property is editable.\n"
                },
                "enforceTlsEmails": {
                    "description": "",
                    "type": "string"
                },
                "enforceTlsEmailsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "envelopeIntegrationAllowed": {
                    "description": "",
                    "type": "string"
                },
                "envelopeIntegrationAllowedMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `envelopeIntegrationAllowed` property is editable.\n"
                },
                "envelopeIntegrationEnabled": {
                    "description": "",
                    "type": "string"
                },
                "envelopeIntegrationEnabledMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `envelopeIntegrationEnabled` property is editable.\n"
                },
                "EnvelopeLimitsTotalDocumentSizeAllowedInMB": {
                    "description": "",
                    "type": "string"
                },
                "EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled": {
                    "description": "",
                    "type": "string"
                },
                "EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "envelopeSearchMode": {
                    "description": "",
                    "type": "string"
                },
                "envelopeSearchModeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "envelopeStampingDefaultValue": {
                    "description": "",
                    "type": "string"
                },
                "envelopeStampingDefaultValueMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `envelopeStampingDefaultValue` property is editable.\n"
                },
                "exitPrompt": {
                    "description": "",
                    "type": "string"
                },
                "exitPromptMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "expressSend": {
                    "description": "",
                    "type": "string"
                },
                "expressSendAllowTabs": {
                    "description": "",
                    "type": "string"
                },
                "expressSendAllowTabsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `expressSendAllowTabs` property is editable.\n"
                },
                "expressSendMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `expressSend` property is editable.\n"
                },
                "externalDocumentSources": {
                    "$ref": "#/definitions/externalDocumentSources",
                    "description": "A list of external document sources such as DropBox and OneDrive."
                },
                "externalSignaturePadType": {
                    "description": "",
                    "type": "string"
                },
                "externalSignaturePadTypeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `externalSignaturePadType` property is editable.\n"
                },
                "faxOutEnabled": {
                    "description": "",
                    "type": "string"
                },
                "faxOutEnabledMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `faxOutEnabled` property is editable.\n"
                },
                "finishReminder": {
                    "description": "",
                    "type": "string"
                },
                "finishReminderMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "forbidAddingUserStamps": {
                    "description": "",
                    "type": "string"
                },
                "forbidAddingUserStampsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "guidedFormsHtmlAllowed": {
                    "description": "",
                    "type": "string"
                },
                "guidedFormsHtmlAllowedMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "guidedFormsHtmlConversionPolicy": {
                    "description": "",
                    "type": "string"
                },
                "guidedFormsHtmlConversionPolicyMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "hasRecipientConnectClaimedDomain": {
                    "description": "",
                    "type": "string"
                },
                "hideAccountAddressInCoC": {
                    "description": "",
                    "type": "string"
                },
                "hideAccountAddressInCoCMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `hideAccountAddressInCoC` property is editable.\n"
                },
                "hidePricing": {
                    "description": "",
                    "type": "string"
                },
                "hidePricingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `hidePricing` property is editable.\n"
                },
                "idCheckConfigurations": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/idCheckConfiguration"
                    }
                },
                "idCheckExpire": {
                    "description": "",
                    "type": "string"
                },
                "idCheckExpireDays": {
                    "description": "",
                    "type": "string"
                },
                "idCheckExpireDaysMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `idCheckExpireDays` property is editable.\n"
                },
                "idCheckExpireMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `idCheckExpire` property is editable.\n"
                },
                "idCheckExpireMinutes": {
                    "description": "",
                    "type": "string"
                },
                "idCheckExpireMinutesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `idCheckExpireMinutes` property is editable.\n"
                },
                "idCheckRequired": {
                    "description": "",
                    "type": "string"
                },
                "idCheckRequiredMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `idCheckRequired` property is editable.\n"
                },
                "identityVerification": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/accountIdentityVerificationWorkflow"
                    }
                },
                "identityVerificationMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `identityVerification` property is editable.\n"
                },
                "idfxKBAAuthenticationOverride": {
                    "description": "",
                    "type": "string"
                },
                "idfxKBAAuthenticationOverrideMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "idfxPhoneAuthenticationOverride": {
                    "description": "",
                    "type": "string"
                },
                "idfxPhoneAuthenticationOverrideMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "ignoreErrorIfAnchorTabNotFound": {
                    "description": "",
                    "type": "string"
                },
                "ignoreErrorIfAnchorTabNotFoundMetadataEnabled": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "inPersonIDCheckQuestion": {
                    "description": "",
                    "type": "string"
                },
                "inPersonIDCheckQuestionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `inPersonIDCheckQuestion` property is editable.\n"
                },
                "inPersonSigningEnabled": {
                    "description": "",
                    "type": "string"
                },
                "inPersonSigningEnabledMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `inPersonSigningEnabled` property is editable.\n"
                },
                "inSessionEnabled": {
                    "description": "",
                    "type": "string"
                },
                "inSessionEnabledMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `inSessionEnabled` property is editable.\n"
                },
                "inSessionSuppressEmails": {
                    "description": "",
                    "type": "string"
                },
                "inSessionSuppressEmailsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `inSessionSuppressEmails` property is editable.\n"
                },
                "isConnectDocumentFieldsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "isvOemEmbed": {
                    "description": "",
                    "type": "string"
                },
                "isvOemEmbedMetaData": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "linkedExternalPrimaryAccounts": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/linkedExternalPrimaryAccount"
                    }
                },
                "maximumSigningGroups": {
                    "description": "",
                    "type": "string"
                },
                "maximumSigningGroupsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `maximumSigningGroups` property is editable.\n"
                },
                "maximumUsersPerSigningGroup": {
                    "description": "",
                    "type": "string"
                },
                "maximumUsersPerSigningGroupMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `maximumUsersPerSigningGroup` property is editable.\n"
                },
                "maxNumberOfCustomStamps": {
                    "description": "",
                    "type": "string"
                },
                "mergeMixedModeResults": {
                    "description": "",
                    "type": "string"
                },
                "mergeMixedModeResultsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "mobileSessionTimeout": {
                    "description": "",
                    "type": "string"
                },
                "mobileSessionTimeoutMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `mobileSessionTimeout` property is editable.\n"
                },
                "numberOfActiveCustomStamps": {
                    "description": "",
                    "type": "string"
                },
                "optInMobileSigningV02": {
                    "description": "",
                    "type": "string"
                },
                "optInMobileSigningV02Metadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `optInMobileSigningV02` property is editable.\n"
                },
                "optInUniversalSignatures": {
                    "description": "",
                    "type": "string"
                },
                "optOutAutoNavTextAndTabColorUpdates": {
                    "description": "",
                    "type": "string"
                },
                "optOutAutoNavTextAndTabColorUpdatesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `optOutAutoNavTextAndTabColorUpdates` property is editable.\n"
                },
                "optOutNewPlatformSeal": {
                    "description": "",
                    "type": "string"
                },
                "optOutNewPlatformSealPlatformMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `optOutNewPlatformSealPlatform` property is editable.\n"
                },
                "pdfMaxChunkedUploadPartSize": {
                    "description": "",
                    "type": "string"
                },
                "pdfMaxChunkedUploadPartSizeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "pdfMaxChunkedUploadTotalSize": {
                    "description": "",
                    "type": "string"
                },
                "pdfMaxChunkedUploadTotalSizeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "pdfMaxIndividualUploadSize": {
                    "description": "",
                    "type": "string"
                },
                "pdfMaxIndividualUploadSizeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "phoneAuthRecipientMayProvidePhoneNumber": {
                    "description": "",
                    "type": "string"
                },
                "phoneAuthRecipientMayProvidePhoneNumberMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `phoneAuthRecipientMayProvidePhoneNumber` property is editable.\n"
                },
                "pkiSignDownloadedPDFDocs": {
                    "description": "",
                    "type": "string"
                },
                "pkiSignDownloadedPDFDocsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `pkiSignDownloadedPDFDocs` property is editable.\n"
                },
                "readOnlyMode": {
                    "description": "",
                    "type": "string"
                },
                "readOnlyModeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "recipientsCanSignOffline": {
                    "description": "",
                    "type": "string"
                },
                "recipientsCanSignOfflineMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `recipientsCanSignOffline` property is editable.\n"
                },
                "recipientSigningAutoNavigationControl": {
                    "description": "",
                    "type": "string"
                },
                "recipientSigningAutoNavigationControlMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `recipientSigningAutoNavigationControl` property is editable.\n"
                },
                "require21CFRpt11Compliance": {
                    "description": "",
                    "type": "string"
                },
                "require21CFRpt11ComplianceMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `require21CFRpt11Compliance` property is editable.\n"
                },
                "requireDeclineReason": {
                    "description": "",
                    "type": "string"
                },
                "requireDeclineReasonMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `requireDeclineReason` property is editable.\n"
                },
                "requireExternalUserManagement": {
                    "description": "",
                    "type": "string"
                },
                "requireExternalUserManagementMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `requireExternalUserManagement` property is editable.\n"
                },
                "requireSignerCertificateType": {
                    "description": "",
                    "type": "string"
                },
                "requireSignerCertificateTypeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `requireSignerCertificateType` property is editable.\n"
                },
                "rsaVeridAccountName": {
                    "description": "",
                    "type": "string"
                },
                "rsaVeridPassword": {
                    "description": "",
                    "type": "string"
                },
                "rsaVeridRuleset": {
                    "description": "",
                    "type": "string"
                },
                "rsaVeridUserId": {
                    "description": "",
                    "type": "string"
                },
                "sbsTransactionLevel": {
                    "description": "",
                    "type": "string"
                },
                "selfSignedRecipientEmailDocument": {
                    "description": "",
                    "type": "string"
                },
                "selfSignedRecipientEmailDocumentMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `selfSignedRecipientEmailDocument` property is editable.\n"
                },
                "selfSignedRecipientEmailDocumentUserOverride": {
                    "description": "",
                    "type": "string"
                },
                "selfSignedRecipientEmailDocumentUserOverrideMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `selfSignedRecipientEmailDocumentUserOverride` property is editable.\n"
                },
                "senderCanSignInEachLocation": {
                    "description": "",
                    "type": "string"
                },
                "senderCanSignInEachLocationMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `senderCanSignInEachLocation` property is editable.\n"
                },
                "senderMustAuthenticateSigning": {
                    "description": "",
                    "type": "string"
                },
                "senderMustAuthenticateSigningMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `senderMustAuthenticateSigning` property is editable.\n"
                },
                "sendingTagsFontColor": {
                    "description": "",
                    "type": "string"
                },
                "sendingTagsFontColorMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `sendingTagsFontColor` property is editable.\n"
                },
                "sendingTagsFontName": {
                    "description": "",
                    "type": "string"
                },
                "sendingTagsFontNameMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `sendingTagsFontName` property is editable.\n"
                },
                "sendingTagsFontSize": {
                    "description": "",
                    "type": "string"
                },
                "sendingTagsFontSizeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `sendingTagsFontSize` property is editable.\n"
                },
                "sendLockoutRecipientNotification": {
                    "description": "",
                    "type": "string"
                },
                "sendLockoutRecipientNotificationMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "sendToCertifiedDeliveryEnabled": {
                    "description": "",
                    "type": "string"
                },
                "sendToCertifiedDeliveryEnabledMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `sendToCertifiedDeliveryEnabled` property is editable.\n"
                },
                "sessionTimeout": {
                    "description": "",
                    "type": "string"
                },
                "sessionTimeoutMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `sessionTimeout` property is editable.\n"
                },
                "setRecipEmailLang": {
                    "description": "",
                    "type": "string"
                },
                "setRecipEmailLangMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `setRecipEmailLang` property is editable.\n"
                },
                "setRecipSignLang": {
                    "description": "",
                    "type": "string"
                },
                "setRecipSignLangMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `setRecipSignLang` property is editable.\n"
                },
                "sharedTemplateFolders": {
                    "description": "",
                    "type": "string"
                },
                "sharedTemplateFoldersMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `sharedTemplateFolders` property is editable.\n"
                },
                "showCompleteDialogInEmbeddedSession": {
                    "description": "",
                    "type": "string"
                },
                "showCompleteDialogInEmbeddedSessionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `showCompleteDialogInEmbeddedSession` property is editable.\n"
                },
                "showConditionalRoutingOnSend": {
                    "description": "",
                    "type": "string"
                },
                "showConditionalRoutingOnSendMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "showInitialConditionalFields": {
                    "description": "",
                    "type": "string"
                },
                "showInitialConditionalFieldsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `showInitialConditionalFields` property is editable.\n"
                },
                "showLocalizedWatermarks": {
                    "description": "",
                    "type": "string"
                },
                "showLocalizedWatermarksMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `showLocalizedWatermarks` property is editable.\n"
                },
                "showMaskedFieldsWhenDownloadingDocumentAsSender": {
                    "description": "",
                    "type": "string"
                },
                "showMaskedFieldsWhenDownloadingDocumentAsSenderMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "showTutorials": {
                    "description": "",
                    "type": "string"
                },
                "showTutorialsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `showTutorials` property is editable.\n"
                },
                "signatureProviders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signatureProvidersMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signatureProviders` property is editable.\n"
                },
                "signDateFormat": {
                    "description": "",
                    "type": "string"
                },
                "signDateFormatMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signDateFormat` property is editable.\n"
                },
                "signDateTimeAccountLanguageOverride": {
                    "description": "",
                    "type": "string"
                },
                "signDateTimeAccountLanguageOverrideMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "signDateTimeAccountTimezoneOverride": {
                    "description": "",
                    "type": "string"
                },
                "signDateTimeAccountTimezoneOverrideMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "signerAttachCertificateToEnvelopePDF": {
                    "description": "",
                    "type": "string"
                },
                "signerAttachCertificateToEnvelopePDFMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signerAttachCertificateToEnvelopePDF` property is editable.\n"
                },
                "signerAttachConcat": {
                    "description": "",
                    "type": "string"
                },
                "signerAttachConcatMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signerAttachConcat` property is editable.\n"
                },
                "signerCanCreateAccount": {
                    "description": "",
                    "type": "string"
                },
                "signerCanCreateAccountMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signerCanCreateAccount` property is editable.\n"
                },
                "signerCanSignOnMobile": {
                    "description": "",
                    "type": "string"
                },
                "signerCanSignOnMobileMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signerCanSignOnMobile` property is editable.\n"
                },
                "signerInSessionUseEnvelopeCompleteEmail": {
                    "description": "",
                    "type": "string"
                },
                "signerInSessionUseEnvelopeCompleteEmailMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signerInSessionUseEnvelopeCompleteEmail` property is editable.\n"
                },
                "signerLoginRequirements": {
                    "description": "",
                    "type": "string"
                },
                "signerLoginRequirementsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signerLoginRequirements` property is editable.\n"
                },
                "signerMustHaveAccount": {
                    "description": "",
                    "type": "string"
                },
                "signerMustHaveAccountMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signerMustHaveAccount` property is editable.\n"
                },
                "signerMustLoginToSign": {
                    "description": "",
                    "type": "string"
                },
                "signerMustLoginToSignMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signerMustLoginToSign` property is editable.\n"
                },
                "signerShowSecureFieldInitialValues": {
                    "description": "",
                    "type": "string"
                },
                "signerShowSecureFieldInitialValuesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signerShowSecureFieldInitialValues` property is editable.\n"
                },
                "signingSessionTimeout": {
                    "description": "",
                    "type": "string"
                },
                "signingSessionTimeoutMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signingSessionTimeout` property is editable.\n"
                },
                "signingUiVersion": {
                    "description": "",
                    "type": "string"
                },
                "signingUiVersionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "signTimeFormat": {
                    "description": "",
                    "type": "string"
                },
                "signTimeFormatMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signTimeFormat` property is editable.\n"
                },
                "signTimeShowAmPm": {
                    "description": "",
                    "type": "string"
                },
                "signTimeShowAmPmMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signTimeShowAmPm` property is editable.\n"
                },
                "simplifiedSendingEnabled": {
                    "description": "",
                    "type": "string"
                },
                "simplifiedSendingEnabledMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `simplifiedSendingEnabled` property is editable.\n"
                },
                "singleSignOnEnabled": {
                    "description": "",
                    "type": "string"
                },
                "singleSignOnEnabledMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `singleSignOnEnabled` property is editable.\n"
                },
                "skipAuthCompletedEnvelopes": {
                    "description": "",
                    "type": "string"
                },
                "skipAuthCompletedEnvelopesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `skipAuthCompletedEnvelopes` property is editable.\n"
                },
                "socialIdRecipAuth": {
                    "description": "",
                    "type": "string"
                },
                "socialIdRecipAuthMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `socialIdRecipAuth` property is editable.\n"
                },
                "specifyDocumentVisibility": {
                    "description": "",
                    "type": "string"
                },
                "specifyDocumentVisibilityMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `specifyDocumentVisibility` property is editable.\n"
                },
                "startInAdvancedCorrect": {
                    "description": "",
                    "type": "string"
                },
                "startInAdvancedCorrectMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `startInAdvancedCorrect` property is editable.\n"
                },
                "supplementalDocumentsMustAccept": {
                    "description": "",
                    "type": "string"
                },
                "supplementalDocumentsMustAcceptMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `supplementalDocumentsMustAccept` property is editable.\n"
                },
                "supplementalDocumentsMustRead": {
                    "description": "",
                    "type": "string"
                },
                "supplementalDocumentsMustReadMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `supplementalDocumentsMustRead` property is editable.\n"
                },
                "supplementalDocumentsMustView": {
                    "description": "",
                    "type": "string"
                },
                "supplementalDocumentsMustViewMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `supplementalDocumentsMustView` property is editable.\n"
                },
                "suppressCertificateEnforcement": {
                    "description": "",
                    "type": "string"
                },
                "suppressCertificateEnforcementMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `suppressCertificateEnforcement` property is editable.\n"
                },
                "tabAccountSettings": {
                    "$ref": "#/definitions/tabAccountSettings",
                    "description": "Account-wide tab settings."
                },
                "timezoneOffsetAPI": {
                    "description": "",
                    "type": "string"
                },
                "timezoneOffsetAPIMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `timezoneOffsetAPI` property is editable.\n"
                },
                "timezoneOffsetUI": {
                    "description": "",
                    "type": "string"
                },
                "timezoneOffsetUIMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `timezoneOffsetUI` property is editable.\n"
                },
                "universalSignatureOptIn": {
                    "description": "",
                    "type": "string"
                },
                "useAccountLevelEmail": {
                    "description": "",
                    "type": "string"
                },
                "useAccountLevelEmailMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `useAccountLevelEmail` property is editable.\n"
                },
                "useConsumerDisclosure": {
                    "description": "",
                    "type": "string"
                },
                "useConsumerDisclosureMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `useConsumerDisclosure` property is editable.\n"
                },
                "useConsumerDisclosureWithinAccount": {
                    "description": "",
                    "type": "string"
                },
                "useConsumerDisclosureWithinAccountMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `useConsumerDisclosureWithinAccount` property is editable.\n"
                },
                "useDerivedKeys": {
                    "description": "",
                    "type": "string"
                },
                "useDerivedKeysMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `useDerivedKeys` property is editable.\n"
                },
                "useDocuSignExpressSignerCertificate": {
                    "description": "",
                    "type": "string"
                },
                "useDocuSignExpressSignerCertificateMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `useDocuSignExpressSignerCertificate` property is editable.\n"
                },
                "useEnvelopeSearchMixedMode": {
                    "description": "",
                    "type": "string"
                },
                "useEnvelopeSearchMixedModeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "useMultiAppGroupsData": {
                    "description": "",
                    "type": "string"
                },
                "useMultiAppGroupsDataMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "useNewBlobForPdf": {
                    "description": "",
                    "type": "string"
                },
                "useNewBlobForPdfMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `useNewBlobForPdf` property is editable.\n"
                },
                "useNewEnvelopeSearch": {
                    "description": "",
                    "type": "string"
                },
                "useNewEnvelopeSearchMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "useNewEnvelopeSearchOnlyWhenSearchingAfterDate": {
                    "description": "",
                    "type": "string"
                },
                "useNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "useNewEnvelopeSearchOnlyWithSearchTerm": {
                    "description": "",
                    "type": "string"
                },
                "useNewEnvelopeSearchOnlyWithSearchTermMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "useSAFESignerCertificates": {
                    "description": "",
                    "type": "string"
                },
                "useSAFESignerCertificatesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `useSAFESignerCertificates` property is editable.\n"
                },
                "usesAPI": {
                    "description": "",
                    "type": "string"
                },
                "usesAPIMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `usesAPI` property is editable.\n"
                },
                "useSignatureProviderPlatform": {
                    "description": "",
                    "type": "string"
                },
                "useSignatureProviderPlatformMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `useSignatureProviderPlatform` property is editable.\n"
                },
                "useSmartContractsV1": {
                    "description": "",
                    "type": "string"
                },
                "validationsAllowed": {
                    "description": "",
                    "type": "string"
                },
                "validationsAllowedMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `validationsAllowed` property is editable.\n"
                },
                "validationsBrand": {
                    "description": "",
                    "type": "string"
                },
                "validationsBrandMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `validationsBrand` property is editable.\n"
                },
                "validationsCadence": {
                    "description": "",
                    "type": "string"
                },
                "validationsCadenceMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `validationsCadence` property is editable.\n"
                },
                "validationsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "validationsEnabledMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `validationsEnabled` property is editable.\n"
                },
                "validationsReport": {
                    "description": "",
                    "type": "string"
                },
                "validationsReportMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `validationsReport` property is editable.\n"
                },
                "waterMarkEnabled": {
                    "description": "",
                    "type": "string"
                },
                "waterMarkEnabledMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `waterMarkEnabled` property is editable.\n"
                },
                "writeReminderToEnvelopeHistory": {
                    "description": "",
                    "type": "string"
                },
                "writeReminderToEnvelopeHistoryMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `writeReminderToEnvelopeHistory` property is editable.\n"
                },
                "wurflMinAllowableScreenSize": {
                    "description": "",
                    "type": "string"
                },
                "wurflMinAllowableScreenSizeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `wurflMinAllowableScreenSize` property is editable.\n"
                }
            }
        },
        "accountSharedAccess": {
            "description": "Contains shared access information.",
            "type": "object",
            "properties": {
                "accountId": {
                    "description": "The account ID associated with the envelope.",
                    "type": "string"
                },
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "sharedAccess": {
                    "description": "A complex type containing the shared access information to an envelope for the users specified in the request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/memberSharedItems"
                    }
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            }
        },
        "accountSignature": {
            "type": "object",
            "properties": {
                "adoptedDateTime": {
                    "description": "",
                    "type": "string"
                },
                "createdDateTime": {
                    "description": "Indicates the date and time the item was created.",
                    "type": "string"
                },
                "customField": {
                    "description": "",
                    "type": "string"
                },
                "dateStampProperties": {
                    "$ref": "#/definitions/dateStampProperties",
                    "description": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle."
                },
                "disallowUserResizeStamp": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "externalID": {
                    "description": "",
                    "type": "string"
                },
                "imageBase64": {
                    "description": "",
                    "type": "string"
                },
                "imageType": {
                    "description": "",
                    "type": "string"
                },
                "initials150ImageId": {
                    "description": "",
                    "type": "string"
                },
                "initialsImageUri": {
                    "description": "Contains the URI for an endpoint that you can use to retrieve the initials image.",
                    "type": "string"
                },
                "isDefault": {
                    "description": "",
                    "type": "string"
                },
                "lastModifiedDateTime": {
                    "description": "The date and time the item was last modified.",
                    "type": "string"
                },
                "nrdsId": {
                    "description": "",
                    "type": "string"
                },
                "nrdsLastName": {
                    "description": "",
                    "type": "string"
                },
                "nrdsStatus": {
                    "description": "",
                    "type": "string"
                },
                "phoneticName": {
                    "description": "",
                    "type": "string"
                },
                "signature150ImageId": {
                    "description": "",
                    "type": "string"
                },
                "signatureFont": {
                    "description": "",
                    "type": "string"
                },
                "signatureGroups": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signatureGroup"
                    }
                },
                "signatureId": {
                    "description": "Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as \"&\", \"<\", \">\") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.",
                    "type": "string"
                },
                "signatureImageUri": {
                    "description": "Contains the URI for an endpoint that you can use to retrieve the signature image.",
                    "type": "string"
                },
                "signatureInitials": {
                    "description": "",
                    "type": "string"
                },
                "signatureName": {
                    "description": "Specifies the user signature name.",
                    "type": "string"
                },
                "signatureRights": {
                    "description": "",
                    "type": "string"
                },
                "signatureType": {
                    "description": "",
                    "type": "string"
                },
                "signatureUsers": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signatureUser"
                    }
                },
                "stampFormat": {
                    "description": "",
                    "type": "string"
                },
                "stampImageUri": {
                    "description": "",
                    "type": "string"
                },
                "stampSizeMM": {
                    "description": "",
                    "type": "string"
                },
                "stampType": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                }
            }
        },
        "accountSignatureDefinition": {
            "type": "object",
            "properties": {
                "dateStampProperties": {
                    "$ref": "#/definitions/dateStampProperties",
                    "description": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle."
                },
                "disallowUserResizeStamp": {
                    "description": "",
                    "type": "string"
                },
                "externalID": {
                    "description": "",
                    "type": "string"
                },
                "imageType": {
                    "description": "",
                    "type": "string"
                },
                "isDefault": {
                    "description": "",
                    "type": "string"
                },
                "nrdsId": {
                    "description": "",
                    "type": "string"
                },
                "nrdsLastName": {
                    "description": "",
                    "type": "string"
                },
                "phoneticName": {
                    "description": "",
                    "type": "string"
                },
                "signatureFont": {
                    "description": "",
                    "type": "string"
                },
                "signatureGroups": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signatureGroupDef"
                    }
                },
                "signatureId": {
                    "description": "Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as \"&\", \"<\", \">\") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.",
                    "type": "string"
                },
                "signatureInitials": {
                    "description": "",
                    "type": "string"
                },
                "signatureName": {
                    "description": "Specifies the user signature name.",
                    "type": "string"
                },
                "signatureType": {
                    "description": "",
                    "type": "string"
                },
                "signatureUsers": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signatureUserDef"
                    }
                },
                "stampFormat": {
                    "description": "",
                    "type": "string"
                },
                "stampSizeMM": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "accountSignatureProvider": {
            "type": "object",
            "properties": {
                "isRequired": {
                    "description": "",
                    "type": "string"
                },
                "priority": {
                    "description": "",
                    "type": "string"
                },
                "signatureProviderDisplayName": {
                    "description": "",
                    "type": "string"
                },
                "signatureProviderId": {
                    "description": "",
                    "type": "string"
                },
                "signatureProviderName": {
                    "description": "",
                    "type": "string"
                },
                "signatureProviderOptionsMetadata": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/accountSignatureProviderOption"
                    }
                },
                "signatureProviderRequiredOptions": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signatureProviderRequiredOption"
                    }
                }
            },
            "description": "Contains information abotu the signature provider associated with the Identity Verification workflow. \nIf empty, then this specific workflow is not intended for signers.\n"
        },
        "accountSignatureProviderOption": {
            "type": "object",
            "properties": {
                "signatureProviderOptionDisplayName": {
                    "description": "",
                    "type": "string"
                },
                "signatureProviderOptionId": {
                    "description": "",
                    "type": "string"
                },
                "signatureProviderOptionName": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Reserved for DocuSign."
        },
        "accountSignatureProviders": {
            "type": "object",
            "properties": {
                "signatureProviders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/accountSignatureProvider"
                    }
                }
            }
        },
        "accountSignaturesInformation": {
            "type": "object",
            "properties": {
                "accountSignatures": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/accountSignature"
                    }
                }
            }
        },
        "accountUISettings": {
            "type": "object",
            "properties": {
                "adminMessage": {
                    "$ref": "#/definitions/adminMessage",
                    "description": ""
                },
                "allowUsersToEditSharedAccess": {
                    "description": "",
                    "type": "string"
                },
                "allowUsersToEditSharedAccessMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "askAnAdmin": {
                    "$ref": "#/definitions/askAnAdmin",
                    "description": ""
                },
                "clickwrapSchemaVersion": {
                    "description": "",
                    "type": "string"
                },
                "clickwrapSchemaVersionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableAdminMessage": {
                    "description": "",
                    "type": "string"
                },
                "enableAdminMessageMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableEasySignCanUseMultiTemplateApply": {
                    "description": "",
                    "type": "string"
                },
                "enableEasySignCanUseMultiTemplateApplyMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableEasySignTemplateUpload": {
                    "description": "",
                    "type": "string"
                },
                "enableEasySignTemplateUploadMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableEnvelopeCopyWithData": {
                    "description": "",
                    "type": "string"
                },
                "enableEnvelopeCopyWithDataMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableEnvelopeTypes": {
                    "description": "",
                    "type": "string"
                },
                "enableEnvelopeTypesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableLegacySendflowLink": {
                    "description": "",
                    "type": "string"
                },
                "enableLegacySendflowLinkMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "hasExternalLinkedAccounts": {
                    "description": "",
                    "type": "string"
                },
                "hasExternalLinkedAccountsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "hideSendAnEnvelope": {
                    "description": "",
                    "type": "string"
                },
                "hideSendAnEnvelopeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "hideUseATemplate": {
                    "description": "",
                    "type": "string"
                },
                "hideUseATemplateInPrepare": {
                    "description": "",
                    "type": "string"
                },
                "hideUseATemplateInPrepareMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "hideUseATemplateMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "orderBasedRecipientIdGeneration": {
                    "description": "",
                    "type": "string"
                },
                "orderBasedRecipientIdGenerationMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "removeEnvelopeForwarding": {
                    "description": "",
                    "type": "string"
                },
                "removeEnvelopeForwardingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "shouldRedactAccessCode": {
                    "description": "",
                    "type": "string"
                },
                "shouldRedactAccessCodeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "uploadNewImageToSignOrInitial": {
                    "description": "",
                    "type": "string"
                },
                "uploadNewImageToSignOrInitialMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                }
            },
            "description": "An object that defines the options that are available to non-administrators in the UI."
        },
        "addOn": {
            "description": "Contains information about add ons.",
            "type": "object",
            "properties": {
                "active": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "addOnId": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "Reserved:",
                    "type": "string"
                }
            }
        },
        "addressInformation": {
            "description": "Contains address information.",
            "type": "object",
            "properties": {
                "address1": {
                    "description": "First Line of the address.\nMaximum length: 100 characters.",
                    "type": "string"
                },
                "address2": {
                    "description": "Second Line of the address.\nMaximum length: 100 characters.",
                    "type": "string"
                },
                "city": {
                    "description": "The city associated with the address.",
                    "type": "string"
                },
                "country": {
                    "description": "Specifies the country associated with the address.",
                    "type": "string"
                },
                "fax": {
                    "description": "A Fax number associated with the address if one is available.",
                    "type": "string"
                },
                "phone": {
                    "description": "A phone number associated with the address.",
                    "type": "string"
                },
                "postalCode": {
                    "description": "",
                    "type": "string"
                },
                "stateOrProvince": {
                    "description": "",
                    "type": "string"
                },
                "zipPlus4": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "addressInformationInput": {
            "description": "Contains address input information.",
            "type": "object",
            "properties": {
                "addressInformation": {
                    "$ref": "#/definitions/addressInformation",
                    "description": "A complex type that contains the following information for the new account: `address1`, `address2`, `city`, `country`, `fax`, `phone`, `postalCode` and `stateOrProvince`.\n\nThe maximum characters for the strings are:\n* `address1`, `address2`, `city`, `country` and `stateOrProvince`: 100 characters\n* `postalCode`, `phone`, and `fax`: 20 characters\n\n**Note:** If country is US (United States), `stateOrProvince` codes are validated. Otherwise, `stateOrProvince` is treated as a non-validated string used to specify a state, province, or region."
                },
                "displayLevelCode": {
                    "description": "Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay",
                    "type": "string"
                },
                "receiveInResponse": {
                    "description": "When set to **true**, the information needs to be returned in the response.",
                    "type": "string"
                }
            }
        },
        "adminMessage": {
            "type": "object",
            "properties": {
                "baseMessage": {
                    "description": "",
                    "type": "string"
                },
                "moreInformation": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "agent": {
            "description": "Contains information about agent recipients.",
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "accessCodeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `accessCode` property is editable. This property is read-only."
                },
                "addAccessCodeToEmail": {
                    "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
                    "type": "string"
                },
                "additionalNotifications": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAdditionalNotification"
                    }
                },
                "allowSystemOverrideForLockedRecipient": {
                    "description": "",
                    "type": "string"
                },
                "autoRespondedReason": {
                    "description": "",
                    "type": "string"
                },
                "bulkSendV2Recipient": {
                    "description": "",
                    "type": "string"
                },
                "clientUserId": {
                    "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "completedCount": {
                    "description": "",
                    "type": "string"
                },
                "consentDetailsList": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/consentDetails"
                    }
                },
                "customFields": {
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "declinedDateTime": {
                    "description": "The date and time the recipient declined the document.",
                    "type": "string"
                },
                "declinedReason": {
                    "description": "The reason the recipient declined the document.",
                    "type": "string"
                },
                "deliveredDateTime": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethod": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethodMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "designatorId": {
                    "description": "",
                    "type": "string"
                },
                "designatorIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "documentVisibility": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentVisibility"
                    }
                },
                "email": {
                    "description": "Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "emailMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `email` property is editable. This property is read-only."
                },
                "emailNotification": {
                    "$ref": "#/definitions/recipientEmailNotification",
                    "description": "A complex type that contains information sets the language of the recipient's email information. \n\n**IMPORTANT**: If you enable email notification for one recipient, you must enable email notification for all recipients as it overrides the Envelope Subject and `EmailBlurb` property settings. "
                },
                "emailRecipientPostSigningURL": {
                    "description": "",
                    "type": "string"
                },
                "embeddedRecipientStartURL": {
                    "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "excludedDocuments": {
                    "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "faxNumber": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "faxNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "firstName": {
                    "description": "The user's first name. \nMaximum Length: 50 characters.",
                    "type": "string"
                },
                "firstNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `firstName` property is editable. This property is read-only."
                },
                "fullName": {
                    "description": "",
                    "type": "string"
                },
                "fullNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "idCheckConfigurationName": {
                    "description": "Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.",
                    "type": "string"
                },
                "idCheckConfigurationNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `idCheckConfigurationName` property is editable. This property is read-only."
                },
                "idCheckInformationInput": {
                    "$ref": "#/definitions/idCheckInformationInput",
                    "description": "An object that contains input information related to a recipient ID check."
                },
                "identityVerification": {
                    "$ref": "#/definitions/recipientIdentityVerification",
                    "description": "Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address)."
                },
                "inheritEmailNotificationConfiguration": {
                    "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                    "type": "string"
                },
                "lastName": {
                    "description": "",
                    "type": "string"
                },
                "lastNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `lastName` property is editable. This property is read-only."
                },
                "lockedRecipientPhoneAuthEditable": {
                    "description": "",
                    "type": "string"
                },
                "lockedRecipientSmsEditable": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "note": {
                    "description": "Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.",
                    "type": "string"
                },
                "noteMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `note` property is editable. This property is read-only."
                },
                "phoneAuthentication": {
                    "$ref": "#/definitions/recipientPhoneAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:\n\n* `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.\n* `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.\n* `recordVoicePrint`: Reserved for DocuSign.\n* `validateRecipProvidedNumber`: Reserved for DocuSign.\n\n"
                },
                "phoneNumber": {
                    "$ref": "#/definitions/recipientPhoneNumber",
                    "description": "Describes the recipient phone number."
                },
                "recipientAttachments": {
                    "description": "Reserved:",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAttachment"
                    }
                },
                "recipientAuthenticationStatus": {
                    "$ref": "#/definitions/authenticationStatus",
                    "description": "Information about the recipient's authentication status. This property is read-only."
                },
                "recipientFeatureMetadata": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featureAvailableMetadata"
                    }
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientType": {
                    "description": "",
                    "type": "string"
                },
                "recipientTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientType` property is editable. This property is read-only."
                },
                "requireIdLookup": {
                    "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                    "type": "string"
                },
                "requireIdLookupMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireIdLookup` property is editable. This property is read-only."
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "routingOrder": {
                    "description": "Specifies the routing order of the recipient in the envelope. ",
                    "type": "string"
                },
                "routingOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `routingOrder` property is editable. This property is read-only."
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "signedDateTime": {
                    "description": "Reserved: For DocuSign use only. ",
                    "type": "string"
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                },
                "signingGroupIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signingGroupId` property is editable. This property is read-only."
                },
                "signingGroupName": {
                    "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
                    "type": "string"
                },
                "signingGroupUsers": {
                    "description": "A complex type that contains information about users in the signing group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                },
                "smsAuthentication": {
                    "$ref": "#/definitions/recipientSMSAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `SMS Auth $`, you use this complex type to provide the recipient authentication method details. It contains the element `senderProvidedNumbers`, which is an array of phone numbers that the recipient can use for SMS text authentication. \n\n"
                },
                "socialAuthentications": {
                    "description": " Lists the social ID type that can be used for recipient authentication.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/socialAuthentication"
                    }
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusCode": {
                    "description": "",
                    "type": "string"
                },
                "suppressEmails": {
                    "description": "",
                    "type": "string"
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "totalTabCount": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "apiRequestLog": {
            "description": "Contains API request log information.",
            "type": "object",
            "properties": {
                "createdDateTime": {
                    "description": "Indicates the date and time the item was created.",
                    "type": "string"
                },
                "description": {
                    "description": "",
                    "type": "string"
                },
                "requestLogId": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                }
            }
        },
        "apiRequestLogsResult": {
            "description": "Contains information about mutiple API request logs.",
            "type": "object",
            "properties": {
                "apiRequestLogs": {
                    "description": "Reserved: TBD",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apiRequestLog"
                    }
                }
            }
        },
        "approve": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "buttonText": {
                    "description": " Specifies the approval text displayed in the tab. ",
                    "type": "string"
                },
                "buttonTextMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `buttonText` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that allows the recipient to approve documents\nwithout placing a signature or initials on the\ndocument.\n"
        },
        "appStoreProduct": {
            "description": "Contains information about an APP store product.",
            "type": "object",
            "properties": {
                "marketPlace": {
                    "description": "",
                    "type": "string"
                },
                "productId": {
                    "description": "The Product ID from the AppStore.",
                    "type": "string"
                }
            }
        },
        "appStoreReceipt": {
            "description": "Contains information about an APP store receipt.",
            "type": "object",
            "properties": {
                "downgradeProductId": {
                    "description": "",
                    "type": "string"
                },
                "isDowngradeCancellation": {
                    "description": "",
                    "type": "string"
                },
                "productId": {
                    "description": "",
                    "type": "string"
                },
                "receiptData": {
                    "description": "Reserved: TBD",
                    "type": "string"
                }
            }
        },
        "askAnAdmin": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "",
                    "type": "string"
                },
                "message": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "phone": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "attachment": {
            "description": "Contains information about an attachment.",
            "type": "object",
            "properties": {
                "accessControl": {
                    "description": "",
                    "type": "string"
                },
                "attachmentId": {
                    "description": "",
                    "type": "string"
                },
                "attachmentType": {
                    "description": "Specifies the type of the attachment for the recipient.",
                    "type": "string"
                },
                "data": {
                    "description": "",
                    "type": "string"
                },
                "label": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "remoteUrl": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "authenticationMethod": {
            "description": "Contains information about the method used for authentication.",
            "type": "object",
            "properties": {
                "authenticationType": {
                    "description": "Indicates the type of authentication. Valid values are: PhoneAuth, STAN, ISCheck, OFAC, AccessCode, AgeVerify, or SSOAuth. ",
                    "type": "string"
                },
                "lastProvider": {
                    "description": "The last provider that authenticated the user. ",
                    "type": "string"
                },
                "lastTimestamp": {
                    "description": " The data and time the user last used the authentication method. ",
                    "type": "string"
                },
                "totalCount": {
                    "description": "The number of times the authentication method was used. ",
                    "type": "string"
                }
            }
        },
        "authenticationStatus": {
            "description": "Contains information about the authentication status.",
            "type": "object",
            "properties": {
                "accessCodeResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "The result of a user's attempt to authenticate by using an access code. It returns:\n\n- `Status`: `Pass` or `Fail`.\n- `dateTime`: The date and time that the event occurred.\n- `FailureDescription`: A string containing the details about a failed authentication.\n- `VendorFailureStatusCode`: A string containing the vendor's status code for a failed authentication. "
                },
                "ageVerifyResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "The result of an age verification check. It returns:\n\n- `Status`: `Pass` or `Fail`.\n- `dateTime`: The date and time that the event occurred.\n- `FailureDescription`: A string containing the details about a failed authentication.\n- `VendorFailureStatusCode`: A string containing the vendor's status code for a failed authentication. "
                },
                "anySocialIDResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "Deprecated."
                },
                "facebookResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "Deprecated."
                },
                "googleResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "Deprecated."
                },
                "identityVerificationResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "The result of an [Identity Verification][IDV] workflow.\n\n[IDV]: /docs/esign-rest-api/reference/accounts/identityverifications/"
                },
                "idLookupResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "The result of an ID lookup authentication check. It returns:\n\n- `Status`: `Pass` or `Fail`.\n- `dateTime`: The date and time that the event occurred.\n- `FailureDescription`: A string containing the details about a failed authentication.\n- `VendorFailureStatusCode`: A string containing the vendor's status code for a failed authentication. "
                },
                "idQuestionsResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "The result of the user's answers to ID challenge questions. It returns:\n\n- `Status`: `Pass` or `Fail`.\n- `dateTime`: The date and time that the event occurred.\n- `FailureDescription`: A string containing the details about a failed authentication.\n- `VendorFailureStatusCode`: A string containing the vendor's status code for a failed authentication. "
                },
                "linkedinResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "Deprecated."
                },
                "liveIDResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "Deprecated."
                },
                "ofacResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "The result of an Office of Foreign Asset Control (OFAC) check. It returns:\n\n- `Status`: `Pass` or `Fail`.\n- `dateTime`: The date and time that the event occurred.\n- `FailureDescription`: A string containing the details about a failed authentication.\n- `VendorFailureStatusCode`: A string containing the vendor's status code for a failed authentication. "
                },
                "openIDResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "Deprecated."
                },
                "phoneAuthResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "The result of the user's attempt to authenticate by using two-factor authentication (2FA) through phone messaging. It returns:\n\n- `Status`: `Pass` or `Fail`.\n- `dateTime`: The date and time that the event occurred.\n- `FailureDescription`: A string containing the details about a failed authentication.\n- `VendorFailureStatusCode`: A string containing the vendor's status code for a failed authentication. "
                },
                "salesforceResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "Success/failure result of authentication using sign-in with a Salesforce account. It returns:\n\n- `Status`: `Pass` or `Fail`.\n- `dateTime`: The date and time that the event occurred.\n- `FailureDescription`: A string containing the details about a failed authentication.\n- `VendorFailureStatusCode`: A string containing the vendor's status code for a failed authentication. "
                },
                "signatureProviderResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "The result of the user's attempt to authenticate by using a signature provider."
                },
                "smsAuthResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "The result of the user's attempt to authenticate by using two-factor authentication (2FA) through SMS messaging on a mobile phone."
                },
                "sTANPinResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "The result of a Student Authentication Network (STAN) authentication check. It returns:\n\n- `Status`: `Pass` or `Fail`.\n- `dateTime`: The date and time that the event occurred.\n- `FailureDescription`: A string containing the details about a failed authentication.\n- `VendorFailureStatusCode`: A string containing the vendor's status code for a failed authentication. "
                },
                "twitterResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "Deprecated."
                },
                "yahooResult": {
                    "$ref": "#/definitions/eventResult",
                    "description": "Deprecated."
                }
            }
        },
        "authorizationUser": {
            "type": "object",
            "properties": {
                "accountId": {
                    "description": "The account ID associated with the envelope.",
                    "type": "string"
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "bccEmailAddress": {
            "description": "Contains information about the BCC email address.",
            "type": "object",
            "properties": {
                "bccEmailAddressId": {
                    "description": "Only users with canManageAccount setting can use this option. An array of up to 5 email addresses the envelope is sent to as a BCC email. \n \nExample: If your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.",
                    "type": "string"
                },
                "email": {
                    "description": "Specifies the BCC email address. DocuSign verifies that the email format is correct, but does not verify that the email is active.Using this overrides the BCC for Email Archive information setting for this envelope.\n\nMaximum of length: 100 characters. ",
                    "type": "string"
                }
            }
        },
        "bccEmailArchive": {
            "type": "object",
            "properties": {
                "accountId": {
                    "description": "The account ID associated with the envelope.",
                    "type": "string"
                },
                "bccEmailArchiveId": {
                    "description": "",
                    "type": "string"
                },
                "created": {
                    "description": "",
                    "type": "string"
                },
                "createdBy": {
                    "$ref": "#/definitions/userInfo",
                    "description": "Details about the user who created the BCC email archive configuration."
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "emailNotificationId": {
                    "description": "",
                    "type": "string"
                },
                "modified": {
                    "description": "",
                    "type": "string"
                },
                "modifiedBy": {
                    "$ref": "#/definitions/userInfo",
                    "description": "Details about the user who last modified the BCC email archive configuration."
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "uri": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object contains information abut a BCC email archive configuration (a BCC email address used to archive DocuSign-generated emails)."
        },
        "bccEmailArchiveHistory": {
            "type": "object",
            "properties": {
                "accountId": {
                    "description": "The account ID associated with the envelope.",
                    "type": "string"
                },
                "action": {
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "modified": {
                    "description": "",
                    "type": "string"
                },
                "modifiedBy": {
                    "$ref": "#/definitions/userInfo",
                    "description": "Details about the user who last modified the BCC email archive configuration."
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                }
            },
            "description": "Contains details about the history of the BCC email archive configuration."
        },
        "bccEmailArchiveHistoryList": {
            "type": "object",
            "properties": {
                "bccEmailArchiveHistory": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bccEmailArchiveHistory"
                    }
                },
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            }
        },
        "bccEmailArchiveList": {
            "type": "object",
            "properties": {
                "bccEmailArchives": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bccEmailArchive"
                    }
                },
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            },
            "description": "Contains a list of BCC email archive configurations."
        },
        "billingCharge": {
            "description": "Contains information about a billing charge.",
            "type": "object",
            "properties": {
                "allowedQuantity": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "blocked": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "chargeName": {
                    "description": "Provides information on what services the charge item is for.\n\nThe following table provides a description of the different chargeName values available at this time.\n\n| chargeName | Description |\n| --- | --- |\n| id_check | IDÂ Check Charge |\n| in_person_signing | In Person Signing charge |\n| envelopes Included | Sent Envelopes for the account |\n| age_verify | Age verification check |\n| ofac | OFAC Check |\n| id_confirm | ID confirmation check |\n| student_authentication | STAN PIN authentication check |\n| wet_sign_fax | Pages for returning signed documents by fax |\n| attachment_fax | Pages for returning attachments by fax |\n| phone_authentication | Phone authentication charge |\n| powerforms | PowerForm envelopes sent |\n| signer_payments | Payment processing charge |\n| outbound_fax | Send by fax charge |\n| bulk_recipient_envelopes | Bulk Recipient Envelopes sent |\n| sms_authentications | SMS authentication charge |\n| saml_authentications | SAML authentication charge |\n| express_signer_certificate | DocuSign Express Certificate charge |\n| personal_signer_certificate | Personal Signer Certificate charge |\n| safe_certificate | SAFE BioPharma Signer Certificate charge |\n| seats | Included active seats charge |\n| open_trust_certificate | OpenTrust Signer Certificate charge |",
                    "type": "string"
                },
                "chargeType": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "chargeUnitOfMeasure": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "discounts": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/billingDiscount"
                    }
                },
                "firstEffectiveDate": {
                    "description": "",
                    "type": "string"
                },
                "includedQuantity": {
                    "description": "",
                    "type": "string"
                },
                "incrementalQuantity": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "lastEffectiveDate": {
                    "description": "",
                    "type": "string"
                },
                "prices": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/billingPrice"
                    }
                },
                "unitPrice": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "usedQuantity": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "billingChargeResponse": {
            "description": "Defines a billing charge response object.",
            "type": "object",
            "properties": {
                "billingChargeItems": {
                    "description": "Reserved: TBD",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/billingCharge"
                    }
                }
            }
        },
        "billingDiscount": {
            "type": "object",
            "properties": {
                "beginQuantity": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "discount": {
                    "description": "",
                    "type": "string"
                },
                "endQuantity": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "billingEntityInformationResponse": {
            "type": "object",
            "properties": {
                "billingProfile": {
                    "description": "",
                    "type": "string"
                },
                "entityName": {
                    "description": "",
                    "type": "string"
                },
                "externalEntityId": {
                    "description": "",
                    "type": "string"
                },
                "isExternallyBilled": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "billingInvoice": {
            "description": "Contains information about a billing invoice.",
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "balance": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "dueDate": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "invoiceId": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "invoiceItems": {
                    "description": "Reserved: TBD",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/billingInvoiceItem"
                    }
                },
                "invoiceNumber": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "invoiceUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve invoice information.",
                    "type": "string"
                },
                "nonTaxableAmount": {
                    "description": "",
                    "type": "string"
                },
                "pdfAvailable": {
                    "description": "",
                    "type": "string"
                },
                "taxableAmount": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "billingInvoiceItem": {
            "description": "Contains information about an item on a billing invoice.",
            "type": "object",
            "properties": {
                "chargeAmount": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "chargeName": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "invoiceItemId": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "quantity": {
                    "description": "",
                    "type": "string"
                },
                "taxAmount": {
                    "description": "",
                    "type": "string"
                },
                "taxExemptAmount": {
                    "description": "",
                    "type": "string"
                },
                "unitPrice": {
                    "description": "Reserved: TBD",
                    "type": "string"
                }
            }
        },
        "billingInvoicesResponse": {
            "description": "Defines a billing invoice response object.",
            "type": "object",
            "properties": {
                "billingInvoices": {
                    "description": "Reserved: TBD",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/billingInvoice"
                    }
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                }
            }
        },
        "billingInvoicesSummary": {
            "type": "object",
            "properties": {
                "accountBalance": {
                    "description": "",
                    "type": "string"
                },
                "billingInvoices": {
                    "description": "Reserved: TBD",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/billingInvoice"
                    }
                },
                "currencyCode": {
                    "description": "",
                    "type": "string"
                },
                "pastDueBalance": {
                    "description": "",
                    "type": "string"
                },
                "paymentAllowed": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "billingPayment": {
            "description": "Contains information on a billing plan.",
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "invoiceId": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "paymentId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "billingPaymentItem": {
            "description": "Defines a billing payment request object.",
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "description": {
                    "description": "",
                    "type": "string"
                },
                "paymentDate": {
                    "description": "",
                    "type": "string"
                },
                "paymentId": {
                    "description": "",
                    "type": "string"
                },
                "paymentNumber": {
                    "description": "When set to **true**, a PDF version of the invoice is available. \n\nTo get the PDF, make the call again and change \"Accept:\" in the header to \"Accept: application/pdf\".",
                    "type": "string"
                }
            }
        },
        "billingPaymentRequest": {
            "type": "object",
            "properties": {
                "paymentAmount": {
                    "description": "The payment amount for the past due invoices. This value must match the pastDueBalance value retrieved using Get Past Due Invoices.",
                    "type": "string"
                }
            }
        },
        "billingPaymentResponse": {
            "description": "Defines an billing payment response object.",
            "type": "object",
            "properties": {
                "billingPayments": {
                    "description": "Reserved: TBD",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/billingPayment"
                    }
                }
            }
        },
        "billingPaymentsResponse": {
            "description": "Defines a billing payments response object.",
            "type": "object",
            "properties": {
                "billingPayments": {
                    "description": "Reserved: TBD",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/billingPaymentItem"
                    }
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                }
            }
        },
        "billingPlan": {
            "description": "Contains information about a billing plan.",
            "type": "object",
            "properties": {
                "appStoreProducts": {
                    "description": "Reserved: TBD",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appStoreProduct"
                    }
                },
                "currencyPlanPrices": {
                    "description": "Contains the currencyCode and currencySymbol for the alternate currency values for envelopeFee, fixedFee, and seatFee that are configured for this plan feature set.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/currencyPlanPrice"
                    }
                },
                "enableSupport": {
                    "description": "When set to **true**, then customer support is provided as part of the account plan.",
                    "type": "string"
                },
                "includedSeats": {
                    "description": "The number of seats (users) included.",
                    "type": "string"
                },
                "otherDiscountPercent": {
                    "description": "",
                    "type": "string"
                },
                "paymentCycle": {
                    "description": " The payment cycle associated with the plan. The possible values are: Monthly or Annually. ",
                    "type": "string"
                },
                "paymentMethod": {
                    "description": "",
                    "type": "string"
                },
                "perSeatPrice": {
                    "description": "The per seat price for the plan.",
                    "type": "string"
                },
                "planClassification": {
                    "description": "Identifies the type of plan. Examples include Business, Corporate, Enterprise, Free.",
                    "type": "string"
                },
                "planFeatureSets": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featureSet"
                    }
                },
                "planId": {
                    "description": "",
                    "type": "string"
                },
                "planName": {
                    "description": "The name of the Billing Plan.",
                    "type": "string"
                },
                "seatDiscounts": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/seatDiscount"
                    }
                },
                "supportIncidentFee": {
                    "description": "The support incident fee charged for each support incident.",
                    "type": "string"
                },
                "supportPlanFee": {
                    "description": "The support plan fee charged for this plan.",
                    "type": "string"
                }
            }
        },
        "billingPlanInformation": {
            "type": "object",
            "properties": {
                "appStoreReceipt": {
                    "$ref": "#/definitions/appStoreReceipt",
                    "description": ""
                },
                "billingAddress": {
                    "$ref": "#/definitions/accountAddress",
                    "description": "The billing address for the account."
                },
                "creditCardInformation": {
                    "$ref": "#/definitions/creditCardInformation",
                    "description": "A complex type that has information about the credit card used to pay for this account."
                },
                "directDebitProcessorInformation": {
                    "$ref": "#/definitions/directDebitProcessorInformation",
                    "description": "Information about the bank that processes direct debits for the payment plan."
                },
                "downgradeReason": {
                    "description": "",
                    "type": "string"
                },
                "enablePreAuth": {
                    "description": "",
                    "type": "string"
                },
                "enableSupport": {
                    "description": "",
                    "type": "string"
                },
                "includedSeats": {
                    "description": "The number of seats (users) included.",
                    "type": "string"
                },
                "incrementalSeats": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "paymentMethod": {
                    "description": "",
                    "type": "string"
                },
                "paymentProcessor": {
                    "description": "",
                    "type": "string"
                },
                "paymentProcessorInformation": {
                    "$ref": "#/definitions/paymentProcessorInformation",
                    "description": "Information about the entity that processes payments for the billing plan."
                },
                "planInformation": {
                    "$ref": "#/definitions/planInformation",
                    "description": "An object used to identify the features and attributes of the account being created."
                },
                "processPayment": {
                    "description": "",
                    "type": "string"
                },
                "referralInformation": {
                    "$ref": "#/definitions/referralInformation",
                    "description": "A complex type that contains properties for entering referral and discount information."
                },
                "renewalStatus": {
                    "description": "",
                    "type": "string"
                },
                "saleDiscountAmount": {
                    "description": "",
                    "type": "string"
                },
                "saleDiscountFixedAmount": {
                    "description": "",
                    "type": "string"
                },
                "saleDiscountPercent": {
                    "description": "",
                    "type": "string"
                },
                "saleDiscountPeriods": {
                    "description": "",
                    "type": "string"
                },
                "saleDiscountSeatPriceOverride": {
                    "description": "",
                    "type": "string"
                },
                "taxExemptId": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object contains details about a billing plan."
        },
        "billingPlanPreview": {
            "description": "Contains information about a preview billing plan.",
            "type": "object",
            "properties": {
                "currencyCode": {
                    "description": "Specifies the ISO currency code for the account.",
                    "type": "string"
                },
                "invoice": {
                    "$ref": "#/definitions/billingInvoice",
                    "description": ""
                },
                "isProrated": {
                    "description": "",
                    "type": "string"
                },
                "subtotalAmount": {
                    "description": "",
                    "type": "string"
                },
                "taxAmount": {
                    "description": "",
                    "type": "string"
                },
                "totalAmount": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "billingPlanResponse": {
            "description": "Defines a billing plan response object.",
            "type": "object",
            "properties": {
                "billingPlan": {
                    "$ref": "#/definitions/billingPlan",
                    "description": "An object that contains details about the billing plan."
                },
                "successorPlans": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/billingPlan"
                    }
                }
            }
        },
        "billingPlansResponse": {
            "description": "Defines a billing plans response object.",
            "type": "object",
            "properties": {
                "billingPlans": {
                    "description": "Reserved: TBD",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/billingPlan"
                    }
                }
            }
        },
        "billingPlanUpdateResponse": {
            "description": "Defines a billing plan update response object.",
            "type": "object",
            "properties": {
                "accountPaymentMethod": {
                    "description": "",
                    "type": "string"
                },
                "billingPlanPreview": {
                    "$ref": "#/definitions/billingPlanPreview",
                    "description": ""
                },
                "currencyCode": {
                    "description": "Specifies the ISO currency code for the account.",
                    "type": "string"
                },
                "includedSeats": {
                    "description": "The number of seats (users) included.",
                    "type": "string"
                },
                "paymentCycle": {
                    "description": "",
                    "type": "string"
                },
                "paymentMethod": {
                    "description": "",
                    "type": "string"
                },
                "planId": {
                    "description": "",
                    "type": "string"
                },
                "planName": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "billingPrice": {
            "type": "object",
            "properties": {
                "beginQuantity": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "endQuantity": {
                    "description": "",
                    "type": "string"
                },
                "unitPrice": {
                    "description": "Reserved: TBD",
                    "type": "string"
                }
            }
        },
        "brand": {
            "type": "object",
            "properties": {
                "brandCompany": {
                    "description": "The name of the company associated with this brand.",
                    "type": "string"
                },
                "brandId": {
                    "description": "The ID used to identify a specific brand in API calls.",
                    "type": "string"
                },
                "brandLanguages": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "brandName": {
                    "description": "The name of the brand.",
                    "type": "string"
                },
                "colors": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nameValue"
                    }
                },
                "defaultBrandLanguage": {
                    "description": "",
                    "type": "string"
                },
                "emailContent": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/brandEmailContent"
                    }
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "isOrganizationBrand": {
                    "description": "",
                    "type": "string"
                },
                "isOverridingCompanyName": {
                    "description": "",
                    "type": "boolean"
                },
                "isSendingDefault": {
                    "description": "",
                    "type": "boolean"
                },
                "isSigningDefault": {
                    "description": "",
                    "type": "boolean"
                },
                "landingPages": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nameValue"
                    }
                },
                "links": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/brandLink"
                    }
                },
                "logos": {
                    "$ref": "#/definitions/brandLogos",
                    "description": "The URIs for retrieving the logos that are associated with the brand."
                },
                "organizationBrandLogo": {
                    "description": "",
                    "type": "string"
                },
                "resources": {
                    "$ref": "#/definitions/brandResourceUrls",
                    "description": "An object containing the URLs for the four DocuSign master resource files that the brand uses for sending, signing, email messages, and captive (embedded) signing. You can modify the default email messages and formats in these file to customize the user experience.\n\n**Note:** This object is returned only when the `resourceContentType` is `sending`, `signing`, `email`, or `signing_captive`."
                }
            },
            "description": "Information about a brand that is associated with an account. A brand applies custom styles and text to an envelope."
        },
        "brandEmailContent": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "",
                    "type": "string"
                },
                "emailContentType": {
                    "description": "",
                    "type": "string"
                },
                "emailToLink": {
                    "description": "",
                    "type": "string"
                },
                "linkText": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Deprecated."
        },
        "brandLink": {
            "type": "object",
            "properties": {
                "linkText": {
                    "description": "",
                    "type": "string"
                },
                "linkType": {
                    "description": "",
                    "type": "string"
                },
                "showLink": {
                    "description": "",
                    "type": "string"
                },
                "urlOrMailTo": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Information about a link that a brand uses."
        },
        "brandLogos": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "",
                    "type": "string"
                },
                "primary": {
                    "description": "",
                    "type": "string"
                },
                "secondary": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "The URIs for retrieving the logos that are associated with the brand.\n\nThese are read-only properties that provide a URI to logos in use.\nTo update a logo use\n[AccountBrands: updateLogo](/docs/esign-rest-api/reference/accounts/accountbrands/updatelogo/).\n"
        },
        "brandRequest": {
            "type": "object",
            "properties": {
                "brandId": {
                    "description": "The ID of the brand used in API calls",
                    "type": "string"
                }
            },
            "description": "This request object contains information about a specific brand."
        },
        "brandResources": {
            "type": "object",
            "properties": {
                "createdByUserInfo": {
                    "$ref": "#/definitions/userInfo",
                    "description": "The user ID of the user who created the brand resource."
                },
                "createdDate": {
                    "description": "",
                    "type": "string"
                },
                "dataNotSavedNotInMaster": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "modifiedByUserInfo": {
                    "$ref": "#/definitions/userInfo",
                    "description": "Information about the user who last modified the brand resource."
                },
                "modifiedDate": {
                    "description": "",
                    "type": "string"
                },
                "modifiedTemplates": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourcesContentType": {
                    "description": "",
                    "type": "string"
                },
                "resourcesContentUri": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Information about the resource files that the brand uses for the email, signing, sending, and captive (embedded) signing experiences."
        },
        "brandResourcesList": {
            "type": "object",
            "properties": {
                "resourcesContentTypes": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/brandResources"
                    }
                }
            }
        },
        "brandResourceUrls": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "",
                    "type": "string"
                },
                "sending": {
                    "description": "",
                    "type": "string"
                },
                "signing": {
                    "description": "",
                    "type": "string"
                },
                "signingCaptive": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Brands use resource files to style the following experiences: \n\n- Email\n- Sending\n- Signing\n- Captive (embedded) signing \n\nYou can modify these resource files to customize these experiences."
        },
        "brandsRequest": {
            "type": "object",
            "properties": {
                "brands": {
                    "description": "The list of brands.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/brandRequest"
                    }
                }
            },
            "description": "Details about one or more brands."
        },
        "brandsResponse": {
            "type": "object",
            "properties": {
                "brands": {
                    "description": "The list of brands.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/brand"
                    }
                },
                "recipientBrandIdDefault": {
                    "description": "The brand seen by envelope recipients when a brand is not explicitly set.",
                    "type": "string"
                },
                "senderBrandIdDefault": {
                    "description": "The brand seen by envelope senders when a brand is not explicitly set.",
                    "type": "string"
                }
            }
        },
        "bulkEnvelope": {
            "type": "object",
            "properties": {
                "bulkRecipientRow": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "bulkStatus": {
                    "description": "Indicates the status of the bulk send operation. Returned values can be:\n* queued\n* processing\n* sent\n* failed",
                    "type": "string"
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "envelopeUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "submittedDateTime": {
                    "description": "",
                    "type": "string"
                },
                "transactionId": {
                    "description": " Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.",
                    "type": "string"
                }
            }
        },
        "bulkEnvelopeStatus": {
            "type": "object",
            "properties": {
                "batchId": {
                    "description": "Specifies an identifier which can be used to retrieve a more detailed status of individual bulk recipient batches.",
                    "type": "string"
                },
                "batchSize": {
                    "description": "The number of items returned in this response.",
                    "type": "string"
                },
                "bulkEnvelopes": {
                    "description": "Reserved: TBD",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bulkEnvelope"
                    }
                },
                "bulkEnvelopesBatchUri": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "failed": {
                    "description": "The number of entries with a status of failed. ",
                    "type": "string"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "queued": {
                    "description": "The number of entries with a status of queued. ",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "sent": {
                    "description": "The number of entries with a status of sent.",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "submittedDate": {
                    "description": "",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            }
        },
        "bulkProcessingLists": {
            "type": "object",
            "properties": {
                "bulkProcessListIds": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "bulkProcessingListSummaries": {
            "type": "object",
            "properties": {
                "bulkListSummaries": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bulkProcessingListSummary"
                    }
                }
            }
        },
        "bulkProcessingListSummary": {
            "type": "object",
            "properties": {
                "bulkProcessListId": {
                    "description": "",
                    "type": "string"
                },
                "createdByUser": {
                    "description": "",
                    "type": "string"
                },
                "createdDate": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "bulkProcessRequest": {
            "type": "object",
            "properties": {
                "batchName": {
                    "description": "",
                    "type": "string"
                },
                "envelopeOrTemplateId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "bulkProcessResponse": {
            "type": "object",
            "properties": {
                "batchId": {
                    "description": "",
                    "type": "string"
                },
                "batchName": {
                    "description": "",
                    "type": "string"
                },
                "batchSize": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "description": "Array or errors.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "errors": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "queueLimit": {
                    "description": "",
                    "type": "string"
                },
                "totalQueued": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "bulkProcessResult": {
            "type": "object",
            "properties": {
                "errors": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bulkSendBatchError"
                    }
                },
                "listId": {
                    "description": "",
                    "type": "string"
                },
                "success": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "bulkSendBatchActionRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "",
                    "type": "string"
                },
                "notification": {
                    "$ref": "#/definitions/notification",
                    "description": ""
                },
                "voidReason": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "bulkSendBatchError": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "",
                    "type": "string"
                },
                "errorDetail": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "bulkSendBatchRequest": {
            "type": "object",
            "properties": {
                "batchName": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "bulkSendBatchStatus": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "",
                    "type": "string"
                },
                "actionStatus": {
                    "description": "",
                    "type": "string"
                },
                "batchId": {
                    "description": "",
                    "type": "string"
                },
                "batchName": {
                    "description": "",
                    "type": "string"
                },
                "batchSize": {
                    "description": "",
                    "type": "string"
                },
                "bulkErrors": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bulkSendErrorStatus"
                    }
                },
                "envelopeIdOrTemplateId": {
                    "description": "",
                    "type": "string"
                },
                "envelopesInfo": {
                    "$ref": "#/definitions/bulkSendEnvelopesInfo",
                    "description": ""
                },
                "envelopesUri": {
                    "description": "",
                    "type": "string"
                },
                "failed": {
                    "description": "",
                    "type": "string"
                },
                "mailingListId": {
                    "description": "",
                    "type": "string"
                },
                "mailingListName": {
                    "description": "",
                    "type": "string"
                },
                "ownerUserId": {
                    "description": "",
                    "type": "string"
                },
                "queued": {
                    "description": "",
                    "type": "string"
                },
                "resendsRemaining": {
                    "description": "",
                    "type": "string"
                },
                "senderUserId": {
                    "description": "",
                    "type": "string"
                },
                "sent": {
                    "description": "",
                    "type": "string"
                },
                "submittedDate": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Result of `getBulkSendBatchStatus`"
        },
        "bulkSendBatchSummaries": {
            "type": "object",
            "properties": {
                "batchSizeLimit": {
                    "description": "",
                    "type": "string"
                },
                "bulkBatchSummaries": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bulkSendBatchSummary"
                    }
                },
                "bulkProcessQueueLimit": {
                    "description": "",
                    "type": "string"
                },
                "bulkProcessTotalQueued": {
                    "description": "",
                    "type": "string"
                },
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "queueLimit": {
                    "description": "",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalQueued": {
                    "description": "",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            },
            "description": "A list of bulk send batch summaries. "
        },
        "bulkSendBatchSummary": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "",
                    "type": "string"
                },
                "actionStatus": {
                    "description": "",
                    "type": "string"
                },
                "batchId": {
                    "description": "",
                    "type": "string"
                },
                "batchName": {
                    "description": "",
                    "type": "string"
                },
                "batchSize": {
                    "description": "",
                    "type": "string"
                },
                "batchUri": {
                    "description": "",
                    "type": "string"
                },
                "failed": {
                    "description": "",
                    "type": "string"
                },
                "queued": {
                    "description": "",
                    "type": "string"
                },
                "sent": {
                    "description": "",
                    "type": "string"
                },
                "submittedDate": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Summary status of a single batch."
        },
        "bulkSendEnvelopesInfo": {
            "type": "object",
            "properties": {
                "authoritativeCopy": {
                    "description": "Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.",
                    "type": "string"
                },
                "completed": {
                    "description": "",
                    "type": "string"
                },
                "correct": {
                    "description": "",
                    "type": "string"
                },
                "created": {
                    "description": "",
                    "type": "string"
                },
                "declined": {
                    "description": "",
                    "type": "string"
                },
                "deleted": {
                    "description": "",
                    "type": "string"
                },
                "delivered": {
                    "description": "",
                    "type": "string"
                },
                "digitalSignaturesPending": {
                    "description": "",
                    "type": "string"
                },
                "sent": {
                    "description": "",
                    "type": "string"
                },
                "signed": {
                    "description": "",
                    "type": "string"
                },
                "timedOut": {
                    "description": "",
                    "type": "string"
                },
                "transferCompleted": {
                    "description": "",
                    "type": "string"
                },
                "voided": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "bulkSendErrorStatus": {
            "type": "object",
            "properties": {
                "created": {
                    "description": "",
                    "type": "string"
                },
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "errorMessage": {
                    "description": "",
                    "type": "string"
                },
                "recipientEmails": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "description": "A single bulk send error report."
        },
        "bulkSendingCopy": {
            "type": "object",
            "properties": {
                "customFields": {
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bulkSendingCopyCustomField"
                    }
                },
                "docGenFormFields": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bulksendingCopyDocGenFormField"
                    }
                },
                "emailBlurb": {
                    "description": "",
                    "type": "string"
                },
                "emailSubject": {
                    "description": "Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.",
                    "type": "string"
                },
                "recipients": {
                    "description": "An array of powerform recipients.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bulkSendingCopyRecipient"
                    }
                }
            },
            "description": "This object contains the details to use for a specific copy, or instance, of the envelope. When you send an envelope by using a bulk send list, you can customize these properties for each instance."
        },
        "bulkSendingCopyCustomField": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "",
                    "type": "string"
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                }
            },
            "description": "This object contains details about a custom field for a bulk send copy. In a bulk send request, each custom field in the bulk send list must match a custom field in the envelope or template that you want to send."
        },
        "bulksendingCopyDocGenFormField": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "",
                    "type": "string"
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                }
            }
        },
        "bulkSendingCopyRecipient": {
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "clientUserId": {
                    "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "customFields": {
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deliveryMethod": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "emailNotification": {
                    "$ref": "#/definitions/recipientEmailNotification",
                    "description": "A complex type that contains information sets the language of the recipient's email information. \n\n**IMPORTANT**: If you enable email notification for one recipient, you must enable email notification for all recipients as it overrides the Envelope Subject and `EmailBlurb` property settings. "
                },
                "embeddedRecipientStartURL": {
                    "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                    "type": "string"
                },
                "faxNumber": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "hostEmail": {
                    "description": "",
                    "type": "string"
                },
                "hostName": {
                    "description": "",
                    "type": "string"
                },
                "idCheckConfigurationName": {
                    "description": "Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.",
                    "type": "string"
                },
                "idCheckInformationInput": {
                    "$ref": "#/definitions/idCheckInformationInput",
                    "description": "An object that contains input information related to a recipient ID check."
                },
                "identificationMethod": {
                    "description": "",
                    "type": "string"
                },
                "identityVerification": {
                    "$ref": "#/definitions/recipientIdentityVerification",
                    "description": ""
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "note": {
                    "description": "Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.",
                    "type": "string"
                },
                "phoneAuthentication": {
                    "$ref": "#/definitions/recipientPhoneAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:\n\n* `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.\n* `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.\n* `recordVoicePrint`: Reserved for DocuSign.\n* `validateRecipProvidedNumber`: Reserved for DocuSign.\n\n"
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientSignatureProviders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientSignatureProvider"
                    }
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "signerName": {
                    "description": "",
                    "type": "string"
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                },
                "smsAuthentication": {
                    "$ref": "#/definitions/recipientSMSAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `SMS Auth $`, you use this complex type to provide the recipient authentication method details. It contains the element `senderProvidedNumbers`, which is an array of phone numbers that the recipient can use for SMS text authentication. \n\n"
                },
                "socialAuthentications": {
                    "description": " Lists the social ID type that can be used for recipient authentication.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/socialAuthentication"
                    }
                },
                "tabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bulkSendingCopyTab"
                    }
                }
            },
            "description": "This object contains details about a bulk send recipient."
        },
        "bulkSendingCopyTab": {
            "type": "object",
            "properties": {
                "initialValue": {
                    "description": "The original value of the tab.",
                    "type": "string"
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                }
            },
            "description": "A tab associated with the bulk send recipient. In a bulk send request, each recipient tab must match a recipient tab on the envelope or template that you want to send. To match up, the `tabLabel` for this tab and the `tabLabel` for the corresponding tab on the envelope or template must be the same.\n\nFor example, if the envelope has a placeholder text tab with the `tabLabel` `childName`, you must assign the same `tabLabel` `childName` to the tab here that you are populating with that information."
        },
        "bulkSendingList": {
            "type": "object",
            "properties": {
                "bulkCopies": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bulkSendingCopy"
                    }
                },
                "listId": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object contains the details for the bulk send list."
        },
        "bulkSendingListSummaries": {
            "type": "object",
            "properties": {
                "bulkListSummaries": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bulkSendingListSummary"
                    }
                }
            },
            "description": "This complex type contains summaries that provide basic information about the bulk send lists that belong to the current user."
        },
        "bulkSendingListSummary": {
            "type": "object",
            "properties": {
                "bulkSendListId": {
                    "description": "",
                    "type": "string"
                },
                "createdByUser": {
                    "description": "",
                    "type": "string"
                },
                "createdDate": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object contains basic information about a bulk send list."
        },
        "bulkSendRequest": {
            "type": "object",
            "properties": {
                "batchName": {
                    "description": "",
                    "type": "string"
                },
                "envelopeOrTemplateId": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object contains information about the envelope or template that you want to send in bulk."
        },
        "bulkSendResponse": {
            "type": "object",
            "properties": {
                "batchId": {
                    "description": "",
                    "type": "string"
                },
                "batchName": {
                    "description": "",
                    "type": "string"
                },
                "batchSize": {
                    "description": "",
                    "type": "string"
                },
                "envelopeOrTemplateId": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "description": "Array or errors.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "errors": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "queueLimit": {
                    "description": "",
                    "type": "string"
                },
                "totalQueued": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "The object contains the response to a bulk send request."
        },
        "bulkSendTestResponse": {
            "type": "object",
            "properties": {
                "canBeSent": {
                    "description": "",
                    "type": "boolean"
                },
                "validationErrorDetails": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "validationErrors": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "description": "This object contains the results of a bulk send test."
        },
        "captiveRecipient": {
            "type": "object",
            "properties": {
                "clientUserId": {
                    "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "email": {
                    "description": "Specifies the email address associated with the captive recipient.",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "userName": {
                    "description": "Specifies the user name associated with the captive recipient.",
                    "type": "string"
                }
            },
            "description": "This object contains details about a captive (embedded) recipient."
        },
        "captiveRecipientInformation": {
            "type": "object",
            "properties": {
                "captiveRecipients": {
                    "description": "A complex type containing information about one or more captive recipients.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/captiveRecipient"
                    }
                }
            },
            "description": "Contains information about captive (embedded) recipients."
        },
        "carbonCopy": {
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "accessCodeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `accessCode` property is editable. This property is read-only."
                },
                "addAccessCodeToEmail": {
                    "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
                    "type": "string"
                },
                "additionalNotifications": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAdditionalNotification"
                    }
                },
                "agentCanEditEmail": {
                    "description": "",
                    "type": "string"
                },
                "agentCanEditName": {
                    "description": "",
                    "type": "string"
                },
                "allowSystemOverrideForLockedRecipient": {
                    "description": "",
                    "type": "string"
                },
                "autoRespondedReason": {
                    "description": "",
                    "type": "string"
                },
                "bulkSendV2Recipient": {
                    "description": "",
                    "type": "string"
                },
                "clientUserId": {
                    "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "completedCount": {
                    "description": "",
                    "type": "string"
                },
                "consentDetailsList": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/consentDetails"
                    }
                },
                "customFields": {
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "declinedDateTime": {
                    "description": "The date and time the recipient declined the document.",
                    "type": "string"
                },
                "declinedReason": {
                    "description": "The reason the recipient declined the document.",
                    "type": "string"
                },
                "deliveredDateTime": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethod": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethodMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "designatorId": {
                    "description": "",
                    "type": "string"
                },
                "designatorIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "documentVisibility": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentVisibility"
                    }
                },
                "email": {
                    "description": "Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "emailMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `email` property is editable. This property is read-only."
                },
                "emailNotification": {
                    "$ref": "#/definitions/recipientEmailNotification",
                    "description": "A complex type that contains information sets the language of the recipient's email information. \n\n**IMPORTANT**: If you enable email notification for one recipient, you must enable email notification for all recipients as it overrides the Envelope Subject and `EmailBlurb` property settings. "
                },
                "emailRecipientPostSigningURL": {
                    "description": "",
                    "type": "string"
                },
                "embeddedRecipientStartURL": {
                    "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "excludedDocuments": {
                    "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "faxNumber": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "faxNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "firstName": {
                    "description": "The user's first name. \nMaximum Length: 50 characters.",
                    "type": "string"
                },
                "firstNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `firstName` property is editable. This property is read-only."
                },
                "fullName": {
                    "description": "",
                    "type": "string"
                },
                "fullNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "idCheckConfigurationName": {
                    "description": "Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.",
                    "type": "string"
                },
                "idCheckConfigurationNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `idCheckConfigurationName` property is editable. This property is read-only."
                },
                "idCheckInformationInput": {
                    "$ref": "#/definitions/idCheckInformationInput",
                    "description": "An object that contains input information related to a recipient ID check."
                },
                "identityVerification": {
                    "$ref": "#/definitions/recipientIdentityVerification",
                    "description": "Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address)."
                },
                "inheritEmailNotificationConfiguration": {
                    "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                    "type": "string"
                },
                "lastName": {
                    "description": "",
                    "type": "string"
                },
                "lastNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `lastName` property is editable. This property is read-only."
                },
                "linkedAccountConfigurationId": {
                    "description": "",
                    "type": "string"
                },
                "lockedRecipientPhoneAuthEditable": {
                    "description": "",
                    "type": "string"
                },
                "lockedRecipientSmsEditable": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "legal name of the recipient.\n\nMaximum Length: 100 characters.",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "note": {
                    "description": "Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.",
                    "type": "string"
                },
                "noteMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `note` property is editable. This property is read-only."
                },
                "phoneAuthentication": {
                    "$ref": "#/definitions/recipientPhoneAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:\n\n* `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.\n* `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.\n* `recordVoicePrint`: Reserved for DocuSign.\n* `validateRecipProvidedNumber`: Reserved for DocuSign.\n\n"
                },
                "phoneNumber": {
                    "$ref": "#/definitions/recipientPhoneNumber",
                    "description": "Describes the recipient phone number."
                },
                "proofFile": {
                    "$ref": "#/definitions/recipientProofFile",
                    "description": "The proof file of the recipient."
                },
                "recipientAttachments": {
                    "description": "Reserved:",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAttachment"
                    }
                },
                "recipientAuthenticationStatus": {
                    "$ref": "#/definitions/authenticationStatus",
                    "description": "Information about the recipient's authentication status. This property is read-only."
                },
                "recipientFeatureMetadata": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featureAvailableMetadata"
                    }
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientType": {
                    "description": "",
                    "type": "string"
                },
                "recipientTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientType` property is editable. This property is read-only."
                },
                "requireIdLookup": {
                    "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                    "type": "string"
                },
                "requireIdLookupMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireIdLookup` property is editable. This property is read-only."
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "routingOrder": {
                    "description": "Specifies the routing order of the recipient in the envelope. ",
                    "type": "string"
                },
                "routingOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `routingOrder` property is editable. This property is read-only."
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "signedDateTime": {
                    "description": "Reserved: For DocuSign use only. ",
                    "type": "string"
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                },
                "signingGroupIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signingGroupId` property is editable. This property is read-only."
                },
                "signingGroupName": {
                    "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
                    "type": "string"
                },
                "signingGroupUsers": {
                    "description": "A complex type that contains information about users in the signing group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                },
                "smsAuthentication": {
                    "$ref": "#/definitions/recipientSMSAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `SMS Auth $`, you use this complex type to provide the recipient authentication method details. It contains the element `senderProvidedNumbers`, which is an array of phone numbers that the recipient can use for SMS text authentication. \n\n"
                },
                "socialAuthentications": {
                    "description": " Lists the social ID type that can be used for recipient authentication.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/socialAuthentication"
                    }
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusCode": {
                    "description": "",
                    "type": "string"
                },
                "suppressEmails": {
                    "description": "",
                    "type": "string"
                },
                "tabs": {
                    "$ref": "#/definitions/tabs",
                    "description": "A list of `commentTabs` that contains the Carbon Copy recipient's comments."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "totalTabCount": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Contains information about a carbon copy recipient. Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date or add information to any of the documents. "
        },
        "certifiedDelivery": {
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "accessCodeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `accessCode` property is editable. This property is read-only."
                },
                "addAccessCodeToEmail": {
                    "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
                    "type": "string"
                },
                "additionalNotifications": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAdditionalNotification"
                    }
                },
                "agentCanEditEmail": {
                    "description": "",
                    "type": "string"
                },
                "agentCanEditName": {
                    "description": "",
                    "type": "string"
                },
                "allowSystemOverrideForLockedRecipient": {
                    "description": "",
                    "type": "string"
                },
                "autoRespondedReason": {
                    "description": "",
                    "type": "string"
                },
                "bulkSendV2Recipient": {
                    "description": "",
                    "type": "string"
                },
                "clientUserId": {
                    "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "completedCount": {
                    "description": "",
                    "type": "string"
                },
                "consentDetailsList": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/consentDetails"
                    }
                },
                "customFields": {
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "declinedDateTime": {
                    "description": "The date and time the recipient declined the document.",
                    "type": "string"
                },
                "declinedReason": {
                    "description": "The reason the recipient declined the document.",
                    "type": "string"
                },
                "deliveredDateTime": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethod": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethodMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "designatorId": {
                    "description": "",
                    "type": "string"
                },
                "designatorIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "documentVisibility": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentVisibility"
                    }
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "emailMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `email` property is editable. This property is read-only."
                },
                "emailNotification": {
                    "$ref": "#/definitions/recipientEmailNotification",
                    "description": "A complex type that contains information sets the language of the recipient's email information. \n\n**IMPORTANT**: If you enable email notification for one recipient, you must enable email notification for all recipients as it overrides the Envelope Subject and `EmailBlurb` property settings. "
                },
                "emailRecipientPostSigningURL": {
                    "description": "",
                    "type": "string"
                },
                "embeddedRecipientStartURL": {
                    "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "excludedDocuments": {
                    "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "faxNumber": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "faxNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "firstName": {
                    "description": "The user's first name. \nMaximum Length: 50 characters.",
                    "type": "string"
                },
                "firstNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `firstName` property is editable. This property is read-only."
                },
                "fullName": {
                    "description": "",
                    "type": "string"
                },
                "fullNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "idCheckConfigurationName": {
                    "description": "Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.",
                    "type": "string"
                },
                "idCheckConfigurationNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `idCheckConfigurationName` property is editable. This property is read-only."
                },
                "idCheckInformationInput": {
                    "$ref": "#/definitions/idCheckInformationInput",
                    "description": "An object that contains input information related to a recipient ID check."
                },
                "identityVerification": {
                    "$ref": "#/definitions/recipientIdentityVerification",
                    "description": "Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address)."
                },
                "inheritEmailNotificationConfiguration": {
                    "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                    "type": "string"
                },
                "lastName": {
                    "description": "",
                    "type": "string"
                },
                "lastNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `lastName` property is editable. This property is read-only."
                },
                "lockedRecipientPhoneAuthEditable": {
                    "description": "",
                    "type": "string"
                },
                "lockedRecipientSmsEditable": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "note": {
                    "description": "Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.",
                    "type": "string"
                },
                "noteMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `note` property is editable. This property is read-only."
                },
                "phoneAuthentication": {
                    "$ref": "#/definitions/recipientPhoneAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:\n\n* `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.\n* `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.\n* `recordVoicePrint`: Reserved for DocuSign.\n* `validateRecipProvidedNumber`: Reserved for DocuSign.\n\n"
                },
                "phoneNumber": {
                    "$ref": "#/definitions/recipientPhoneNumber",
                    "description": "Describes the recipient phone number."
                },
                "proofFile": {
                    "$ref": "#/definitions/recipientProofFile",
                    "description": "The proof file of the recipient."
                },
                "recipientAttachments": {
                    "description": "Reserved:",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAttachment"
                    }
                },
                "recipientAuthenticationStatus": {
                    "$ref": "#/definitions/authenticationStatus",
                    "description": "Information about the recipient's authentication status. This property is read-only."
                },
                "recipientFeatureMetadata": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featureAvailableMetadata"
                    }
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientType": {
                    "description": "",
                    "type": "string"
                },
                "recipientTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientType` property is editable. This property is read-only."
                },
                "requireIdLookup": {
                    "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                    "type": "string"
                },
                "requireIdLookupMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireIdLookup` property is editable. This property is read-only."
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "routingOrder": {
                    "description": "Specifies the routing order of the recipient in the envelope. ",
                    "type": "string"
                },
                "routingOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `routingOrder` property is editable. This property is read-only."
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "signedDateTime": {
                    "description": "Reserved: For DocuSign use only. ",
                    "type": "string"
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                },
                "signingGroupIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signingGroupId` property is editable. This property is read-only."
                },
                "signingGroupName": {
                    "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
                    "type": "string"
                },
                "signingGroupUsers": {
                    "description": "A complex type that contains information about users in the signing group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                },
                "smsAuthentication": {
                    "$ref": "#/definitions/recipientSMSAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `SMS Auth $`, you use this complex type to provide the recipient authentication method details. It contains the element `senderProvidedNumbers`, which is an array of phone numbers that the recipient can use for SMS text authentication. \n\n"
                },
                "socialAuthentications": {
                    "description": " Lists the social ID type that can be used for recipient authentication.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/socialAuthentication"
                    }
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusCode": {
                    "description": "",
                    "type": "string"
                },
                "suppressEmails": {
                    "description": "",
                    "type": "string"
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "totalTabCount": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Contains information about a certified delivery recipient. Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date or add information to any of the documents."
        },
        "checkbox": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies the tool tip text for the tab.",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "requireInitialOnSharedChange": {
                    "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
                    "type": "string"
                },
                "requireInitialOnSharedChangeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireInitialOnSharedChange` property is editable."
                },
                "selected": {
                    "description": "When set to **true**, the checkbox is selected.",
                    "type": "string"
                },
                "selectedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `selected` property is editable."
                },
                "selectedOriginal": {
                    "description": "",
                    "type": "string"
                },
                "selectedOriginalMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `shared` property is editable.\n"
                },
                "shareToRecipients": {
                    "description": "",
                    "type": "string"
                },
                "shareToRecipientsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that allows the recipient to select a yes/no (on/off) option.\n"
        },
        "chunkedUploadPart": {
            "type": "object",
            "properties": {
                "sequence": {
                    "description": "",
                    "type": "string"
                },
                "size": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "An object that contains information about the chunked upload part."
        },
        "chunkedUploadRequest": {
            "type": "object",
            "properties": {
                "chunkedUploadId": {
                    "description": "",
                    "type": "string"
                },
                "data": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This is the request object for uploading a chunked upload."
        },
        "chunkedUploadResponse": {
            "type": "object",
            "properties": {
                "checksum": {
                    "description": "",
                    "type": "string"
                },
                "chunkedUploadId": {
                    "description": "",
                    "type": "string"
                },
                "chunkedUploadParts": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chunkedUploadPart"
                    }
                },
                "chunkedUploadUri": {
                    "description": "",
                    "type": "string"
                },
                "committed": {
                    "description": "",
                    "type": "string"
                },
                "expirationDateTime": {
                    "description": "",
                    "type": "string"
                },
                "maxChunkedUploadParts": {
                    "description": "",
                    "type": "string"
                },
                "maxTotalSize": {
                    "description": "",
                    "type": "string"
                },
                "totalSize": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This response object is returned after you upload a chunked upload."
        },
        "cloudStorageProvider": {
            "type": "object",
            "properties": {
                "authenticationUrl": {
                    "description": "The authentication URL used for the cloud storage provider. This information is only included in the response if the user has not passed authentication for the cloud storage provider. If the redirectUrl query string is provided, the returnUrl is appended to the authenticationUrl. ",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "redirectUrl": {
                    "description": "The URL the user is redirected to after the cloud storage provider authenticates the user. Using this will append the redirectUrl to the authenticationUrl.\n\nThe redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.",
                    "type": "string"
                },
                "service": {
                    "description": "The service name for the cloud storage provider.",
                    "type": "string"
                },
                "serviceId": {
                    "description": "The DocuSign generated ID for the cloud storage provider",
                    "type": "string"
                }
            },
            "description": "Contains details about a specific cloud storage provider."
        },
        "cloudStorageProviders": {
            "type": "object",
            "properties": {
                "storageProviders": {
                    "description": "An Array containing the storage providers associated with the user.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudStorageProvider"
                    }
                }
            }
        },
        "comment": {
            "type": "object",
            "properties": {
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "hmac": {
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "string"
                },
                "mentions": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "read": {
                    "description": "",
                    "type": "boolean"
                },
                "sentByEmail": {
                    "description": "",
                    "type": "string"
                },
                "sentByFullName": {
                    "description": "",
                    "type": "string"
                },
                "sentByImageId": {
                    "description": "",
                    "type": "string"
                },
                "sentByInitials": {
                    "description": "",
                    "type": "string"
                },
                "sentByRecipientId": {
                    "description": "",
                    "type": "string"
                },
                "sentByUserId": {
                    "description": "",
                    "type": "string"
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                },
                "signingGroupName": {
                    "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
                    "type": "string"
                },
                "subject": {
                    "description": "",
                    "type": "string"
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "text": {
                    "description": "",
                    "type": "string"
                },
                "threadId": {
                    "description": "",
                    "type": "string"
                },
                "threadOriginatorId": {
                    "description": "",
                    "type": "string"
                },
                "timestamp": {
                    "description": "",
                    "type": "string"
                },
                "timeStampFormatted": {
                    "description": "",
                    "type": "string"
                },
                "visibleTo": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "commentHistoryResult": {
            "type": "object",
            "properties": {
                "comments": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/comment"
                    }
                },
                "count": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "endTimetoken": {
                    "description": "",
                    "type": "string"
                },
                "startTimetoken": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "commentPublish": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "",
                    "type": "string"
                },
                "mentions": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "description": "",
                    "type": "string"
                },
                "threadAnchorKeys": {
                    "description": "",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "threadId": {
                    "description": "",
                    "type": "string"
                },
                "visibleTo": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "commentsPublish": {
            "type": "object",
            "properties": {
                "commentsToPublish": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commentPublish"
                    }
                }
            }
        },
        "commentThread": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "comments": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/comment"
                    }
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "threadId": {
                    "description": "",
                    "type": "string"
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            }
        },
        "commissionCounty": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "concealValueOnDocumentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `concealValueOnDocument` property is editable."
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "disableAutoSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `disableAutoSize` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "maxLength": {
                    "description": "An optional value that describes the maximum length of the property when the property is a string.",
                    "type": "string"
                },
                "maxLengthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `maxLength` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A Commission County tab displays the county of a notary's commission. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).\n"
        },
        "commissionExpiration": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "concealValueOnDocumentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `concealValueOnDocument` property is editable."
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "disableAutoSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `disableAutoSize` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "maxLength": {
                    "description": "An optional value that describes the maximum length of the property when the property is a string.",
                    "type": "string"
                },
                "maxLengthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `maxLength` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A Commission Expiration tab displays the expiration date of a notary's commission. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).\n"
        },
        "commissionNumber": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "concealValueOnDocumentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `concealValueOnDocument` property is editable."
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "disableAutoSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `disableAutoSize` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "maxLength": {
                    "description": "An optional value that describes the maximum length of the property when the property is a string.",
                    "type": "string"
                },
                "maxLengthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `maxLength` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A Commission Number tab displays a notary's commission number. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/\n"
        },
        "commissionState": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "concealValueOnDocumentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `concealValueOnDocument` property is editable."
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "disableAutoSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `disableAutoSize` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "maxLength": {
                    "description": "An optional value that describes the maximum length of the property when the property is a string.",
                    "type": "string"
                },
                "maxLengthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `maxLength` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A Commission State tab displays the state in which a notary's commission was granted. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/\n"
        },
        "company": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "concealValueOnDocumentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `concealValueOnDocument` property is editable."
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "disableAutoSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `disableAutoSize` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "maxLength": {
                    "description": "An optional value that describes the maximum length of the property when the property is a string.",
                    "type": "string"
                },
                "maxLengthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `maxLength` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies the tool tip text for the tab.",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that displays the recipient's company name.\n"
        },
        "compositeTemplate": {
            "type": "object",
            "properties": {
                "compositeTemplateId": {
                    "description": "The identify of this composite template. It is used as a reference when adding document object information. If used, the document's `content-disposition` must include the composite template ID to which the document should be added. If a composite template ID is not specified in the content-disposition, the document is applied based on the value of the `documentId` property only. If no document object is specified, the composite template inherits the first document.",
                    "type": "string"
                },
                "document": {
                    "$ref": "#/definitions/document",
                    "description": "An optional document object that will act as the primary document in the composite template object. If the document node is present, it will take precedence over any server template or inline template documents. It always comes first. Only use this when you want to supply the document dynamically."
                },
                "inlineTemplates": {
                    "description": " Zero or more inline templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inlineTemplate"
                    }
                },
                "pdfMetaDataTemplateSequence": {
                    "description": "",
                    "type": "string"
                },
                "serverTemplates": {
                    "description": "0 or more server-side templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/serverTemplate"
                    }
                }
            },
            "description": "This object contains information about a [composite template][composite], which you can use to to apply multiple templates to a single envelope, combine templates with PDF forms, and combine templates with documents from cloud sources.\n\n[composite]: /docs/esign-rest-api/esign101/concepts/templates/composite/"
        },
        "conditionalRecipientRule": {
            "type": "object",
            "properties": {
                "conditions": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/conditionalRecipientRuleCondition"
                    }
                },
                "order": {
                    "description": "",
                    "type": "string"
                },
                "recipientGroup": {
                    "$ref": "#/definitions/recipientGroup",
                    "description": "A set of recipients that may be used for the envelope, depending on the `conditions` defined."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                }
            },
            "description": "A rule that defines a set of recipients and the conditions under which they will be used for the envelope."
        },
        "conditionalRecipientRuleCondition": {
            "type": "object",
            "properties": {
                "filters": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/conditionalRecipientRuleFilter"
                    }
                },
                "order": {
                    "description": "",
                    "type": "string"
                },
                "recipientLabel": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "conditionalRecipientRuleFilter": {
            "type": "object",
            "properties": {
                "operator": {
                    "description": "",
                    "type": "string"
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "scope": {
                    "description": "",
                    "type": "string"
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                }
            }
        },
        "connectConfigResults": {
            "type": "object",
            "properties": {
                "configurations": {
                    "description": "Reserved: TBD",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connectCustomConfiguration"
                    }
                },
                "totalRecords": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object contains the results of a ConnectConfigurations::GET method."
        },
        "connectCustomConfiguration": {
            "type": "object",
            "properties": {
                "allowEnvelopePublish": {
                    "description": "When set to **true**, data is sent to the urlToPublishTo web address. This option can be set to false to stop sending data while maintaining the Connect configuration information.",
                    "type": "string"
                },
                "allowSalesforcePublish": {
                    "description": "",
                    "type": "string"
                },
                "allUsers": {
                    "description": "When set to **true**, the tracked envelope and recipient events for all users, including users that are added a later time, are sent through Connect.",
                    "type": "string"
                },
                "allUsersExcept": {
                    "description": "",
                    "type": "string"
                },
                "configurationType": {
                    "description": "If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.",
                    "type": "string"
                },
                "connectId": {
                    "description": " Specifies the DocuSign generated ID for the Connect configuration.  ",
                    "type": "string"
                },
                "deliveryMode": {
                    "description": "",
                    "type": "string"
                },
                "disabledBy": {
                    "description": "",
                    "type": "string"
                },
                "enableLog": {
                    "description": "This turns Connect logging on or off. When set to **true**, logging is turned on.",
                    "type": "string"
                },
                "envelopeEvents": {
                    "description": "A comma separated list of ï¿½Envelopeï¿½ related events that are tracked through Connect. The possible event values are: Sent, Delivered, Completed, Declined, and Voided.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "eventData": {
                    "$ref": "#/definitions/connectEventData",
                    "description": "Allows you to specify the format of the information the Connect webhooks returns. For more information, see [Connect webhooks with JSON notifications](https://www.docusign.com/blog/developers/connect-webhooks-json-notifications)"
                },
                "events": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "externalFolderId": {
                    "description": "",
                    "type": "string"
                },
                "externalFolderLabel": {
                    "description": "",
                    "type": "string"
                },
                "groupIds": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "includeCertificateOfCompletion": {
                    "description": "When set to **true**, the Connect Service includes the Certificate of Completion with completed envelopes. ",
                    "type": "string"
                },
                "includeCertSoapHeader": {
                    "description": "",
                    "type": "string"
                },
                "includeDocumentFields": {
                    "description": "When set to **true**, the Document Fields associated with envelope documents are included in the data. Document Fields are optional custom name-value pairs added to documents using the API. ",
                    "type": "string"
                },
                "includeDocuments": {
                    "description": "When set to **true**, Connect will send the PDF document along with the update XML.",
                    "type": "string"
                },
                "includeEnvelopeVoidReason": {
                    "description": "When set to **true**, Connect will include the voidedReason for voided envelopes.",
                    "type": "string"
                },
                "includeHMAC": {
                    "description": "",
                    "type": "string"
                },
                "includeOAuth": {
                    "description": "",
                    "type": "string"
                },
                "includeSenderAccountasCustomField": {
                    "description": "When set to **true**, Connect will include the sender account as Custom Field in the data.",
                    "type": "string"
                },
                "includeTimeZoneInformation": {
                    "description": "When set to **true**, Connect will include the envelope time zone information.",
                    "type": "string"
                },
                "integratorManaged": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the Connect configuration. The name helps identify the configuration in the list.",
                    "type": "string"
                },
                "password": {
                    "description": "",
                    "type": "string"
                },
                "recipientEvents": {
                    "description": "A comma separated list of ï¿½Recipientï¿½ related events that are tracked through Connect. The possible event values are: Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requireMutualTls": {
                    "description": "",
                    "type": "string"
                },
                "requiresAcknowledgement": {
                    "description": "When set to **true**, and a publication message fails to be acknowledged, the message goes back into the queue and the system will retry delivery after a successful acknowledgement is received. If the delivery fails a second time, the message is not returned to the queue for sending until Connect receives a successful acknowledgement and it has been at least 24 hours since the previous retry. There is a maximum of ten retries Alternately, you can use Republish Connect Information to manually republish the envelope information.",
                    "type": "string"
                },
                "salesforceApiVersion": {
                    "description": "",
                    "type": "string"
                },
                "salesforceAuthcode": {
                    "description": "",
                    "type": "string"
                },
                "salesforceCallBackUrl": {
                    "description": "",
                    "type": "string"
                },
                "salesforceDocumentsAsContentFiles": {
                    "description": "",
                    "type": "string"
                },
                "senderOverride": {
                    "description": "",
                    "type": "string"
                },
                "senderSelectableItems": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sfObjects": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connectSalesforceObject"
                    }
                },
                "signMessageWithX509Certificate": {
                    "description": "When set to **true**, Connect messages are signed with an X509 certificate. This provides support for 2-way SSL.",
                    "type": "string"
                },
                "soapNamespace": {
                    "description": "The namespace of the SOAP interface.\n\nThe namespace value must be set if useSoapInterface is set to true.",
                    "type": "string"
                },
                "urlToPublishTo": {
                    "description": "This is the web address and name of your listener or Retrieving Service endpoint. You need to include HTTPS:// in the web address.",
                    "type": "string"
                },
                "userIds": {
                    "description": "A comma separated list of userIds. This sets the users associated with the tracked envelope and recipient events. When one of the event occurs for a set user, the information is sent through Connect. \n\n###### Note: If allUsers is set to ï¿½falseï¿½ then you must provide a list of user idï¿½s.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userName": {
                    "description": "",
                    "type": "string"
                },
                "useSoapInterface": {
                    "description": "When set to **true**, indicates that the `urlToPublishTo` property contains a SOAP endpoint.",
                    "type": "string"
                }
            },
            "description": "The `connectCustomConfiguration` object describes how Connect is configured for your account."
        },
        "connectDebugLog": {
            "type": "object",
            "properties": {
                "connectConfig": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "eventDateTime": {
                    "description": "",
                    "type": "string"
                },
                "eventDescription": {
                    "description": "",
                    "type": "string"
                },
                "payload": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "connectDeleteFailureResult": {
            "type": "object"
        },
        "connectEventData": {
            "type": "object",
            "properties": {
                "format": {
                    "description": "",
                    "type": "string"
                },
                "includeData": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object lets you choose the data format of your Connect response.\nFor  more information about using this object, see [Connect webhooks with JSON notifications](https://www.docusign.com/blog/developers/connect-webhooks-json-notifications). "
        },
        "connectFailureFilter": {
            "type": "object",
            "properties": {
                "envelopeIds": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "synchronous": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "A list of failed envelope IDs to retry."
        },
        "connectFailureResult": {
            "type": "object",
            "properties": {
                "configId": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "configUrl": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMessage": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object contains details about a Connect failure result."
        },
        "connectFailureResults": {
            "type": "object",
            "properties": {
                "retryQueue": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connectFailureResult"
                    }
                }
            }
        },
        "connectHistoricalEnvelopeRepublish": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/connectCustomConfiguration",
                    "description": ""
                },
                "envelopes": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "connectLog": {
            "type": "object",
            "properties": {
                "accountId": {
                    "description": "The account ID associated with the envelope.",
                    "type": "string"
                },
                "configUrl": {
                    "description": "The web address of the listener or Retrieving Service end point for Connect.",
                    "type": "string"
                },
                "connectDebugLog": {
                    "description": "A complex element containing information about the Connect configuration, error details, date/time, description and payload.\n\nThis is only included in the response if the query additional_info=true is used.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connectDebugLog"
                    }
                },
                "connectId": {
                    "description": "The identifier for the Connect configuration that failed. If an account has multiple Connect configurations, this value is used to look up the Connect configuration for the failed post.",
                    "type": "string"
                },
                "created": {
                    "description": "The date and time the entry was created.",
                    "type": "string"
                },
                "email": {
                    "description": "The email that sent the envelope.",
                    "type": "string"
                },
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "error": {
                    "description": "The error that caused the Connect post to fail.",
                    "type": "string"
                },
                "failureId": {
                    "description": "The failure log ID for the failure.",
                    "type": "string"
                },
                "failureUri": {
                    "description": "The URI for the failure.",
                    "type": "string"
                },
                "lastTry": {
                    "description": "The date and time the last attempt to post.",
                    "type": "string"
                },
                "logId": {
                    "description": "The Connect log ID for the entry.",
                    "type": "string"
                },
                "logUri": {
                    "description": "The URI for the log item.",
                    "type": "string"
                },
                "retryCount": {
                    "description": "The number of times the Connect post has been retried.",
                    "type": "string"
                },
                "retryUri": {
                    "description": "The UEI to retry to publish the Connect failure.",
                    "type": "string"
                },
                "status": {
                    "description": "The new envelope status for the failed Connect post. The possible values are: Any, Voided, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut, Template, or Processing.",
                    "type": "string"
                },
                "subject": {
                    "description": "The envelope subject.",
                    "type": "string"
                },
                "userName": {
                    "description": "The name of the envelope sender.",
                    "type": "string"
                }
            },
            "description": "Contains information about a Connect log entry."
        },
        "connectLogs": {
            "type": "object",
            "properties": {
                "failures": {
                    "description": "An array of containing failure information from the Connect failure log.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connectLog"
                    }
                },
                "logs": {
                    "description": "A complex type containing Connect log information. It is divided into two sections, one for regular logs and one for Connect failures. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connectLog"
                    }
                },
                "totalRecords": {
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "connectOAuthConfig": {
            "type": "object",
            "properties": {
                "authorizationServerUrl": {
                    "description": "",
                    "type": "string"
                },
                "clientId": {
                    "description": "",
                    "type": "string"
                },
                "clientSecret": {
                    "description": "",
                    "type": "string"
                },
                "customParameters": {
                    "description": "",
                    "type": "string",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "scope": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "connectSalesforceField": {
            "type": "object",
            "properties": {
                "dsAttribute": {
                    "description": "",
                    "type": "string"
                },
                "dsLink": {
                    "description": "",
                    "type": "string"
                },
                "dsNode": {
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "string"
                },
                "sfField": {
                    "description": "",
                    "type": "string"
                },
                "sfFieldName": {
                    "description": "",
                    "type": "string"
                },
                "sfFolder": {
                    "description": "",
                    "type": "string"
                },
                "sfLockedValue": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object is used to match a DocuSign field to a Salesforce field so that Docusign can send information to your Salesforce account."
        },
        "connectSalesforceObject": {
            "type": "object",
            "properties": {
                "active": {
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "string"
                },
                "insert": {
                    "description": "",
                    "type": "string"
                },
                "onCompleteOnly": {
                    "description": "",
                    "type": "string"
                },
                "selectFields": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connectSalesforceField"
                    }
                },
                "sfObject": {
                    "description": "",
                    "type": "string"
                },
                "sfObjectName": {
                    "description": "",
                    "type": "string"
                },
                "updateFields": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connectSalesforceField"
                    }
                }
            },
            "description": "A `connectSalesforceObject` is an object that updates envelope and document status or recipient status in your Salesforce account.\n\nWhen you install DocuSign Connect for Salesforce, the service automatically sets up two Connect objects: one that updates envelope status and documents and one that updates recipient status. You can also customize DocuSign Connect for Salesforce by associating DocuSign objects with Salesforce objects so that DocuSign Connect for Salesforce updates or inserts the information into the Salesforce object. For more information, see \n[DocuSign for Salesforce - Adding Completed Documents to the Notes and Attachments](https://support.docusign.com/articles/DocuSign-for-Salesforce-Adding-Completed-Documents-to-the-Notes-and-Attachments-New)."
        },
        "connectUserInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "",
                    "type": "string"
                },
                "isIncluded": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                },
                "userName": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "connectUserObject": {
            "type": "object",
            "properties": {
                "configurationtype": {
                    "description": "If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.",
                    "type": "string"
                },
                "connectId": {
                    "description": "",
                    "type": "string"
                },
                "enabled": {
                    "description": "",
                    "type": "string"
                },
                "hasAccess": {
                    "description": "",
                    "type": "string"
                },
                "senderSearchableItems": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "consentDetails": {
            "type": "object",
            "properties": {
                "consentKey": {
                    "description": "",
                    "type": "string"
                },
                "deliveryMethod": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "signerConsentStatus": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "consoleViewRequest": {
            "type": "object",
            "properties": {
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "returnUrl": {
                    "description": "The URL to be redirected to after the console view session has ended.",
                    "type": "string"
                }
            },
            "description": "The request object for the [EnvelopeViews: createConsole](/docs/esign-rest-api/reference/envelopes/envelopeviews/createconsole/) method."
        },
        "consumerDisclosure": {
            "type": "object",
            "properties": {
                "accountEsignId": {
                    "description": "A GUID identifying the account associated with the consumer disclosure",
                    "type": "string"
                },
                "allowCDWithdraw": {
                    "description": "Indicates whether the customer can withdraw their acceptance of the consumer disclosure.",
                    "type": "string"
                },
                "allowCDWithdrawMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowCDWithdraw` property is editable.\n"
                },
                "changeEmail": {
                    "description": "",
                    "type": "string"
                },
                "changeEmailOther": {
                    "description": "",
                    "type": "string"
                },
                "companyName": {
                    "description": "The name of the company associated with the consumer disclosure.",
                    "type": "string"
                },
                "companyPhone": {
                    "description": "The phone number of the company associated with the consumer disclosure.",
                    "type": "string"
                },
                "copyCostPerPage": {
                    "description": "",
                    "type": "string"
                },
                "copyFeeCollectionMethod": {
                    "description": "Specifies the fee collection method for cases in which the customer requires paper copies of the document.\n\nMaximum Length: 255 characters",
                    "type": "string"
                },
                "copyRequestEmail": {
                    "description": "",
                    "type": "string"
                },
                "custom": {
                    "description": "",
                    "type": "string"
                },
                "enableEsign": {
                    "description": "",
                    "type": "string"
                },
                "esignAgreement": {
                    "description": "The Electronic Record and Signature Disclosure text. The disclosure text includes the html formatting.",
                    "type": "string"
                },
                "esignText": {
                    "description": "",
                    "type": "string"
                },
                "languageCode": {
                    "description": "",
                    "type": "string"
                },
                "mustAgreeToEsign": {
                    "description": "",
                    "type": "string"
                },
                "pdfId": {
                    "description": "",
                    "type": "string"
                },
                "useBrand": {
                    "description": "",
                    "type": "string"
                },
                "useConsumerDisclosureWithinAccount": {
                    "description": "",
                    "type": "string"
                },
                "useConsumerDisclosureWithinAccountMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `useConsumerDisclosureWithinAccount` property is editable.\n"
                },
                "withdrawAddressLine1": {
                    "description": "Contains the first address line of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "withdrawAddressLine2": {
                    "description": "Contains the second address line of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "withdrawByEmail": {
                    "description": "Indicates whether the customer can withdraw consent by email.",
                    "type": "string"
                },
                "withdrawByMail": {
                    "description": "Indicates whether the customer can withdraw consent by postal mail.",
                    "type": "string"
                },
                "withdrawByPhone": {
                    "description": "Indicates whether the customer can withdraw consent by phone.",
                    "type": "string"
                },
                "withdrawCity": {
                    "description": "Contains the city of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 50 characters. ",
                    "type": "string"
                },
                "withdrawConsequences": {
                    "description": "Indicates the consequences of withdrawing consent.",
                    "type": "string"
                },
                "withdrawEmail": {
                    "description": "Contains the email address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "withdrawOther": {
                    "description": "Indicates other information need to withdraw consent.\n\nMaximum length: 255 characters.",
                    "type": "string"
                },
                "withdrawPhone": {
                    "description": "Contains the phone number which a customer can call to register consent withdrawal notification.\n\nMaximum length: 20 characters. ",
                    "type": "string"
                },
                "withdrawPostalCode": {
                    "description": "Contains the postal code of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 20 characters. ",
                    "type": "string"
                },
                "withdrawState": {
                    "description": "Contains the state of the postal address to which a customer can send a consent withdrawal notification.",
                    "type": "string"
                }
            },
            "description": "Details about consumer disclosures."
        },
        "contact": {
            "type": "object",
            "properties": {
                "cloudProvider": {
                    "description": "",
                    "type": "string"
                },
                "cloudProviderContainerId": {
                    "description": "",
                    "type": "string"
                },
                "contactId": {
                    "description": "",
                    "type": "string"
                },
                "contactPhoneNumbers": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contactPhoneNumber"
                    }
                },
                "contactUri": {
                    "description": "",
                    "type": "string"
                },
                "emails": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "isOwner": {
                    "description": "",
                    "type": "boolean"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "notaryContactDetails": {
                    "$ref": "#/definitions/notaryContactDetails",
                    "description": ""
                },
                "organization": {
                    "description": "",
                    "type": "string"
                },
                "roomContactType": {
                    "description": "",
                    "type": "string"
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "signingGroup": {
                    "description": "",
                    "type": "string"
                },
                "signingGroupName": {
                    "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
                    "type": "string"
                }
            }
        },
        "contactGetResponse": {
            "type": "object",
            "properties": {
                "contacts": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contact"
                    }
                },
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            },
            "description": "This response object contains information about the contacts associated with an account."
        },
        "contactModRequest": {
            "type": "object",
            "properties": {
                "contactList": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contact"
                    }
                }
            },
            "description": "The request object containing the new information for the contacts."
        },
        "contactPhoneNumber": {
            "type": "object",
            "properties": {
                "phoneNumber": {
                    "description": "",
                    "type": "string"
                },
                "phoneType": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Details about the phone numbers associated with a specific contact."
        },
        "contactUpdateResponse": {
            "type": "object",
            "properties": {
                "contacts": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contact"
                    }
                }
            },
            "description": "This response objects shows the updated details for the contacts."
        },
        "correctViewRequest": {
            "type": "object",
            "properties": {
                "beginOnTagger": {
                    "description": "",
                    "type": "string"
                },
                "returnUrl": {
                    "description": "The url used after correct/send view session has ended. DocuSign redirects to the url and includes an event parameter that can be used by your app. The event parameters returned are: \n\n* send (user corrected and sent the envelope)\n* save (user saved the envelope)\n* cancel (user canceled the transaction.)\n* error (there was an error when performing the correct or send)\n* sessionEnd (the session ended before the user completed a different action)\n\n###### Note: Include https:// in the URL or the redirect might not succeed on some browsers. ",
                    "type": "string"
                },
                "suppressNavigation": {
                    "description": "Specifies whether the window is displayed with or without dressing.",
                    "type": "string"
                },
                "viewUrl": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "The request body for the [EnvelopeViews: createCorrect](/docs/esign-rest-api/reference/envelopes/envelopeviews/createcorrect/) method."
        },
        "country": {
            "type": "object",
            "properties": {
                "isoCode": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "provinces": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/province"
                    }
                },
                "provinceValidated": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "creditCardInformation": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/addressInformation",
                    "description": "A complex element containing the credit card billing address information."
                },
                "cardLastDigits": {
                    "description": "",
                    "type": "string"
                },
                "cardNumber": {
                    "description": "The number on the credit card.",
                    "type": "string"
                },
                "cardType": {
                    "description": "The credit card type. Valid values are: visa, mastercard, or amex.",
                    "type": "string"
                },
                "cvNumber": {
                    "description": "",
                    "type": "string"
                },
                "expirationMonth": {
                    "description": "The month that the credit card expires (1-12).",
                    "type": "string"
                },
                "expirationYear": {
                    "description": "The year 4 digit year in which the credit card expires.",
                    "type": "string"
                },
                "nameOnCard": {
                    "description": "The exact name printed on the credit card.",
                    "type": "string"
                },
                "tokenizedCard": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object contains information about a credit card that is associated with an account."
        },
        "creditCardTypes": {
            "type": "object",
            "properties": {
                "cardTypes": {
                    "description": "An array containing supported credit card types.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "currencyFeatureSetPrice": {
            "type": "object",
            "properties": {
                "currencyCode": {
                    "description": "Specifies the alternate ISO currency code for the account. ",
                    "type": "string"
                },
                "currencySymbol": {
                    "description": "Specifies the alternate currency symbol for the account.",
                    "type": "string"
                },
                "envelopeFee": {
                    "description": "An incremental envelope cost for plans with envelope overages (when `isEnabled` is set to **true**.)",
                    "type": "string"
                },
                "fixedFee": {
                    "description": "Specifies a one-time fee associated with the plan (when `isEnabled` is set to **true**.)",
                    "type": "string"
                },
                "seatFee": {
                    "description": "Specifies an incremental seat cost for seat-based plans (when `isEnabled` is set to **true**.)",
                    "type": "string"
                }
            },
            "description": "Information about the price and currency associated with the feature set. Reserved for internal DocuSign use only."
        },
        "currencyPlanPrice": {
            "type": "object",
            "properties": {
                "currencyCode": {
                    "description": "Specifies the ISO currency code for the account.",
                    "type": "string"
                },
                "currencySymbol": {
                    "description": "Specifies the currency symbol for the account.",
                    "type": "string"
                },
                "perSeatPrice": {
                    "description": "",
                    "type": "string"
                },
                "supportedCardTypes": {
                    "$ref": "#/definitions/creditCardTypes",
                    "description": "A simple type enumeration of the language used. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Bahasa Indonesia (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro),Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi)."
                },
                "supportIncidentFee": {
                    "description": "The support incident fee charged for each support incident.",
                    "type": "string"
                },
                "supportPlanFee": {
                    "description": "The support plan fee charged for this plan.",
                    "type": "string"
                }
            }
        },
        "customField": {
            "type": "object",
            "properties": {
                "customFieldType": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "fieldId": {
                    "description": "",
                    "type": "string"
                },
                "listItems": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "show": {
                    "description": "",
                    "type": "string"
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                }
            },
            "description": "This object provides details about a custom field."
        },
        "customFields": {
            "description": "Contains information about custom fields.",
            "type": "object",
            "properties": {
                "listCustomFields": {
                    "description": "An array of list custom fields.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/listCustomField"
                    }
                },
                "textCustomFields": {
                    "description": "An array of text custom fields.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/textCustomField"
                    }
                }
            }
        },
        "customFieldsEnvelope": {
            "type": "object",
            "properties": {
                "listCustomFields": {
                    "description": "An array of list custom fields.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/listCustomField"
                    }
                },
                "textCustomFields": {
                    "description": "An array of text custom fields.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/textCustomField"
                    }
                }
            }
        },
        "customSettingsInformation": {
            "type": "object",
            "properties": {
                "customSettings": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nameValue"
                    }
                }
            }
        },
        "date": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "concealValueOnDocumentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `concealValueOnDocument` property is editable."
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "disableAutoSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `disableAutoSize` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "maxLength": {
                    "description": "An optional value that describes the maximum length of the property when the property is a string.",
                    "type": "string"
                },
                "maxLengthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `maxLength` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "requireAll": {
                    "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
                    "type": "string"
                },
                "requireAllMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireAll` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "requireInitialOnSharedChange": {
                    "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
                    "type": "string"
                },
                "requireInitialOnSharedChangeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireInitialOnSharedChange` property is editable."
                },
                "senderRequired": {
                    "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                    "type": "string"
                },
                "senderRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `senderRequired` property is editable."
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `shared` property is editable."
                },
                "shareToRecipients": {
                    "description": "",
                    "type": "string"
                },
                "shareToRecipientsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "validationMessage": {
                    "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                    "type": "string"
                },
                "validationMessageMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `validationMessage` property is editable."
                },
                "validationPattern": {
                    "description": "A regular expression used to validate input for the tab.",
                    "type": "string"
                },
                "validationPatternMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `validationPattern` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that allows the recipient to enter a date. Date tabs\nare one-line fields that allow date information to be\nentered in any format. The tooltip for this tab recommends\nentering the date as MM/DD/YYYY, but this is not enforced.\nThe format entered by the signer is retained. If you need a\nparticular date format enforced, DocuSign recommends using a\nText tab with a validation pattern and a validation message\nto enforce the format.\n"
        },
        "dateSigned": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that displays the date that the recipient signed the\ndocument.\n"
        },
        "dateStampProperties": {
            "type": "object",
            "properties": {
                "dateAreaHeight": {
                    "description": "",
                    "type": "string"
                },
                "dateAreaWidth": {
                    "description": "",
                    "type": "string"
                },
                "dateAreaX": {
                    "description": "",
                    "type": "string"
                },
                "dateAreaY": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle."
        },
        "decline": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "buttonText": {
                    "description": " Specifies the decline text displayed in the tab.",
                    "type": "string"
                },
                "buttonTextMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `buttonText` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "declineReason": {
                    "description": "The reason the recipient declined the document.",
                    "type": "string"
                },
                "declineReasonMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `declineReason` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that allows the recipient the option of declining an\nenvelope. If the recipient clicks the tab during the signing\nprocess, the envelope is voided.\n"
        },
        "delayedRouting": {
            "type": "object",
            "properties": {
                "resumeDate": {
                    "description": "An ISO 8601 formatted datetime string indicating the date and time that the envelope is (or was) scheduled to be sent to the recipients associated with the current workflow step or null if the envelope has not yet begun processing the current workflow step.",
                    "type": "string"
                },
                "rules": {
                    "description": "A list of envelope delay rules specified by the user indicating how and when the envelope should be sent in the future for the current workflow step and its associated recipients. Currently only 1 rule may be specified.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeDelayRule"
                    }
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                }
            }
        },
        "delegationInfo": {
            "type": "object",
            "properties": {
                "Email": {
                    "description": "",
                    "type": "string"
                },
                "Name": {
                    "description": "",
                    "type": "string"
                },
                "UserAuthorizationId": {
                    "description": "",
                    "type": "string"
                },
                "UserId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "diagnosticsSettingsInformation": {
            "type": "object",
            "properties": {
                "apiRequestLogging": {
                    "description": " When set to **true**, enables API request logging for the user. ",
                    "type": "string"
                },
                "apiRequestLogMaxEntries": {
                    "description": "Specifies the maximum number of API requests to log.",
                    "type": "string"
                },
                "apiRequestLogRemainingEntries": {
                    "description": "Indicates the remaining number of API requests that can be logged.",
                    "type": "string"
                }
            }
        },
        "directDebitProcessorInformation": {
            "type": "object",
            "properties": {
                "bankBranchCode": {
                    "description": "",
                    "type": "string"
                },
                "bankCheckDigit": {
                    "description": "",
                    "type": "string"
                },
                "bankCode": {
                    "description": "",
                    "type": "string"
                },
                "bankName": {
                    "description": "",
                    "type": "string"
                },
                "bankTransferAccountName": {
                    "description": "",
                    "type": "string"
                },
                "bankTransferAccountNumber": {
                    "description": "",
                    "type": "string"
                },
                "bankTransferType": {
                    "description": "",
                    "type": "string"
                },
                "country": {
                    "description": "Specifies the country associated with the address.",
                    "type": "string"
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "firstName": {
                    "description": "The user's first name. \nMaximum Length: 50 characters.",
                    "type": "string"
                },
                "iBAN": {
                    "description": "",
                    "type": "string"
                },
                "lastName": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Contains information about a bank that processes a customer's direct debit payments."
        },
        "dobInformationInput": {
            "description": "Complex type containing:\n\n* dateOfBirth\n* displayLevelCode\n* receiveInResponse",
            "type": "object",
            "properties": {
                "dateOfBirth": {
                    "description": "Specifies the recipient's date, month, and year of birth.",
                    "type": "string"
                },
                "displayLevelCode": {
                    "description": "Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay",
                    "type": "string"
                },
                "receiveInResponse": {
                    "description": "When set to **true**, the information needs to be returned in the response.",
                    "type": "string"
                }
            }
        },
        "docGenFormField": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "",
                    "type": "string"
                },
                "label": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "options": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docGenFormFieldOption"
                    }
                },
                "predefinedValidation": {
                    "description": "",
                    "type": "string"
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "rowValues": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docGenFormFieldRowValue"
                    }
                },
                "type": {
                    "description": "",
                    "type": "string"
                },
                "validation": {
                    "$ref": "#/definitions/docGenFormFieldValidation",
                    "description": ""
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                }
            }
        },
        "docGenFormFieldOption": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "",
                    "type": "string"
                },
                "label": {
                    "description": "",
                    "type": "string"
                },
                "selected": {
                    "description": "",
                    "type": "string"
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                }
            }
        },
        "docGenFormFieldRequest": {
            "type": "object",
            "properties": {
                "docGenFormFields": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docGenFormFields"
                    }
                }
            }
        },
        "docGenFormFieldResponse": {
            "type": "object",
            "properties": {
                "docGenFormFields": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docGenFormFields"
                    }
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                }
            }
        },
        "docGenFormFieldRowValue": {
            "type": "object",
            "properties": {
                "docGenFormFieldList": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docGenFormField"
                    }
                }
            }
        },
        "docGenFormFields": {
            "type": "object",
            "properties": {
                "docGenDocumentStatus": {
                    "description": "",
                    "type": "string"
                },
                "docGenErrors": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docGenSyntaxError"
                    }
                },
                "docGenFormFieldList": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docGenFormField"
                    }
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                }
            }
        },
        "docGenFormFieldValidation": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "description": "",
                    "type": "string"
                },
                "expression": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "docGenSyntaxError": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "description": "",
                    "type": "string"
                },
                "message": {
                    "description": "",
                    "type": "string"
                },
                "tagIdentifier": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "document": {
            "type": "object",
            "properties": {
                "applyAnchorTabs": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "assignTabsToRecipientId": {
                    "description": "",
                    "type": "string"
                },
                "authoritativeCopy": {
                    "description": "Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.",
                    "type": "boolean"
                },
                "display": {
                    "description": "",
                    "type": "string"
                },
                "docGenFormFields": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docGenFormField"
                    }
                },
                "documentBase64": {
                    "description": "The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.",
                    "type": "string"
                },
                "documentFields": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nameValue"
                    }
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "encryptedWithKeyManager": {
                    "description": "When set to **true**, the document is been already encrypted by the sender for use with the DocuSign Key Manager Security Appliance.\n ",
                    "type": "string"
                },
                "fileExtension": {
                    "description": "The file extension type of the document. If the document is not a PDF it is converted to a PDF.\n ",
                    "type": "string"
                },
                "fileFormatHint": {
                    "description": "",
                    "type": "string"
                },
                "htmlDefinition": {
                    "$ref": "#/definitions/documentHtmlDefinition",
                    "description": "Defines how to generate the responsive-formatted HTML for the document.\nSee [Responsive signing](/docs/esign-rest-api/esign101/concepts/responsive/)\nin the [eSignature concepts guide](/docs/esign-rest-api/esign101/concepts/)."
                },
                "includeInDownload": {
                    "description": "",
                    "type": "string"
                },
                "isDocGenDocument": {
                    "description": "",
                    "type": "string"
                },
                "matchBoxes": {
                    "description": "Matchboxes define areas in a document for document matching when you are creating envelopes. They are only used when you upload and edit a template. \n\nA matchbox consists of 5 elements:\n\n* pageNumber - The document page number  on which the matchbox will appear. \n* xPosition - The x position of the matchbox on a page. \n* yPosition - The y position of the matchbox on a page.\n* width - The width of the matchbox. \n* height - The height of the matchbox. \n",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/matchBox"
                    }
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "order": {
                    "description": "",
                    "type": "string"
                },
                "pages": {
                    "description": "",
                    "type": "string"
                },
                "password": {
                    "description": "",
                    "type": "string"
                },
                "pdfFormFieldOption": {
                    "description": "",
                    "type": "string"
                },
                "remoteUrl": {
                    "description": "The file id from the cloud storage service where the document is located. This information is returned using [ML:GET /folders] or [ML:/folders/{folderid}]. ",
                    "type": "string"
                },
                "signerMustAcknowledge": {
                    "description": "",
                    "type": "string"
                },
                "signerMustAcknowledgeUseAccountDefault": {
                    "description": "",
                    "type": "boolean"
                },
                "tabs": {
                    "$ref": "#/definitions/tabs",
                    "description": "A list of tabs, which are represented graphically as symbols on documents at the time of signing. Tabs show recipients where to sign, initial, or enter data. They may also display data to the recipients."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "transformPdfFields": {
                    "description": "When set to **true**, PDF form field data is transformed into document tab values when the PDF form field name matches the DocuSign custom tab tabLabel. The resulting PDF form data is also returned in the PDF meta data when requesting the document PDF. See the [ML:Transform PDF Fields] section for more information about how fields are transformed into DocuSign tabs. ",
                    "type": "string"
                },
                "uri": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "A document object."
        },
        "documentFieldsInformation": {
            "type": "object",
            "properties": {
                "documentFields": {
                    "description": "The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements: \n\n* name - A string that can be a maximum of 50 characters. \n* value - A string that can be a maximum of 200 characters.\n\n*IMPORTANT*: If you are using xml, the name/value pair is contained in a nameValue element. \n",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nameValue"
                    }
                }
            }
        },
        "documentHtmlCollapsibleDisplaySettings": {
            "type": "object",
            "properties": {
                "arrowClosed": {
                    "description": "",
                    "type": "string"
                },
                "arrowColor": {
                    "description": "",
                    "type": "string"
                },
                "arrowLocation": {
                    "description": "",
                    "type": "string"
                },
                "arrowOpen": {
                    "description": "",
                    "type": "string"
                },
                "arrowSize": {
                    "description": "",
                    "type": "string"
                },
                "arrowStyle": {
                    "description": "",
                    "type": "string"
                },
                "containerStyle": {
                    "description": "",
                    "type": "string"
                },
                "labelStyle": {
                    "description": "",
                    "type": "string"
                },
                "onlyArrowIsClickable": {
                    "description": "",
                    "type": "boolean"
                },
                "outerLabelAndArrowStyle": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Display settings for collapsible section."
        },
        "documentHtmlDefinition": {
            "type": "object",
            "properties": {
                "displayAnchorPrefix": {
                    "description": "",
                    "type": "string"
                },
                "displayAnchors": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentHtmlDisplayAnchor"
                    }
                },
                "displayOrder": {
                    "description": "",
                    "type": "string"
                },
                "displayPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "documentGuid": {
                    "description": "",
                    "type": "string"
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "headerLabel": {
                    "description": "",
                    "type": "string"
                },
                "maxScreenWidth": {
                    "description": "",
                    "type": "string"
                },
                "removeEmptyTags": {
                    "description": "",
                    "type": "string"
                },
                "showMobileOptimizedToggle": {
                    "description": "",
                    "type": "string"
                },
                "source": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Holds the properties that define how to generate the responsive-formatted HTML for the document.\nSee [Responsive signing](/docs/esign-rest-api/esign101/concepts/responsive/)\nin the [eSignature concepts guide](/docs/esign-rest-api/esign101/concepts/)."
        },
        "documentHtmlDefinitionOriginal": {
            "type": "object",
            "properties": {
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "htmlDefinition": {
                    "$ref": "#/definitions/documentHtmlDefinition",
                    "description": "Defines how to generate the responsive-formatted HTML for the document."
                }
            }
        },
        "documentHtmlDefinitionOriginals": {
            "type": "object",
            "properties": {
                "htmlDefinitions": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentHtmlDefinitionOriginal"
                    }
                }
            }
        },
        "documentHtmlDefinitions": {
            "type": "object",
            "properties": {
                "htmlDefinitions": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "documentHtmlDisplayAnchor": {
            "type": "object",
            "properties": {
                "caseSensitive": {
                    "description": "",
                    "type": "boolean"
                },
                "displaySettings": {
                    "$ref": "#/definitions/documentHtmlDisplaySettings",
                    "description": "This object defines how the HTML section inside the `startAnchor` and `endAnchor` displays."
                },
                "endAnchor": {
                    "description": "",
                    "type": "string"
                },
                "removeEndAnchor": {
                    "description": "",
                    "type": "boolean"
                },
                "removeStartAnchor": {
                    "description": "",
                    "type": "boolean"
                },
                "startAnchor": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "documentHtmlDisplaySettings": {
            "type": "object",
            "properties": {
                "cellStyle": {
                    "description": "",
                    "type": "string"
                },
                "collapsibleSettings": {
                    "$ref": "#/definitions/documentHtmlCollapsibleDisplaySettings",
                    "description": "This object defines the appearance and function of a collapsible section or item."
                },
                "display": {
                    "description": "",
                    "type": "string"
                },
                "displayLabel": {
                    "description": "",
                    "type": "string"
                },
                "displayOrder": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "displayPageNumber": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "hideLabelWhenOpened": {
                    "description": "",
                    "type": "boolean"
                },
                "inlineOuterStyle": {
                    "description": "",
                    "type": "string"
                },
                "labelWhenOpened": {
                    "description": "",
                    "type": "string"
                },
                "preLabel": {
                    "description": "",
                    "type": "string"
                },
                "scrollToTopWhenOpened": {
                    "description": "",
                    "type": "boolean"
                },
                "tableStyle": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "documentTemplate": {
            "type": "object",
            "properties": {
                "documentEndPage": {
                    "description": "",
                    "type": "string"
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentStartPage": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "templateId": {
                    "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                    "type": "string"
                }
            }
        },
        "documentTemplateList": {
            "type": "object",
            "properties": {
                "documentTemplates": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentTemplate"
                    }
                }
            }
        },
        "documentVisibility": {
            "type": "object",
            "properties": {
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "rights": {
                    "description": "",
                    "type": "string"
                },
                "visible": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object configures a recipient's read/write access to a document."
        },
        "documentVisibilityList": {
            "type": "object",
            "properties": {
                "documentVisibility": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentVisibility"
                    }
                }
            },
            "description": "A list of `documentVisibility` objects that specify whether documents are visible to recipients."
        },
        "downgradeBillingPlanInformation": {
            "type": "object",
            "properties": {
                "downgradeEventType": {
                    "description": "",
                    "type": "string"
                },
                "planInformation": {
                    "$ref": "#/definitions/planInformation",
                    "description": "An object used to identify the features and attributes of the account being created."
                },
                "promoCode": {
                    "description": "",
                    "type": "string"
                },
                "saleDiscount": {
                    "description": "",
                    "type": "string"
                },
                "saleDiscountPeriods": {
                    "description": "",
                    "type": "string"
                },
                "saleDiscountType": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "downgradePlanUpdateResponse": {
            "type": "object",
            "properties": {
                "accountPaymentMethod": {
                    "description": "",
                    "type": "string"
                },
                "discountApplied": {
                    "description": "",
                    "type": "string"
                },
                "downgradeEffectiveDate": {
                    "description": "",
                    "type": "string"
                },
                "downgradePaymentCycle": {
                    "description": "",
                    "type": "string"
                },
                "downgradePlanId": {
                    "description": "",
                    "type": "string"
                },
                "downgradePlanName": {
                    "description": "",
                    "type": "string"
                },
                "downgradeRequestStatus": {
                    "description": "",
                    "type": "string"
                },
                "message": {
                    "description": "",
                    "type": "string"
                },
                "productId": {
                    "description": "",
                    "type": "string"
                },
                "promoCode": {
                    "description": "",
                    "type": "string"
                },
                "saleDiscount": {
                    "description": "",
                    "type": "string"
                },
                "saleDiscountPeriods": {
                    "description": "",
                    "type": "string"
                },
                "saleDiscountType": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "downgradeRequestInformation": {
            "type": "object",
            "properties": {
                "downgradeRequestCreation": {
                    "description": "",
                    "type": "string"
                },
                "downgradeRequestProductId": {
                    "description": "",
                    "type": "string"
                },
                "downgradeRequestStatus": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "downgradRequestBillingInfoResponse": {
            "type": "object",
            "properties": {
                "downgradePlanInformation": {
                    "$ref": "#/definitions/downgradePlanUpdateResponse",
                    "description": ""
                },
                "paymentMethod": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "draw": {
            "type": "object",
            "properties": {
                "allowSignerUpload": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `shared` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "useBackgroundAsCanvas": {
                    "description": "",
                    "type": "string"
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that allows the recipient to add a free-form drawing to the document."
        },
        "editor": {
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "accessCodeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `accessCode` property is editable. This property is read-only."
                },
                "addAccessCodeToEmail": {
                    "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
                    "type": "string"
                },
                "additionalNotifications": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAdditionalNotification"
                    }
                },
                "allowSystemOverrideForLockedRecipient": {
                    "description": "",
                    "type": "string"
                },
                "autoRespondedReason": {
                    "description": "",
                    "type": "string"
                },
                "bulkSendV2Recipient": {
                    "description": "",
                    "type": "string"
                },
                "clientUserId": {
                    "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "completedCount": {
                    "description": "",
                    "type": "string"
                },
                "consentDetailsList": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/consentDetails"
                    }
                },
                "customFields": {
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "declinedDateTime": {
                    "description": "The date and time the recipient declined the document.",
                    "type": "string"
                },
                "declinedReason": {
                    "description": "The reason the recipient declined the document.",
                    "type": "string"
                },
                "deliveredDateTime": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethod": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethodMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "designatorId": {
                    "description": "",
                    "type": "string"
                },
                "designatorIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "documentVisibility": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentVisibility"
                    }
                },
                "email": {
                    "description": "Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "emailMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `email` property is editable. This property is read-only."
                },
                "emailNotification": {
                    "$ref": "#/definitions/recipientEmailNotification",
                    "description": "A complex type that contains information sets the language of the recipient's email information. \n\n**IMPORTANT**: If you enable email notification for one recipient, you must enable email notification for all recipients as it overrides the Envelope Subject and `EmailBlurb` property settings. "
                },
                "emailRecipientPostSigningURL": {
                    "description": "",
                    "type": "string"
                },
                "embeddedRecipientStartURL": {
                    "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "faxNumber": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "faxNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "firstName": {
                    "description": "The user's first name. \nMaximum Length: 50 characters.",
                    "type": "string"
                },
                "firstNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `firstName` property is editable. This property is read-only."
                },
                "fullName": {
                    "description": "",
                    "type": "string"
                },
                "fullNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "idCheckConfigurationName": {
                    "description": "Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.",
                    "type": "string"
                },
                "idCheckConfigurationNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `idCheckConfigurationName` property is editable. This property is read-only."
                },
                "idCheckInformationInput": {
                    "$ref": "#/definitions/idCheckInformationInput",
                    "description": "An object that contains input information related to a recipient ID check."
                },
                "identityVerification": {
                    "$ref": "#/definitions/recipientIdentityVerification",
                    "description": "Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address)."
                },
                "inheritEmailNotificationConfiguration": {
                    "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                    "type": "string"
                },
                "lastName": {
                    "description": "",
                    "type": "string"
                },
                "lastNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `lastName` property is editable. This property is read-only."
                },
                "lockedRecipientPhoneAuthEditable": {
                    "description": "",
                    "type": "string"
                },
                "lockedRecipientSmsEditable": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "legal name of the recipient.\n\nMaximum Length: 100 characters.",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "note": {
                    "description": "Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.",
                    "type": "string"
                },
                "noteMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `note` property is editable. This property is read-only."
                },
                "phoneAuthentication": {
                    "$ref": "#/definitions/recipientPhoneAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:\n\n* `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.\n* `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.\n* `recordVoicePrint`: Reserved for DocuSign.\n* `validateRecipProvidedNumber`: Reserved for DocuSign.\n\n"
                },
                "phoneNumber": {
                    "$ref": "#/definitions/recipientPhoneNumber",
                    "description": "Describes the recipient phone number."
                },
                "recipientAttachments": {
                    "description": "Reserved:",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAttachment"
                    }
                },
                "recipientAuthenticationStatus": {
                    "$ref": "#/definitions/authenticationStatus",
                    "description": "Information about the recipient's authentication status. This property is read-only."
                },
                "recipientFeatureMetadata": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featureAvailableMetadata"
                    }
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientType": {
                    "description": "",
                    "type": "string"
                },
                "recipientTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientType` property is editable. This property is read-only."
                },
                "requireIdLookup": {
                    "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                    "type": "string"
                },
                "requireIdLookupMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireIdLookup` property is editable. This property is read-only."
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "routingOrder": {
                    "description": "Specifies the routing order of the recipient in the envelope. ",
                    "type": "string"
                },
                "routingOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `routingOrder` property is editable. This property is read-only."
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "signedDateTime": {
                    "description": "Reserved: For DocuSign use only. ",
                    "type": "string"
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                },
                "signingGroupIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signingGroupId` property is editable. This property is read-only."
                },
                "signingGroupName": {
                    "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
                    "type": "string"
                },
                "signingGroupUsers": {
                    "description": "A complex type that contains information about users in the signing group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                },
                "smsAuthentication": {
                    "$ref": "#/definitions/recipientSMSAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `SMS Auth $`, you use this complex type to provide the recipient authentication method details. It contains the element `senderProvidedNumbers`, which is an array of phone numbers that the recipient can use for SMS text authentication. \n\n"
                },
                "socialAuthentications": {
                    "description": " Lists the social ID type that can be used for recipient authentication.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/socialAuthentication"
                    }
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusCode": {
                    "description": "",
                    "type": "string"
                },
                "suppressEmails": {
                    "description": "",
                    "type": "string"
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "totalTabCount": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "A complex type defining the management and access rights of a recipient assigned as an editor on the envelope. Editors have the same management and access rights for the envelope as the sender. They can make changes to the envelope as if they were using the Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and text tabs for the remaining recipients."
        },
        "email": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "concealValueOnDocumentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `concealValueOnDocument` property is editable."
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "disableAutoSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `disableAutoSize` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "maxLength": {
                    "description": "An optional value that describes the maximum length of the property when the property is a string.",
                    "type": "string"
                },
                "maxLengthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `maxLength` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "requireAll": {
                    "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
                    "type": "string"
                },
                "requireAllMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireAll` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "requireInitialOnSharedChange": {
                    "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
                    "type": "string"
                },
                "requireInitialOnSharedChangeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireInitialOnSharedChange` property is editable."
                },
                "senderRequired": {
                    "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                    "type": "string"
                },
                "senderRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `senderRequired` property is editable."
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `shared` property is editable."
                },
                "shareToRecipients": {
                    "description": "",
                    "type": "string"
                },
                "shareToRecipientsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "validationMessage": {
                    "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                    "type": "string"
                },
                "validationMessageMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `validationMessage` property is editable."
                },
                "validationPattern": {
                    "description": "A regular expression used to validate input for the tab.",
                    "type": "string"
                },
                "validationPatternMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `validationPattern` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that allows the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n"
        },
        "emailAddress": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that displays the recipient's email as entered in the\nrecipient information.\n"
        },
        "emailSettings": {
            "description": "A complex element that allows  the sender to override some envelope email setting information. This can be used to override the Reply To email address and name associated with the envelope and to override the BCC email addresses to which an envelope is sent. \n\nWhen the emailSettings information is used for an envelope, it only applies to that envelope. \n\n**IMPORTANT**: The emailSettings information is not returned in the GET for envelope status. Use GET /email_settings to return information about the emailSettings. \n\nEmailSettings consists of: \n\n* replyEmailAddressOverride - The Reply To email used for the envelope. DocuSign will verify that a correct email format is used, but does not verify that the email is active. Maximum Length: 100 characters.\n* replyEmailNameOverride - The name associated with the Reply To email address. Maximum Length: 100 characters.\n* bccEmailAddresses - An array of up to five email addresses to which the envelope is sent to as a BCC email. Only users with canManageAccount setting set to true can use this option. \nDocuSign verifies that the email format is correct, but does not verify that the email is active. Using this overrides the BCC for Email Archive information setting for this envelope. Maximum Length: 100 characters.\n*Example*: if your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.",
            "type": "object",
            "properties": {
                "bccEmailAddresses": {
                    "description": "A list of email addresses that receive a copy of all email communications for an envelope. You can use this for archiving purposes.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bccEmailAddress"
                    }
                },
                "replyEmailAddressOverride": {
                    "description": "",
                    "type": "string"
                },
                "replyEmailNameOverride": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "eNoteConfiguration": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "description": "",
                    "type": "string"
                },
                "connectConfigured": {
                    "description": "",
                    "type": "string"
                },
                "eNoteConfigured": {
                    "description": "",
                    "type": "string"
                },
                "organization": {
                    "description": "",
                    "type": "string"
                },
                "password": {
                    "description": "",
                    "type": "string"
                },
                "userName": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object contains information used to configure [eNote](https://www.docusign.com/products/enote) functionality. To use eNote, the Allow eNote for eOriginal account plan item must be on, and the Connect configuration for eOriginal must be set correctly."
        },
        "envelope": {
            "type": "object",
            "properties": {
                "accessControlListBase64": {
                    "description": "",
                    "type": "string"
                },
                "allowComments": {
                    "description": "",
                    "type": "string"
                },
                "allowMarkup": {
                    "description": "When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this",
                    "type": "string"
                },
                "allowReassign": {
                    "description": "When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.",
                    "type": "string"
                },
                "allowViewHistory": {
                    "description": "",
                    "type": "string"
                },
                "anySigner": {
                    "description": "",
                    "type": "string"
                },
                "asynchronous": {
                    "description": "When set to **true**, the envelope is queued for processing and the value of the `status` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.",
                    "type": "string"
                },
                "attachmentsUri": {
                    "description": "",
                    "type": "string"
                },
                "authoritativeCopy": {
                    "description": "Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.",
                    "type": "string"
                },
                "authoritativeCopyDefault": {
                    "description": "",
                    "type": "string"
                },
                "autoNavigation": {
                    "description": "",
                    "type": "string"
                },
                "brandId": {
                    "description": "",
                    "type": "string"
                },
                "brandLock": {
                    "description": "",
                    "type": "string"
                },
                "burnDefaultTabData": {
                    "description": "",
                    "type": "string"
                },
                "certificateUri": {
                    "description": "Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.",
                    "type": "string"
                },
                "completedDateTime": {
                    "description": "Specifies the date and time this item was completed.",
                    "type": "string"
                },
                "copyRecipientData": {
                    "description": "",
                    "type": "string"
                },
                "createdDateTime": {
                    "description": "Indicates the date and time the item was created.",
                    "type": "string"
                },
                "customFields": {
                    "$ref": "#/definitions/customFields",
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters."
                },
                "customFieldsUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the custom fields.",
                    "type": "string"
                },
                "declinedDateTime": {
                    "description": "The date and time the recipient declined the document.",
                    "type": "string"
                },
                "deletedDateTime": {
                    "description": "Specifies the data and time the item was deleted.",
                    "type": "string"
                },
                "deliveredDateTime": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "disableResponsiveDocument": {
                    "description": "",
                    "type": "string"
                },
                "documentBase64": {
                    "description": "",
                    "type": "string"
                },
                "documentsCombinedUri": {
                    "description": "",
                    "type": "string"
                },
                "documentsUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the documents.",
                    "type": "string"
                },
                "emailBlurb": {
                    "description": "This is the same as the email body. If specified it is included in email body for all envelope recipients.",
                    "type": "string"
                },
                "emailSettings": {
                    "$ref": "#/definitions/emailSettings",
                    "description": "A complex type that contains email settings."
                },
                "emailSubject": {
                    "description": "Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.",
                    "type": "string"
                },
                "enableWetSign": {
                    "description": "When set to **true**, the signer is allowed to print the document and sign it on paper.",
                    "type": "string"
                },
                "enforceSignerVisibility": {
                    "description": "When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\n\nYour account must have Document Visibility enabled to use this.",
                    "type": "string"
                },
                "envelopeAttachments": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/attachment"
                    }
                },
                "envelopeCustomMetadata": {
                    "$ref": "#/definitions/envelopeCustomMetadata",
                    "description": ""
                },
                "envelopeDocuments": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeDocument"
                    }
                },
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "envelopeIdStamping": {
                    "description": "When set to **true**, Envelope ID Stamping is enabled.",
                    "type": "string"
                },
                "envelopeLocation": {
                    "description": "",
                    "type": "string"
                },
                "envelopeMetadata": {
                    "$ref": "#/definitions/envelopeMetadata",
                    "description": "Provides information about the features and services that are enabled for the envelope, including the Correct feature, the Advanced Correct feature, and DocuSign eNotary service."
                },
                "envelopeUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.",
                    "type": "string"
                },
                "expireAfter": {
                    "description": "",
                    "type": "string"
                },
                "expireDateTime": {
                    "description": "",
                    "type": "string"
                },
                "expireEnabled": {
                    "description": "",
                    "type": "string"
                },
                "externalEnvelopeId": {
                    "description": "",
                    "type": "string"
                },
                "folders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/folder"
                    }
                },
                "hasComments": {
                    "description": "",
                    "type": "string"
                },
                "hasFormDataChanged": {
                    "description": "",
                    "type": "string"
                },
                "hasWavFile": {
                    "description": "",
                    "type": "string"
                },
                "holder": {
                    "description": "",
                    "type": "string"
                },
                "initialSentDateTime": {
                    "description": "",
                    "type": "string"
                },
                "is21CFRPart11": {
                    "description": "When set to **true**, indicates that this module is enabled on the account.",
                    "type": "string"
                },
                "isDynamicEnvelope": {
                    "description": "",
                    "type": "string"
                },
                "isSignatureProviderEnvelope": {
                    "description": "",
                    "type": "string"
                },
                "lastModifiedDateTime": {
                    "description": "The date and time the item was last modified.",
                    "type": "string"
                },
                "location": {
                    "description": "",
                    "type": "string"
                },
                "lockInformation": {
                    "$ref": "#/definitions/lockInformation",
                    "description": "Provides lock information about an envelope that a user has locked."
                },
                "messageLock": {
                    "description": "When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to true**** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.",
                    "type": "string"
                },
                "notification": {
                    "$ref": "#/definitions/notification",
                    "description": ""
                },
                "notificationUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the notifications.",
                    "type": "string"
                },
                "powerForm": {
                    "$ref": "#/definitions/powerForm",
                    "description": "Information about any PowerForms that are included in the envelope."
                },
                "purgeCompletedDate": {
                    "description": "",
                    "type": "string"
                },
                "purgeRequestDate": {
                    "description": "",
                    "type": "string"
                },
                "purgeState": {
                    "description": "",
                    "type": "string"
                },
                "recipients": {
                    "$ref": "#/definitions/recipients",
                    "description": "An array of powerform recipients."
                },
                "recipientsLock": {
                    "description": "When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.",
                    "type": "string"
                },
                "recipientsUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
                    "type": "string"
                },
                "sender": {
                    "$ref": "#/definitions/userInfo",
                    "description": "Information about the sender of the envelope."
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "signerCanSignOnMobile": {
                    "description": "",
                    "type": "string"
                },
                "signingLocation": {
                    "description": "Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n*created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusChangedDateTime": {
                    "description": "The data and time the status changed.",
                    "type": "string"
                },
                "statusDateTime": {
                    "description": "",
                    "type": "string"
                },
                "templatesUri": {
                    "description": "Contains a URI for an endpoint which you can use to retrieve the templates.",
                    "type": "string"
                },
                "transactionId": {
                    "description": " Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.",
                    "type": "string"
                },
                "useDisclosure": {
                    "description": "When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.",
                    "type": "string"
                },
                "uSigState": {
                    "description": "",
                    "type": "string"
                },
                "voidedDateTime": {
                    "description": "The date and time the envelope or template was voided.",
                    "type": "string"
                },
                "voidedReason": {
                    "description": "The reason the envelope or template was voided.",
                    "type": "string"
                },
                "workflow": {
                    "$ref": "#/definitions/workflow",
                    "description": ""
                }
            }
        },
        "envelopeAttachment": {
            "type": "object",
            "properties": {
                "accessControl": {
                    "description": "",
                    "type": "string"
                },
                "attachmentId": {
                    "description": "",
                    "type": "string"
                },
                "attachmentType": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "label": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "envelopeAttachmentsRequest": {
            "type": "object",
            "properties": {
                "attachments": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/attachment"
                    }
                }
            }
        },
        "envelopeAttachmentsResult": {
            "type": "object",
            "properties": {
                "attachments": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeAttachment"
                    }
                }
            }
        },
        "envelopeAuditEvent": {
            "type": "object",
            "properties": {
                "eventFields": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nameValue"
                    }
                }
            }
        },
        "envelopeAuditEventResponse": {
            "type": "object",
            "properties": {
                "auditEvents": {
                    "description": "Reserved: TBD",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeAuditEvent"
                    }
                }
            }
        },
        "envelopeCustomMetadata": {
            "type": "object",
            "properties": {
                "envelopeCustomMetadataDetails": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nameValue"
                    }
                }
            }
        },
        "envelopeDefinition": {
            "type": "object",
            "properties": {
                "accessControlListBase64": {
                    "description": "",
                    "type": "string"
                },
                "accessibility": {
                    "description": "Sets the document reading zones for screen reader applications.  This element can only be used if Document Accessibility is enabled for the account. \n\n###### Note: This information is currently generated from the DocuSign web console by setting the reading zones when creating a template, exporting the reading zone string information, and adding it here.",
                    "type": "string"
                },
                "allowComments": {
                    "description": "",
                    "type": "string"
                },
                "allowMarkup": {
                    "description": "When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this",
                    "type": "string"
                },
                "allowReassign": {
                    "description": "When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.",
                    "type": "string"
                },
                "allowRecipientRecursion": {
                    "description": "When set to **true**, this enables the Recursive Recipients feature and allows a recipient to appear more than once in the routing order.",
                    "type": "string"
                },
                "allowViewHistory": {
                    "description": "",
                    "type": "string"
                },
                "anySigner": {
                    "description": "",
                    "type": "string"
                },
                "asynchronous": {
                    "description": "When set to **true**, the envelope is queued for processing and the value of the `status` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.",
                    "type": "string"
                },
                "attachments": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/attachment"
                    }
                },
                "attachmentsUri": {
                    "description": "",
                    "type": "string"
                },
                "authoritativeCopy": {
                    "description": "Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.",
                    "type": "string"
                },
                "authoritativeCopyDefault": {
                    "description": "",
                    "type": "string"
                },
                "autoNavigation": {
                    "description": "",
                    "type": "string"
                },
                "brandId": {
                    "description": "This sets the brand profile format used for the envelope. The value in the string is the brandId associated with the profile. Account branding must be enabled for the account to use this option.",
                    "type": "string"
                },
                "brandLock": {
                    "description": "",
                    "type": "string"
                },
                "burnDefaultTabData": {
                    "description": "",
                    "type": "string"
                },
                "certificateUri": {
                    "description": "Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.",
                    "type": "string"
                },
                "completedDateTime": {
                    "description": "Specifies the date and time this item was completed.",
                    "type": "string"
                },
                "compositeTemplates": {
                    "description": "A complex type that can be added to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/compositeTemplate"
                    }
                },
                "copyRecipientData": {
                    "description": "",
                    "type": "string"
                },
                "createdDateTime": {
                    "description": "Indicates the date and time the item was created.",
                    "type": "string"
                },
                "customFields": {
                    "$ref": "#/definitions/customFields",
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters."
                },
                "customFieldsUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the custom fields.",
                    "type": "string"
                },
                "declinedDateTime": {
                    "description": "The date and time the recipient declined the document.",
                    "type": "string"
                },
                "deletedDateTime": {
                    "description": "Specifies the data and time the item was deleted.",
                    "type": "string"
                },
                "deliveredDateTime": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "disableResponsiveDocument": {
                    "description": "",
                    "type": "string"
                },
                "documentBase64": {
                    "description": "",
                    "type": "string"
                },
                "documents": {
                    "description": "Complex element contains the details on the documents in the envelope.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/document"
                    }
                },
                "documentsCombinedUri": {
                    "description": "",
                    "type": "string"
                },
                "documentsUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the documents.",
                    "type": "string"
                },
                "emailBlurb": {
                    "description": "Optional element. This is the same as the email body. If specified it is included in email body for all envelope recipients. This can be a maximum of 10000 characters",
                    "type": "string"
                },
                "emailSettings": {
                    "$ref": "#/definitions/emailSettings",
                    "description": "This optional complex element enables the sender to override some envelope email setting information. This can be used to override the Reply To email address and name associated with the envelope, as well as the BCC email addresses to which an envelope is sent. When the `emailSettings` information is used for an envelope, it only applies to that envelope.\n\n**Important Note:** The `emailSettings` information is not returned in the GET method for envelope status. Use GET /email_settings to return information about the emailSettings."
                },
                "emailSubject": {
                    "description": "Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.",
                    "type": "string"
                },
                "enableWetSign": {
                    "description": "When set to **true**, the signer is allowed to print the document and sign it on paper.",
                    "type": "string"
                },
                "enforceSignerVisibility": {
                    "description": "When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\n\nYour account must have Document Visibility enabled to use this.",
                    "type": "string"
                },
                "envelopeAttachments": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/attachment"
                    }
                },
                "envelopeCustomMetadata": {
                    "$ref": "#/definitions/envelopeCustomMetadata",
                    "description": ""
                },
                "envelopeDocuments": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeDocument"
                    }
                },
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "envelopeIdStamping": {
                    "description": "When set to **true**, Envelope ID Stamping is enabled.",
                    "type": "string"
                },
                "envelopeLocation": {
                    "description": "",
                    "type": "string"
                },
                "envelopeMetadata": {
                    "$ref": "#/definitions/envelopeMetadata",
                    "description": "Metadata about the features that are enabled for the envelope."
                },
                "envelopeUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.",
                    "type": "string"
                },
                "eventNotification": {
                    "$ref": "#/definitions/eventNotification",
                    "description": "This optional object is used to register a webhook that will receive status changes for this envelope."
                },
                "eventNotifications": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/eventNotification"
                    }
                },
                "expireAfter": {
                    "description": "",
                    "type": "string"
                },
                "expireDateTime": {
                    "description": "",
                    "type": "string"
                },
                "expireEnabled": {
                    "description": "",
                    "type": "string"
                },
                "externalEnvelopeId": {
                    "description": "",
                    "type": "string"
                },
                "folders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/folder"
                    }
                },
                "hasComments": {
                    "description": "",
                    "type": "string"
                },
                "hasFormDataChanged": {
                    "description": "",
                    "type": "string"
                },
                "hasWavFile": {
                    "description": "",
                    "type": "string"
                },
                "holder": {
                    "description": "",
                    "type": "string"
                },
                "initialSentDateTime": {
                    "description": "",
                    "type": "string"
                },
                "is21CFRPart11": {
                    "description": "When set to **true**, indicates that this module is enabled on the account.",
                    "type": "string"
                },
                "isDynamicEnvelope": {
                    "description": "",
                    "type": "string"
                },
                "isSignatureProviderEnvelope": {
                    "description": "",
                    "type": "string"
                },
                "lastModifiedDateTime": {
                    "description": "The date and time the item was last modified.",
                    "type": "string"
                },
                "location": {
                    "description": "",
                    "type": "string"
                },
                "lockInformation": {
                    "$ref": "#/definitions/lockInformation",
                    "description": "Provides lock information about an envelope that a user has locked."
                },
                "messageLock": {
                    "description": "When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to true**** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.",
                    "type": "string"
                },
                "notification": {
                    "$ref": "#/definitions/notification",
                    "description": "An optional complex element that specifies the notification options for the envelope."
                },
                "notificationUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the notifications.",
                    "type": "string"
                },
                "password": {
                    "description": "",
                    "type": "string"
                },
                "powerForm": {
                    "$ref": "#/definitions/powerForm",
                    "description": "Information about any PowerForms that are included in the envelope."
                },
                "purgeCompletedDate": {
                    "description": "",
                    "type": "string"
                },
                "purgeRequestDate": {
                    "description": "",
                    "type": "string"
                },
                "purgeState": {
                    "description": "Initiates a purge request. Valid values are:\n* documents_queued: Places envelope documents in the purge queue.\n* documents_and_metadata_queued: Places envelope documents and metadata in the purge queue.\n",
                    "type": "string"
                },
                "recipients": {
                    "$ref": "#/definitions/recipients",
                    "description": "An array of powerform recipients."
                },
                "recipientsLock": {
                    "description": "When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.",
                    "type": "string"
                },
                "recipientsUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
                    "type": "string"
                },
                "recipientViewRequest": {
                    "$ref": "#/definitions/recipientViewRequest",
                    "description": ""
                },
                "sender": {
                    "$ref": "#/definitions/userInfo",
                    "description": "Information about the sender of the envelope."
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "signerCanSignOnMobile": {
                    "description": "",
                    "type": "string"
                },
                "signingLocation": {
                    "description": "Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusChangedDateTime": {
                    "description": "The data and time the status changed.",
                    "type": "string"
                },
                "statusDateTime": {
                    "description": "",
                    "type": "string"
                },
                "templateId": {
                    "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                    "type": "string"
                },
                "templateRoles": {
                    "description": "Specifies the template recipients. Each roleName in the template must have a recipient assigned to it. This is made up elements:\n\n* email - The recipient's email address.\n* name - The recipient's name.\n* roleName - The template roleName associated with the recipient.\n* clientUserId - Optional, this sets if the signer is This specifies if the recipient is embedded or remote. If the clientUserId is not null then the recipient is embedded. Note that if a ClientUserId is used and the account settings SignerMustHaveAccount or SignerMustLoginToSign are true, an error is generated on sending.\n* defaultRecipient - Optional, When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.\n* routingOrder - This specifies the routing order of the recipient in the envelope.\n* accessCode - This optional element specifies the access code a recipient has to enter to validate the identity. This can be a maximum of 50 characters.\n* inPersonSignerName - Optional, if the template role is an in person signer, this is the full legal name of the signer. This can be a maximum of 100 characters.\n* emailNotification - This is an optional complex element that has a role specific emailSubject, emailBody, and language. It follows the same format as the emailNotification node for Recipients.\n* tabs - This allows the tab values to be specified for matching to tabs in the template.\n",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/templateRole"
                    }
                },
                "templatesUri": {
                    "description": "Contains a URI for an endpoint which you can use to retrieve the templates.",
                    "type": "string"
                },
                "transactionId": {
                    "description": " Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.",
                    "type": "string"
                },
                "useDisclosure": {
                    "description": "When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.",
                    "type": "string"
                },
                "uSigState": {
                    "description": "",
                    "type": "string"
                },
                "voidedDateTime": {
                    "description": "The date and time the envelope or template was voided.",
                    "type": "string"
                },
                "voidedReason": {
                    "description": "The reason the envelope or template was voided.",
                    "type": "string"
                },
                "workflow": {
                    "$ref": "#/definitions/workflow",
                    "description": "Describes the workflow for this envelope."
                }
            },
            "description": "Envelope object definition."
        },
        "envelopeDelayRule": {
            "type": "object",
            "properties": {
                "delay": {
                    "description": "A string timespan duration represented as d.hh:mm:ss where the d component is days, hh is hours measured on a 24-hour clock, mm is minutes and ss is seconds, indicating the expected delay for this envelope rule. The maximum delay is 30 days.",
                    "type": "string"
                },
                "resumeDate": {
                    "description": "A string formatted as an ISO 8601 DATETIME with TimeZone specified, indicating the expected resumeDate for this envelope rule. The specified datetime must occur in the future relative to the current UTC time hen the request is made. The maximum resumeDate must not exceed 30 days in the future.",
                    "type": "string"
                }
            },
            "description": "An envelope delay rule is a rule which determines how the envelope should be delayed either for sending or routing. It can expressed as either a delay in some number of days, hours, minutes and seconds or an exact resumeDate in the future."
        },
        "envelopeDocument": {
            "type": "object",
            "properties": {
                "addedRecipientIds": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "attachmentTabId": {
                    "description": "",
                    "type": "string"
                },
                "authoritativeCopy": {
                    "description": "Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.",
                    "type": "string"
                },
                "authoritativeCopyMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates if the sender can edit the `authoritativeCopy` property. Not applicable for template documents."
                },
                "availableDocumentTypes": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signatureType"
                    }
                },
                "containsPdfFormFields": {
                    "description": "",
                    "type": "string"
                },
                "display": {
                    "description": "",
                    "type": "string"
                },
                "displayMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates if the sender can edit the `display` property. Not applicable for template documents."
                },
                "docGenDocumentStatus": {
                    "description": "",
                    "type": "string"
                },
                "docGenErrors": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docGenSyntaxError"
                    }
                },
                "docGenFormFields": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docGenFormField"
                    }
                },
                "documentBase64": {
                    "description": "",
                    "type": "string"
                },
                "documentFields": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nameValue"
                    }
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "includeInDownload": {
                    "description": "",
                    "type": "string"
                },
                "includeInDownloadMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates if the sender can edit the `includeInDownload` property. Not applicable for template documents."
                },
                "isAceGenDocument": {
                    "description": "",
                    "type": "string"
                },
                "isDocGenDocument": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates if the sender can edit the `name` property. Not applicable for template documents."
                },
                "order": {
                    "description": "",
                    "type": "string"
                },
                "pages": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/page"
                    }
                },
                "signerMustAcknowledge": {
                    "description": "",
                    "type": "string"
                },
                "signerMustAcknowledgeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates if the sender can edit the `signerMustAcknowledge` property. Not applicable for template documents."
                },
                "sizeBytes": {
                    "description": "",
                    "type": "string"
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "type": {
                    "description": "",
                    "type": "string"
                },
                "uri": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object contains details about the envelope document."
        },
        "envelopeDocumentsResult": {
            "type": "object",
            "properties": {
                "envelopeDocuments": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeDocument"
                    }
                },
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                }
            }
        },
        "envelopeEvent": {
            "type": "object",
            "properties": {
                "envelopeEventStatusCode": {
                    "description": "he envelope status, this can be Sent, Delivered, Completed, Declined, or Voided.",
                    "type": "string"
                },
                "includeDocuments": {
                    "description": "When set to **true**, the PDF documents are included in the message along with the updated XML. ",
                    "type": "string"
                }
            },
            "description": "For which envelope events should your webhook be called?"
        },
        "envelopeFormData": {
            "type": "object",
            "properties": {
                "emailSubject": {
                    "description": "Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.",
                    "type": "string"
                },
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "formData": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/formDataItem"
                    }
                },
                "prefillFormData": {
                    "$ref": "#/definitions/prefillFormData",
                    "description": "An array of `formDataItem` objects for [prefill tabs](/docs/esign-rest-api/reference/envelopes/envelopedocumenttabs/create/#definition__tabs_prefilltabs). "
                },
                "recipientFormData": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientFormData"
                    }
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                }
            },
            "description": "Describes the form data of the envelope."
        },
        "envelopeId": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that displays the envelope ID. Recipients cannot enter\nor change the information in this tab.\n"
        },
        "envelopeIdsRequest": {
            "type": "object",
            "properties": {
                "envelopeIds": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "transactionIds": {
                    "description": " A list of transaction Id's used to determining the status of envelopes sent asynchronously. See **transactionId** property on envelopes.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "description": "Lists of envelope and transaction IDs to use in the results.\n\nIf you use this request body with Envelopes: listStatus,\nyou must set one or both of the following query parameters\nto the special value `request_body`:\n\n- `envelope_ids=request_body`\n- `transaction_ids=request_body`\n"
        },
        "envelopeMetadata": {
            "type": "object",
            "properties": {
                "allowAdvancedCorrect": {
                    "description": "",
                    "type": "string"
                },
                "allowCorrect": {
                    "description": "",
                    "type": "string"
                },
                "enableSignWithNotary": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "envelopeNotificationRequest": {
            "type": "object",
            "properties": {
                "expirations": {
                    "$ref": "#/definitions/expirations",
                    "description": "A complex element that specifies the expiration settings for the envelope."
                },
                "reminders": {
                    "$ref": "#/definitions/reminders",
                    "description": "A complex element that specifies reminder settings for the envelope."
                },
                "useAccountDefaults": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "A complex element that specifies the notification settings for the envelope."
        },
        "envelopePublishTransaction": {
            "type": "object",
            "properties": {
                "applyConnectSettings": {
                    "description": "",
                    "type": "string"
                },
                "envelopeCount": {
                    "description": "",
                    "type": "string"
                },
                "envelopeLevelErrorRollups": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopePublishTransactionErrorRollup"
                    }
                },
                "envelopePublishTransactionId": {
                    "description": "",
                    "type": "string"
                },
                "errorCount": {
                    "description": "",
                    "type": "string"
                },
                "fileLevelErrors": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "noActionRequiredEnvelopeCount": {
                    "description": "",
                    "type": "string"
                },
                "processedEnvelopeCount": {
                    "description": "",
                    "type": "string"
                },
                "processingStatus": {
                    "description": "",
                    "type": "string"
                },
                "resultsUri": {
                    "description": "",
                    "type": "string"
                },
                "submissionDate": {
                    "description": "",
                    "type": "string"
                },
                "submittedByUserInfo": {
                    "$ref": "#/definitions/userInfo",
                    "description": ""
                },
                "submittedForPublishingEnvelopeCount": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "envelopePublishTransactionErrorRollup": {
            "type": "object",
            "properties": {
                "count": {
                    "description": "",
                    "type": "string"
                },
                "errorType": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "envelopePurgeConfiguration": {
            "type": "object",
            "properties": {
                "purgeEnvelopes": {
                    "description": "",
                    "type": "string"
                },
                "redactPII": {
                    "description": "",
                    "type": "string"
                },
                "removeTabsAndEnvelopeAttachments": {
                    "description": "",
                    "type": "string"
                },
                "retentionDays": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Contains information about the current envelope purge configuration for an account, which enables account administrators to purge documents from completed and voided envelopes after a set number of days (`retentionDays`). "
        },
        "envelopesInformation": {
            "type": "object",
            "properties": {
                "continuationToken": {
                    "description": "",
                    "type": "string"
                },
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "envelopes": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelope"
                    }
                },
                "envelopeSearchSource": {
                    "description": "",
                    "type": "string"
                },
                "envelopeTransactionStatuses": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeTransactionStatus"
                    }
                },
                "folders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/folder"
                    }
                },
                "lastQueriedDateTime": {
                    "description": "",
                    "type": "string"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            },
            "description": "Result set for the Envelopes: listStatusChanges method"
        },
        "envelopeSummary": {
            "type": "object",
            "properties": {
                "bulkEnvelopeStatus": {
                    "$ref": "#/definitions/bulkEnvelopeStatus",
                    "description": "An object that describes the status of the bulk send envelopes."
                },
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "recipientSigningUri": {
                    "description": "",
                    "type": "string"
                },
                "recipientSigningUriError": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusDateTime": {
                    "description": "The DateTime that the envelope changed status (i.e. was created or sent.)",
                    "type": "string"
                },
                "uri": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": " This object describes an envelope."
        },
        "envelopeTemplate": {
            "type": "object",
            "properties": {
                "accessControlListBase64": {
                    "description": "",
                    "type": "string"
                },
                "allowComments": {
                    "description": "",
                    "type": "string"
                },
                "allowMarkup": {
                    "description": "When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this",
                    "type": "string"
                },
                "allowReassign": {
                    "description": "When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.",
                    "type": "string"
                },
                "allowViewHistory": {
                    "description": "",
                    "type": "string"
                },
                "anySigner": {
                    "description": "",
                    "type": "string"
                },
                "asynchronous": {
                    "description": "When set to **true**, the envelope is queued for processing and the value of the `status` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.",
                    "type": "string"
                },
                "attachmentsUri": {
                    "description": "",
                    "type": "string"
                },
                "authoritativeCopy": {
                    "description": "Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.",
                    "type": "string"
                },
                "authoritativeCopyDefault": {
                    "description": "",
                    "type": "string"
                },
                "autoMatch": {
                    "description": "",
                    "type": "string"
                },
                "autoMatchSpecifiedByUser": {
                    "description": "",
                    "type": "string"
                },
                "autoNavigation": {
                    "description": "",
                    "type": "string"
                },
                "brandId": {
                    "description": "",
                    "type": "string"
                },
                "brandLock": {
                    "description": "",
                    "type": "string"
                },
                "burnDefaultTabData": {
                    "description": "",
                    "type": "string"
                },
                "certificateUri": {
                    "description": "Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.",
                    "type": "string"
                },
                "completedDateTime": {
                    "description": "Specifies the date and time this item was completed.",
                    "type": "string"
                },
                "copyRecipientData": {
                    "description": "",
                    "type": "string"
                },
                "created": {
                    "description": "",
                    "type": "string"
                },
                "createdDateTime": {
                    "description": "Indicates the date and time the item was created.",
                    "type": "string"
                },
                "customFields": {
                    "$ref": "#/definitions/customFields",
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters."
                },
                "customFieldsUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the custom fields.",
                    "type": "string"
                },
                "declinedDateTime": {
                    "description": "The date and time the recipient declined the document.",
                    "type": "string"
                },
                "deletedDateTime": {
                    "description": "Specifies the data and time the item was deleted.",
                    "type": "string"
                },
                "deliveredDateTime": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "description": {
                    "description": "",
                    "type": "string"
                },
                "disableResponsiveDocument": {
                    "description": "",
                    "type": "string"
                },
                "documentBase64": {
                    "description": "",
                    "type": "string"
                },
                "documents": {
                    "description": "Complex element contains the details on the documents in the envelope.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/document"
                    }
                },
                "documentsCombinedUri": {
                    "description": "",
                    "type": "string"
                },
                "documentsUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the documents.",
                    "type": "string"
                },
                "emailBlurb": {
                    "description": "",
                    "type": "string"
                },
                "emailSettings": {
                    "$ref": "#/definitions/emailSettings",
                    "description": "A complex type that contains email settings."
                },
                "emailSubject": {
                    "description": "Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.",
                    "type": "string"
                },
                "enableWetSign": {
                    "description": "When set to **true**, the signer is allowed to print the document and sign it on paper.",
                    "type": "string"
                },
                "enforceSignerVisibility": {
                    "description": "When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\n\nYour account must have Document Visibility enabled to use this.",
                    "type": "string"
                },
                "envelopeAttachments": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/attachment"
                    }
                },
                "envelopeCustomMetadata": {
                    "$ref": "#/definitions/envelopeCustomMetadata",
                    "description": ""
                },
                "envelopeDocuments": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeDocument"
                    }
                },
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "envelopeIdStamping": {
                    "description": "When set to **true**, Envelope ID Stamping is enabled.",
                    "type": "string"
                },
                "envelopeLocation": {
                    "description": "",
                    "type": "string"
                },
                "envelopeMetadata": {
                    "$ref": "#/definitions/envelopeMetadata",
                    "description": "Provides information about the features and services that are enabled for the envelope, including the Correct feature, the Advanced Correct feature, and DocuSign eNotary service."
                },
                "envelopeUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.",
                    "type": "string"
                },
                "expireAfter": {
                    "description": "",
                    "type": "string"
                },
                "expireDateTime": {
                    "description": "",
                    "type": "string"
                },
                "expireEnabled": {
                    "description": "",
                    "type": "string"
                },
                "externalEnvelopeId": {
                    "description": "",
                    "type": "string"
                },
                "favoritedByMe": {
                    "description": "",
                    "type": "string"
                },
                "folderId": {
                    "description": "",
                    "type": "string"
                },
                "folderIds": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "folderName": {
                    "description": "",
                    "type": "string"
                },
                "folders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/folder"
                    }
                },
                "hasComments": {
                    "description": "",
                    "type": "string"
                },
                "hasFormDataChanged": {
                    "description": "",
                    "type": "string"
                },
                "hasWavFile": {
                    "description": "",
                    "type": "string"
                },
                "holder": {
                    "description": "",
                    "type": "string"
                },
                "initialSentDateTime": {
                    "description": "",
                    "type": "string"
                },
                "is21CFRPart11": {
                    "description": "When set to **true**, indicates that this module is enabled on the account.",
                    "type": "string"
                },
                "isAceGenTemplate": {
                    "description": "",
                    "type": "string"
                },
                "isDocGenTemplate": {
                    "description": "",
                    "type": "string"
                },
                "isDynamicEnvelope": {
                    "description": "",
                    "type": "string"
                },
                "isSignatureProviderEnvelope": {
                    "description": "",
                    "type": "string"
                },
                "lastModified": {
                    "description": "",
                    "type": "string"
                },
                "lastModifiedBy": {
                    "$ref": "#/definitions/userInfo",
                    "description": ""
                },
                "lastModifiedDateTime": {
                    "description": "The date and time the item was last modified.",
                    "type": "string"
                },
                "lastUsed": {
                    "description": "",
                    "type": "string"
                },
                "location": {
                    "description": "",
                    "type": "string"
                },
                "lockInformation": {
                    "$ref": "#/definitions/lockInformation",
                    "description": "Provides lock information about an envelope that a user has locked."
                },
                "messageLock": {
                    "description": "When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to true**** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "newPassword": {
                    "description": "",
                    "type": "string"
                },
                "notification": {
                    "$ref": "#/definitions/notification",
                    "description": ""
                },
                "notificationUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the notifications.",
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/userInfo",
                    "description": ""
                },
                "pageCount": {
                    "description": "",
                    "type": "string"
                },
                "password": {
                    "description": "",
                    "type": "string"
                },
                "passwordProtected": {
                    "description": "",
                    "type": "string"
                },
                "powerForm": {
                    "$ref": "#/definitions/powerForm",
                    "description": "Information about any PowerForms that are included in the envelope."
                },
                "powerForms": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/powerForm"
                    }
                },
                "purgeCompletedDate": {
                    "description": "",
                    "type": "string"
                },
                "purgeRequestDate": {
                    "description": "",
                    "type": "string"
                },
                "purgeState": {
                    "description": "",
                    "type": "string"
                },
                "recipients": {
                    "$ref": "#/definitions/recipients",
                    "description": "An array of powerform recipients."
                },
                "recipientsLock": {
                    "description": "When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.",
                    "type": "string"
                },
                "recipientsUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
                    "type": "string"
                },
                "sender": {
                    "$ref": "#/definitions/userInfo",
                    "description": "Information about the sender of the envelope."
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "signerCanSignOnMobile": {
                    "description": "",
                    "type": "string"
                },
                "signingLocation": {
                    "description": "Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusChangedDateTime": {
                    "description": "The data and time the status changed.",
                    "type": "string"
                },
                "statusDateTime": {
                    "description": "",
                    "type": "string"
                },
                "templateId": {
                    "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                    "type": "string"
                },
                "templatesUri": {
                    "description": "Contains a URI for an endpoint which you can use to retrieve the templates.",
                    "type": "string"
                },
                "transactionId": {
                    "description": " Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.",
                    "type": "string"
                },
                "uri": {
                    "description": "",
                    "type": "string"
                },
                "useDisclosure": {
                    "description": "When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.",
                    "type": "string"
                },
                "uSigState": {
                    "description": "",
                    "type": "string"
                },
                "voidedDateTime": {
                    "description": "The date and time the envelope or template was voided.",
                    "type": "string"
                },
                "voidedReason": {
                    "description": "The reason the envelope or template was voided.",
                    "type": "string"
                },
                "workflow": {
                    "$ref": "#/definitions/workflow",
                    "description": ""
                }
            }
        },
        "envelopeTemplateResults": {
            "type": "object",
            "properties": {
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "envelopeTemplates": {
                    "description": "The list of requested templates.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeTemplate"
                    }
                },
                "folders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/folder"
                    }
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            },
            "description": "Information about templates."
        },
        "envelopeTransactionStatus": {
            "type": "object",
            "properties": {
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "transactionId": {
                    "description": " Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.",
                    "type": "string"
                }
            }
        },
        "envelopeTransferRule": {
            "type": "object",
            "properties": {
                "carbonCopyOriginalOwner": {
                    "description": "",
                    "type": "string"
                },
                "enabled": {
                    "description": "",
                    "type": "string"
                },
                "envelopeTransferRuleId": {
                    "description": "",
                    "type": "string"
                },
                "eventType": {
                    "description": "",
                    "type": "string"
                },
                "fromGroup": {
                    "$ref": "#/definitions/group",
                    "description": "Information about the group that triggers the transfer."
                },
                "fromUser": {
                    "$ref": "#/definitions/userInformation",
                    "description": "Information about the user who triggers the transfer."
                },
                "modifiedDate": {
                    "description": "",
                    "type": "string"
                },
                "modifiedUser": {
                    "$ref": "#/definitions/userInformation",
                    "description": "Information about the user who last modified the envelope transfer rule."
                },
                "toFolder": {
                    "$ref": "#/definitions/folder",
                    "description": "Information about the destination folder to which the envelope is transferred."
                },
                "toUser": {
                    "$ref": "#/definitions/userInformation",
                    "description": "Information about the user to which the envelope is transferred."
                }
            },
            "description": "This object contains details about an envelope transfer rule."
        },
        "envelopeTransferRuleInformation": {
            "type": "object",
            "properties": {
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "envelopeTransferRules": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeTransferRule"
                    }
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            }
        },
        "envelopeTransferRuleRequest": {
            "type": "object",
            "properties": {
                "carbonCopyOriginalOwner": {
                    "description": "",
                    "type": "string"
                },
                "enabled": {
                    "description": "",
                    "type": "string"
                },
                "envelopeTransferRuleId": {
                    "description": "",
                    "type": "string"
                },
                "eventType": {
                    "description": "",
                    "type": "string"
                },
                "fromGroups": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/group"
                    }
                },
                "fromUsers": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInformation"
                    }
                },
                "modifiedDate": {
                    "description": "",
                    "type": "string"
                },
                "modifiedUser": {
                    "$ref": "#/definitions/userInformation",
                    "description": "Information about the user who last modified the envelope transfer rule."
                },
                "toFolder": {
                    "$ref": "#/definitions/folder",
                    "description": "Information about the destination folder to which the envelope is transferred."
                },
                "toUser": {
                    "$ref": "#/definitions/userInformation",
                    "description": "Information about the user to which the envelope is transferred."
                }
            },
            "description": "This object contains details about the envelope transfer rule that you want to create."
        },
        "envelopeUpdateSummary": {
            "type": "object",
            "properties": {
                "bulkEnvelopeStatus": {
                    "$ref": "#/definitions/bulkEnvelopeStatus",
                    "description": "An object that describes the status of the bulk send envelopes."
                },
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "listCustomFieldUpdateResults": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/listCustomField"
                    }
                },
                "lockInformation": {
                    "$ref": "#/definitions/lockInformation",
                    "description": "Provides lock information about an envelope that a user has locked."
                },
                "purgeState": {
                    "description": "",
                    "type": "string"
                },
                "recipientUpdateResults": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientUpdateResponse"
                    }
                },
                "tabUpdateResults": {
                    "$ref": "#/definitions/tabs",
                    "description": ""
                },
                "textCustomFieldUpdateResults": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/textCustomField"
                    }
                }
            }
        },
        "envelopeViewDocumentSettings": {
            "type": "object",
            "properties": {
                "showEditDocuments": {
                    "description": "",
                    "type": "string"
                },
                "showEditDocumentVisibility": {
                    "description": "",
                    "type": "string"
                },
                "showEditPages": {
                    "description": "",
                    "type": "string"
                },
                "showSaveAsDocumentCustomField": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "envelopeViewEnvelopeCustomFieldSettings": {
            "type": "object",
            "properties": {
                "showEnvelopeCustomFields": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "envelopeViewRecipientSettings": {
            "type": "object",
            "properties": {
                "showBulkSend": {
                    "description": "",
                    "type": "string"
                },
                "showContactsList": {
                    "description": "",
                    "type": "string"
                },
                "showEditMessage": {
                    "description": "",
                    "type": "string"
                },
                "showEditRecipients": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "envelopeViewRequest": {
            "type": "object",
            "properties": {
                "returnUrl": {
                    "description": "",
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/envelopeViewSettings",
                    "description": ""
                },
                "viewAccess": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "envelopeViewSettings": {
            "type": "object",
            "properties": {
                "backButtonAction": {
                    "description": "",
                    "type": "string"
                },
                "documentSettings": {
                    "$ref": "#/definitions/envelopeViewDocumentSettings",
                    "description": ""
                },
                "envelopeCustomFieldSettings": {
                    "$ref": "#/definitions/envelopeViewEnvelopeCustomFieldSettings",
                    "description": ""
                },
                "lockToken": {
                    "description": "",
                    "type": "string"
                },
                "recipientSettings": {
                    "$ref": "#/definitions/envelopeViewRecipientSettings",
                    "description": ""
                },
                "sendButtonAction": {
                    "description": "",
                    "type": "string"
                },
                "showAdvancedOptions": {
                    "description": "",
                    "type": "string"
                },
                "showBackButton": {
                    "description": "",
                    "type": "string"
                },
                "showDiscardAction": {
                    "description": "",
                    "type": "string"
                },
                "showHeaderActions": {
                    "description": "",
                    "type": "string"
                },
                "startingScreen": {
                    "description": "",
                    "type": "string"
                },
                "taggerSettings": {
                    "$ref": "#/definitions/envelopeViewTaggerSettings",
                    "description": ""
                },
                "templateSettings": {
                    "$ref": "#/definitions/envelopeViewTemplateSettings",
                    "description": ""
                }
            }
        },
        "envelopeViewTaggerSettings": {
            "type": "object",
            "properties": {
                "paletteDefault": {
                    "description": "",
                    "type": "string"
                },
                "paletteSections": {
                    "description": "",
                    "type": "string"
                },
                "paletteSettings": {
                    "$ref": "#/definitions/paletteSettings",
                    "description": ""
                }
            }
        },
        "envelopeViewTemplateSettings": {
            "type": "object",
            "properties": {
                "showMatchingTemplatesPrompt": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "errorDetails": {
            "description": "This object describes errors that occur. It is only valid for responses, and ignored in requests.",
            "type": "object",
            "properties": {
                "errorCode": {
                    "description": "An error code associated with the error.",
                    "type": "string"
                },
                "message": {
                    "description": "A short error message.",
                    "type": "string"
                }
            }
        },
        "eventNotification": {
            "description": "This optional complex element allows a message to be sent a specified URL when the envelope or recipient changes status. It is similar to DocuSign Connect. For example, if an envelope changes from \"Sent\" to \"Delivered\", a message containing the updated envelope status and optionally the documents is sent to the URL. When an eventNotification is attached to an envelope using the API, it only applies to the envelope (treating the envelope as the sender). This is different from envelopes created through the console user interface, where the user is treated as the sender.",
            "type": "object",
            "properties": {
                "deliveryMode": {
                    "description": "",
                    "type": "string"
                },
                "envelopeEvents": {
                    "description": "A list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `url` property. \n\nTo receive notifications, you must include either an `envelopeEvents` node or a `recipientEvents` node. You do not need to specify both.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeEvent"
                    }
                },
                "eventData": {
                    "$ref": "#/definitions/connectEventData",
                    "description": "Allows you to specify the format of the information the Connect webhooks returns. For more information, see [Connect webhooks with JSON notifications](https://www.docusign.com/blog/developers/connect-webhooks-json-notifications)"
                },
                "events": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "includeCertificateOfCompletion": {
                    "description": "When set to **true**, the Connect Service includes the Certificate of Completion with completed envelopes. ",
                    "type": "string"
                },
                "includeCertificateWithSoap": {
                    "description": "When set to **true**, this tells the Connect service to send the DocuSign signedby certificate as part of the outgoing SOAP xml. This appears in the XML as wsse:BinarySecurityToken.",
                    "type": "string"
                },
                "includeDocumentFields": {
                    "description": "When set to **true**, the Document Fields associated with envelope documents are included in the data. Document Fields are optional custom name-value pairs added to documents using the API. ",
                    "type": "string"
                },
                "includeDocuments": {
                    "description": "When set to **true**, the PDF documents are included in the message along with the updated XML. ",
                    "type": "string"
                },
                "includeEnvelopeVoidReason": {
                    "description": "When set to **true**, this tells the Connect Service to include the void reason, as entered by the person that voided the envelope, in the message. ",
                    "type": "string"
                },
                "includeHMAC": {
                    "description": "",
                    "type": "string"
                },
                "includeOAuth": {
                    "description": "",
                    "type": "string"
                },
                "includeSenderAccountAsCustomField": {
                    "description": "When set to **true**, the sender account ID is included as a envelope custom field in the data. ",
                    "type": "string"
                },
                "includeTimeZone": {
                    "description": "When set to **true**, the envelope time zone information is included in the message. ",
                    "type": "string"
                },
                "integratorManaged": {
                    "description": "",
                    "type": "string"
                },
                "loggingEnabled": {
                    "description": "When set to **true**, logging is turned on for envelope events on the Web Console Connect page. ",
                    "type": "string"
                },
                "recipientEvents": {
                    "description": "A list of recipient event statuses that will trigger Connect to send updates to   the endpoint specified in the url property.\n\nTo receive notifications, you must include either an `envelopeEvents` node or a `recipientEvents` node. You do not need to specify both.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientEvent"
                    }
                },
                "requireAcknowledgment": {
                    "description": "When set to **true**, the DocuSign Connect service checks that the message was received and retries on failures. ",
                    "type": "string"
                },
                "signMessageWithX509Cert": {
                    "description": "When set to **true**, messages are signed with an X509 certificate. This provides support for 2-way SSL in the envelope. ",
                    "type": "string"
                },
                "soapNameSpace": {
                    "description": "This lists the namespace in the SOAP listener provided.",
                    "type": "string"
                },
                "url": {
                    "description": "Specifies the endpoint to which envelope updates are sent. Udpates are sent as XML unless `useSoapInterface` property is set to **true**.",
                    "type": "string"
                },
                "useSoapInterface": {
                    "description": "When set to **true**, this tells the Connect service that the user's endpoint has implemented a SOAP interface. ",
                    "type": "string"
                }
            }
        },
        "eventResult": {
            "type": "object",
            "properties": {
                "eventTimestamp": {
                    "description": "",
                    "type": "string"
                },
                "failureDescription": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "vendorFailureStatusCode": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Information about the result of an event."
        },
        "expirations": {
            "description": "A complex element that specifies the expiration settings for the envelope.",
            "type": "object",
            "properties": {
                "expireAfter": {
                    "description": "An integer that sets the number of days the envelope is active.",
                    "type": "string"
                },
                "expireEnabled": {
                    "description": "When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used.",
                    "type": "string"
                },
                "expireWarn": {
                    "description": "An integer that sets the number of days before envelope expiration that an expiration warning email is sent to the recipient. If set to 0 (zero), no warning email is sent.",
                    "type": "string"
                }
            }
        },
        "externalDocServiceErrorDetails": {
            "type": "object",
            "properties": {
                "authenticationUrl": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "errorCode": {
                    "description": "",
                    "type": "string"
                },
                "message": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "externalDocumentSources": {
            "type": "object",
            "properties": {
                "boxnetEnabled": {
                    "description": "",
                    "type": "string"
                },
                "boxnetMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata indicating whether the `boxnetEnabled` property is editable."
                },
                "dropboxEnabled": {
                    "description": "",
                    "type": "string"
                },
                "dropboxMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata indicating whether the `dropboxEnabled` property is editable."
                },
                "googleDriveEnabled": {
                    "description": "",
                    "type": "string"
                },
                "googleDriveMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata indicating whether the `googleDriveEnabled` property is editable."
                },
                "oneDriveEnabled": {
                    "description": "",
                    "type": "string"
                },
                "oneDriveMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata indicating whether the `oneDriveEnabled` property is editable."
                },
                "salesforceEnabled": {
                    "description": "",
                    "type": "string"
                },
                "salesforceMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata indicating whether the `salesforceEnabled` property is editable."
                }
            },
            "description": "A complex object specifying the external document sources."
        },
        "externalFile": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "",
                    "type": "string"
                },
                "hasCompositeTemplate": {
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "string"
                },
                "img": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "ownerName": {
                    "description": "",
                    "type": "string"
                },
                "size": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "supported": {
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "description": "",
                    "type": "string"
                },
                "uri": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object contains information about a file or folder in cloud storage."
        },
        "externalFolder": {
            "type": "object",
            "properties": {
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/externalDocServiceErrorDetails",
                    "description": "Array or errors."
                },
                "id": {
                    "description": "",
                    "type": "string"
                },
                "items": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/externalFile"
                    }
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            }
        },
        "externalPrimaryAccountRecipientAuthRequirements": {
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "idVerification": {
                    "description": "",
                    "type": "string"
                },
                "kba": {
                    "description": "",
                    "type": "string"
                },
                "phone": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "favoriteTemplatesContentItem": {
            "type": "object",
            "properties": {
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "favoritedDate": {
                    "description": "",
                    "type": "string"
                },
                "templateId": {
                    "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                    "type": "string"
                }
            }
        },
        "favoriteTemplatesInfo": {
            "type": "object",
            "properties": {
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "favoriteTemplates": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/favoriteTemplatesContentItem"
                    }
                },
                "templatesUpdatedCount": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "featureAvailableMetadata": {
            "type": "object",
            "properties": {
                "availabilty": {
                    "description": "",
                    "type": "string"
                },
                "featureName": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "featureSet": {
            "type": "object",
            "properties": {
                "currencyFeatureSetPrices": {
                    "description": "A complex type that contains alternate currency values that are configured for this plan feature set.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/currencyFeatureSetPrice"
                    }
                },
                "envelopeFee": {
                    "description": "",
                    "type": "string"
                },
                "featureSetId": {
                    "description": "A unique ID for the feature set.",
                    "type": "string"
                },
                "fixedFee": {
                    "description": "",
                    "type": "string"
                },
                "is21CFRPart11": {
                    "description": "When set to **true**, indicates that this module is enabled on the account.",
                    "type": "string"
                },
                "isActive": {
                    "description": "",
                    "type": "string"
                },
                "isEnabled": {
                    "description": "Specifies whether the feature set is actively enabled as part of the plan.",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "seatFee": {
                    "description": "An incremental seat cost for seat-based plans. Only valid when isEnabled for the feature set is set to true.",
                    "type": "string"
                }
            },
            "description": "This object provides details about a feature set, or add-on product that is associated with an account. It is reserved for DocuSign internal use only."
        },
        "fileType": {
            "type": "object",
            "properties": {
                "fileExtension": {
                    "description": "",
                    "type": "string"
                },
                "mimeType": {
                    "description": "The mime-type of a file type listed in a fileTypes collection.",
                    "type": "string"
                }
            }
        },
        "fileTypeList": {
            "type": "object",
            "properties": {
                "fileTypes": {
                    "description": "A collection of file types.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/fileType"
                    }
                }
            }
        },
        "filter": {
            "type": "object",
            "properties": {
                "actionRequired": {
                    "description": "Access token information.",
                    "type": "string"
                },
                "expires": {
                    "description": "",
                    "type": "string"
                },
                "folderIds": {
                    "description": "",
                    "type": "string"
                },
                "fromDateTime": {
                    "description": "",
                    "type": "string"
                },
                "isTemplate": {
                    "description": "",
                    "type": "string"
                },
                "order": {
                    "description": "",
                    "type": "string"
                },
                "orderBy": {
                    "description": "",
                    "type": "string"
                },
                "searchTarget": {
                    "description": "",
                    "type": "string"
                },
                "searchText": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "toDateTime": {
                    "description": "Must be set to \"bearer\".",
                    "type": "string"
                }
            },
            "description": "Use this object to create a filtered view of the items in a folder."
        },
        "firstName": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that displays the recipient's first name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the first section as the first name.\n"
        },
        "folder": {
            "type": "object",
            "properties": {
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "filter": {
                    "$ref": "#/definitions/filter",
                    "description": "An object used to present a filtered view of the items in a folder."
                },
                "folderId": {
                    "description": "",
                    "type": "string"
                },
                "folderItems": {
                    "description": "A list of the envelopes in the specified folder or folders. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/folderItem_v2"
                    }
                },
                "folders": {
                    "description": "A collection of folder objects returned in a response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/folder"
                    }
                },
                "hasAccess": {
                    "description": "",
                    "type": "string"
                },
                "hasSubFolders": {
                    "description": "",
                    "type": "string"
                },
                "itemCount": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/userInfo",
                    "description": "Information about the user who owns the folder."
                },
                "parentFolderId": {
                    "description": "",
                    "type": "string"
                },
                "parentFolderUri": {
                    "description": "",
                    "type": "string"
                },
                "subFolderCount": {
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "description": "",
                    "type": "string"
                },
                "uri": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object contains details about a folder."
        },
        "folderItem_v2": {
            "type": "object",
            "properties": {
                "completedDateTime": {
                    "description": "Specifies the date and time this item was completed.",
                    "type": "string"
                },
                "createdDateTime": {
                    "description": "Indicates the date and time the item was created.",
                    "type": "string"
                },
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "envelopeUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.",
                    "type": "string"
                },
                "expireDateTime": {
                    "description": "The date and time the envelope is set to expire.",
                    "type": "string"
                },
                "folderId": {
                    "description": "",
                    "type": "string"
                },
                "folderUri": {
                    "description": "",
                    "type": "string"
                },
                "is21CFRPart11": {
                    "description": "When set to **true**, indicates that this module is enabled on the account.",
                    "type": "string"
                },
                "lastModifiedDateTime": {
                    "description": "The date and time the item was last modified.",
                    "type": "string"
                },
                "ownerName": {
                    "description": "",
                    "type": "string"
                },
                "recipients": {
                    "$ref": "#/definitions/recipients",
                    "description": "An array of powerform recipients."
                },
                "recipientsUri": {
                    "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
                    "type": "string"
                },
                "senderCompany": {
                    "description": "",
                    "type": "string"
                },
                "senderEmail": {
                    "description": "",
                    "type": "string"
                },
                "senderName": {
                    "description": "",
                    "type": "string"
                },
                "senderUserId": {
                    "description": "",
                    "type": "string"
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "subject": {
                    "description": "",
                    "type": "string"
                },
                "templateId": {
                    "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                    "type": "string"
                },
                "templateUri": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Information about folder item results."
        },
        "folderItemResponse": {
            "type": "object",
            "properties": {
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "folderItems": {
                    "description": "A list of the envelopes in the specified folder or folders. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/folderItem_v2"
                    }
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalRows": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Results from a folder item request."
        },
        "folderItemsResponse": {
            "type": "object",
            "properties": {
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "envelopes": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeSummary"
                    }
                },
                "folders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/folder"
                    }
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            }
        },
        "folderSharedItem": {
            "type": "object",
            "properties": {
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "folderId": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/userInfo",
                    "description": "Information about the user who owns the folder."
                },
                "parentFolderId": {
                    "description": "",
                    "type": "string"
                },
                "parentFolderUri": {
                    "description": "",
                    "type": "string"
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedGroups": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/memberGroupSharedItem"
                    }
                },
                "sharedUsers": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userSharedItem"
                    }
                },
                "uri": {
                    "description": "",
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/userInfo",
                    "description": "Information about the user associated with the folder."
                }
            }
        },
        "foldersRequest": {
            "type": "object",
            "properties": {
                "envelopeIds": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "folders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/folder"
                    }
                },
                "fromFolderId": {
                    "description": " The folder ID the envelope is being moved from.",
                    "type": "string"
                }
            },
            "description": "Information for a folder request."
        },
        "foldersResponse": {
            "type": "object",
            "properties": {
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "envelopes": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeSummary"
                    }
                },
                "folders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/folder"
                    }
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            }
        },
        "forgottenPasswordInformation": {
            "description": "A complex element that has up to four Question/Answer pairs for forgotten password information.",
            "type": "object",
            "properties": {
                "forgottenPasswordAnswer1": {
                    "description": "The answer to the first forgotten password challenge question.",
                    "type": "string"
                },
                "forgottenPasswordAnswer2": {
                    "description": "The answer to the second forgotten password challenge question.",
                    "type": "string"
                },
                "forgottenPasswordAnswer3": {
                    "description": "The answer to the third forgotten password challenge question.",
                    "type": "string"
                },
                "forgottenPasswordAnswer4": {
                    "description": "The answer to the fourth forgotten password challenge question.",
                    "type": "string"
                },
                "forgottenPasswordQuestion1": {
                    "description": "The first challenge question presented to a user who has forgotten their password.",
                    "type": "string"
                },
                "forgottenPasswordQuestion2": {
                    "description": "The second challenge question presented to a user who has forgotten their password.",
                    "type": "string"
                },
                "forgottenPasswordQuestion3": {
                    "description": "The third challenge question presented to a user who has forgotten their password.",
                    "type": "string"
                },
                "forgottenPasswordQuestion4": {
                    "description": "The fourth challenge question presented to a user who has forgotten their password.",
                    "type": "string"
                }
            }
        },
        "formDataItem": {
            "type": "object",
            "properties": {
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "listSelectedValue": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "numericalValue": {
                    "description": "",
                    "type": "string"
                },
                "originalNumericalValue": {
                    "description": "",
                    "type": "string"
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                }
            }
        },
        "formulaTab": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "concealValueOnDocumentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `concealValueOnDocument` property is editable."
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "disableAutoSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `disableAutoSize` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "formula": {
                    "description": "The Formula string contains the TabLabel for the reference tabs used in the formula and calculation operators. Each TabLabel must be contained in brackets. \nMaximum Length: 2000 characters.\n\n*Example*: Three tabs (TabLabels: Line1, Line2, and Tax) need to be added together. The formula string would be: \n\n[Line1]+[Line2]+[Tax]",
                    "type": "string"
                },
                "formulaMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata indicating if the sender can edit the `formula` property."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "hidden": {
                    "description": "",
                    "type": "string"
                },
                "hiddenMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `hidden` property is editable."
                },
                "isPaymentAmount": {
                    "description": "When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number. ",
                    "type": "string"
                },
                "isPaymentAmountMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "maxLength": {
                    "description": "An optional value that describes the maximum length of the property when the property is a string.",
                    "type": "string"
                },
                "maxLengthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `maxLength` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "paymentDetails": {
                    "$ref": "#/definitions/paymentDetails",
                    "description": "This property indicates \nthat this formula tab \nis a payment item.  \nSee [Requesting Payments Along with Signatures][paymentguide] \nin the DocuSign Support Center \nto learn more about payments. \n\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n"
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "requireAll": {
                    "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
                    "type": "string"
                },
                "requireAllMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireAll` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "requireInitialOnSharedChange": {
                    "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
                    "type": "string"
                },
                "requireInitialOnSharedChangeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireInitialOnSharedChange` property is editable."
                },
                "roundDecimalPlaces": {
                    "description": "",
                    "type": "string"
                },
                "roundDecimalPlacesMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `roundDecimalPlaces` property is editable."
                },
                "senderRequired": {
                    "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                    "type": "string"
                },
                "senderRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `senderRequired` property is editable."
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `shared` property is editable."
                },
                "shareToRecipients": {
                    "description": "",
                    "type": "string"
                },
                "shareToRecipientsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "validationMessage": {
                    "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                    "type": "string"
                },
                "validationMessageMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `validationMessage` property is editable."
                },
                "validationPattern": {
                    "description": "A regular expression used to validate input for the tab.",
                    "type": "string"
                },
                "validationPatternMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `validationPattern` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "The value of a formula tab is calculated\nfrom the values of other\nnumber or date tabs in the document.\nWhen the recipient completes the underlying fields,\nthe formula tab calculates and displays the result.\n\nThe `formula` property of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nIf a formula tab contains\na `paymentDetails` property,\nthe tab is considered a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n"
        },
        "fullName": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that displays the recipient's full name.\n"
        },
        "graphicsContext": {
            "type": "object",
            "properties": {
                "fillColor": {
                    "description": "",
                    "type": "string"
                },
                "lineColor": {
                    "description": "",
                    "type": "string"
                },
                "lineWeight": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "group": {
            "type": "object",
            "properties": {
                "accessType": {
                    "description": "",
                    "type": "string"
                },
                "dsGroupId": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "groupId": {
                    "description": "The DocuSign group ID for the group.",
                    "type": "string"
                },
                "groupName": {
                    "description": "The name of the group.",
                    "type": "string"
                },
                "groupType": {
                    "description": "The group type.",
                    "type": "string"
                },
                "lastModifiedOn": {
                    "description": "",
                    "type": "string"
                },
                "permissionProfileId": {
                    "description": "The ID of the permission profile associated with the group.",
                    "type": "string"
                },
                "users": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                },
                "usersCount": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object contains information about a group."
        },
        "groupInformation": {
            "type": "object",
            "properties": {
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "groups": {
                    "description": "A collection group objects containing information about the groups returned.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/group"
                    }
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            }
        },
        "idCheckConfiguration": {
            "type": "object",
            "properties": {
                "authSteps": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/idCheckSecurityStep"
                    }
                },
                "isDefault": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "A complex object specifying ID check configuration."
        },
        "idCheckInformationInput": {
            "description": "A complex element that contains input information related to a recipient ID check. It can include the following information.\n\naddressInformationInput: Used to set recipient address information and consists of:\n\n* addressInformation: consists of six elements, with stree2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4. The maximum length of each element is: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.\n* receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.\n\ndobInformationInput: Used to set recipient date of birth information and consists of:\n\n* dateOfBirth: Specifies the recipient's date, month and year of birth.\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.\n* receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.\n\nssn4InformationInput: Used to set the last four digits of the recipient's SSN information and consists of:\n\n* ssn4: Specifies the last four digits of the recipient's SSN.\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.\n* receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.\n\nssn9InformationInput: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of: \n* ssn9: Specifies the recipient's SSN.\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.",
            "type": "object",
            "properties": {
                "addressInformationInput": {
                    "$ref": "#/definitions/addressInformationInput",
                    "description": "An object that specifies recipient address information and how it is displayed."
                },
                "dobInformationInput": {
                    "$ref": "#/definitions/dobInformationInput",
                    "description": "An object that specifies recipient date of birth information and how it is displayed."
                },
                "ssn4InformationInput": {
                    "$ref": "#/definitions/ssn4InformationInput",
                    "description": "An object that specifies the last four digits of the recipient's Social Security Number (SSN)."
                },
                "ssn9InformationInput": {
                    "$ref": "#/definitions/ssn9InformationInput",
                    "description": "An object that specifies the recipient's Social Security Number (SSN) information. Note that ssn9 information cannot be returned in a response."
                }
            }
        },
        "idCheckSecurityStep": {
            "type": "object",
            "properties": {
                "authType": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "idEvidenceResourceToken": {
            "type": "object",
            "properties": {
                "proofBaseURI": {
                    "description": "",
                    "type": "string"
                },
                "resourceToken": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "idEvidenceViewLink": {
            "type": "object",
            "properties": {
                "viewLink": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "initialHere": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "handDrawRequired": {
                    "description": "",
                    "type": "string"
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies the tool tip text for the tab.",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "optional": {
                    "description": "",
                    "type": "string"
                },
                "optionalMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `optional` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "scaleValue": {
                    "description": " Sets the size for the InitialHere tab. It can be value from 0.5 to 1.0, where 1.0 represents full size and 0.5 is 50% size.",
                    "type": "string"
                },
                "scaleValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `scaleValue` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that allows the recipient to initial the document. May\nbe optional.\n"
        },
        "inlineTemplate": {
            "type": "object",
            "properties": {
                "customFields": {
                    "$ref": "#/definitions/customFields",
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters."
                },
                "documents": {
                    "description": "Complex element contains the details on the documents in the envelope.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/document"
                    }
                },
                "envelope": {
                    "$ref": "#/definitions/envelope",
                    "description": "A container used to send documents to recipients. The envelope carries information about the sender and timestamps to indicate the progress of the delivery procedure. It can contain collections of Documents, Tabs and Recipients."
                },
                "recipients": {
                    "$ref": "#/definitions/recipients",
                    "description": "An array of powerform recipients."
                },
                "sequence": {
                    "description": "Specifies the order in which templates are overlaid.",
                    "type": "string"
                }
            }
        },
        "inPersonSigner": {
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "accessCodeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `accessCode` property is editable. This property is read-only."
                },
                "addAccessCodeToEmail": {
                    "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
                    "type": "string"
                },
                "allowSystemOverrideForLockedRecipient": {
                    "description": "",
                    "type": "string"
                },
                "autoNavigation": {
                    "description": "",
                    "type": "string"
                },
                "autoRespondedReason": {
                    "description": "",
                    "type": "string"
                },
                "bulkSendV2Recipient": {
                    "description": "",
                    "type": "string"
                },
                "canSignOffline": {
                    "description": "When set to **true**, specifies that the signer can perform the signing ceremony offline.",
                    "type": "string"
                },
                "clientUserId": {
                    "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "completedCount": {
                    "description": "",
                    "type": "string"
                },
                "creationReason": {
                    "description": "",
                    "type": "string"
                },
                "customFields": {
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "declinedDateTime": {
                    "description": "The date and time the recipient declined the document.",
                    "type": "string"
                },
                "declinedReason": {
                    "description": "The reason the recipient declined the document.",
                    "type": "string"
                },
                "defaultRecipient": {
                    "description": "",
                    "type": "string"
                },
                "deliveredDateTime": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethod": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethodMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "designatorId": {
                    "description": "",
                    "type": "string"
                },
                "designatorIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "documentVisibility": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentVisibility"
                    }
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "emailMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `email` property is editable. This property is read-only."
                },
                "emailNotification": {
                    "$ref": "#/definitions/recipientEmailNotification",
                    "description": "A complex type that contains information sets the language of the recipient's email information. \n\n**IMPORTANT**: If you enable email notification for one recipient, you must enable email notification for all recipients as it overrides the Envelope Subject and `EmailBlurb` property settings. "
                },
                "embeddedRecipientStartURL": {
                    "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "excludedDocuments": {
                    "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "faxNumber": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "faxNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "hostEmail": {
                    "description": "",
                    "type": "string"
                },
                "hostEmailMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `hostEmail` property is editable."
                },
                "hostName": {
                    "description": "Specifies the name of the signing host. It is a required element for In Person Signers recipient Type. \nMaximum Length: 100 characters.",
                    "type": "string"
                },
                "hostNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `hostName` property is editable."
                },
                "idCheckConfigurationName": {
                    "description": "Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.",
                    "type": "string"
                },
                "idCheckConfigurationNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `idCheckConfigurationName` property is editable. This property is read-only."
                },
                "idCheckInformationInput": {
                    "$ref": "#/definitions/idCheckInformationInput",
                    "description": "An object that contains input information related to a recipient ID check."
                },
                "identityVerification": {
                    "$ref": "#/definitions/recipientIdentityVerification",
                    "description": "Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address)."
                },
                "inheritEmailNotificationConfiguration": {
                    "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                    "type": "string"
                },
                "inPersonSigningType": {
                    "description": "",
                    "type": "string"
                },
                "inPersonSigningTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `inPersonSigningType` property is editable."
                },
                "lockedRecipientPhoneAuthEditable": {
                    "description": "",
                    "type": "string"
                },
                "lockedRecipientSmsEditable": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "notaryHost": {
                    "$ref": "#/definitions/notaryHost",
                    "description": "Information about the notary host. The following information is required when using the eNotary in-person signing flow:\n\n- `name`: The name of the notary.\n- `email`: The email address of the notary.\n- `recipientId`: A unique ID number for the notary signing host."
                },
                "notaryId": {
                    "description": "",
                    "type": "string"
                },
                "note": {
                    "description": "Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.",
                    "type": "string"
                },
                "noteMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `note` property is editable. This property is read-only."
                },
                "offlineAttributes": {
                    "$ref": "#/definitions/offlineAttributes",
                    "description": "Reserved for DocuSign."
                },
                "phoneAuthentication": {
                    "$ref": "#/definitions/recipientPhoneAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:\n\n* `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.\n* `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.\n* `recordVoicePrint`: Reserved for DocuSign.\n* `validateRecipProvidedNumber`: Reserved for DocuSign.\n\n"
                },
                "recipientAttachments": {
                    "description": "Reserved:",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAttachment"
                    }
                },
                "recipientAuthenticationStatus": {
                    "$ref": "#/definitions/authenticationStatus",
                    "description": "Information about the recipient's authentication status. This property is read-only."
                },
                "recipientFeatureMetadata": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featureAvailableMetadata"
                    }
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientSignatureProviders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientSignatureProvider"
                    }
                },
                "recipientSuppliesTabs": {
                    "description": "",
                    "type": "string"
                },
                "recipientType": {
                    "description": "",
                    "type": "string"
                },
                "recipientTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientType` property is editable. This property is read-only."
                },
                "requireIdLookup": {
                    "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                    "type": "string"
                },
                "requireIdLookupMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireIdLookup` property is editable. This property is read-only."
                },
                "requireSignerCertificate": {
                    "description": "",
                    "type": "string"
                },
                "requireSignOnPaper": {
                    "description": "",
                    "type": "string"
                },
                "requireUploadSignature": {
                    "description": "",
                    "type": "string"
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "routingOrder": {
                    "description": "Specifies the routing order of the recipient in the envelope. ",
                    "type": "string"
                },
                "routingOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `routingOrder` property is editable. This property is read-only."
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "signatureInfo": {
                    "$ref": "#/definitions/recipientSignatureInformation",
                    "description": "Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.\n\nUsed only with recipient types In Person Signers and Signers."
                },
                "signedDateTime": {
                    "description": "Reserved: For DocuSign use only. ",
                    "type": "string"
                },
                "signerEmail": {
                    "description": "The email address for an InPersonSigner recipient Type. \n\nMaximum Length: 100 characters. ",
                    "type": "string"
                },
                "signerEmailMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates if the sender can edit the in-person signer's email address."
                },
                "signerFirstName": {
                    "description": "",
                    "type": "string"
                },
                "signerFirstNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates if the `signerFirstName` property is editable."
                },
                "signerLastName": {
                    "description": "",
                    "type": "string"
                },
                "signerLastNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signerLastName` property is editable."
                },
                "signerName": {
                    "description": "Required. The full legal name of a signer for the envelope. \n\nMaximum Length: 100 characters.\n\n\n",
                    "type": "string"
                },
                "signerNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signerName` property is editable."
                },
                "signInEachLocation": {
                    "description": "When set to **true**, specifies that the signer must sign in all locations.",
                    "type": "string"
                },
                "signInEachLocationMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signInEachLocation` property is editable. This property is read-only."
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                },
                "signingGroupIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Not applicable."
                },
                "signingGroupName": {
                    "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
                    "type": "string"
                },
                "signingGroupUsers": {
                    "description": "A complex type that contains information about users in the signing group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                },
                "smsAuthentication": {
                    "$ref": "#/definitions/recipientSMSAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `SMS Auth $`, you use this complex type to provide the recipient authentication method details. It contains the element `senderProvidedNumbers`, which is an array of phone numbers that the recipient can use for SMS text authentication. \n\n"
                },
                "socialAuthentications": {
                    "description": " Lists the social ID type that can be used for recipient authentication.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/socialAuthentication"
                    }
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusCode": {
                    "description": "",
                    "type": "string"
                },
                "suppressEmails": {
                    "description": "",
                    "type": "string"
                },
                "tabs": {
                    "$ref": "#/definitions/tabs",
                    "description": "A list of tabs, which are represented graphically as symbols on documents at the time of signing. Tabs show recipients where to sign, initial, or enter data. They may also display data to the recipients."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "totalTabCount": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Contains information about an in-person recipient. This is a DocuSign user,\nacting as a Signing Host,\nwho is in the same physical location as the signer.\nTo learn about the fields used\nfor the eNotary feature,\nsee the [recipients resource][resource].\n\n[resource]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#in-person-signer-recipient\n"
        },
        "integratedConnectUserInfoList": {
            "type": "object",
            "properties": {
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                },
                "users": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connectUserInfo"
                    }
                }
            }
        },
        "integratedUserInfoList": {
            "type": "object",
            "properties": {
                "allUsersSelected": {
                    "description": "",
                    "type": "string"
                },
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                },
                "users": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                }
            }
        },
        "intermediary": {
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "accessCodeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `accessCode` property is editable. This property is read-only."
                },
                "addAccessCodeToEmail": {
                    "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
                    "type": "string"
                },
                "additionalNotifications": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAdditionalNotification"
                    }
                },
                "allowSystemOverrideForLockedRecipient": {
                    "description": "",
                    "type": "string"
                },
                "autoRespondedReason": {
                    "description": "",
                    "type": "string"
                },
                "bulkSendV2Recipient": {
                    "description": "",
                    "type": "string"
                },
                "clientUserId": {
                    "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "completedCount": {
                    "description": "",
                    "type": "string"
                },
                "consentDetailsList": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/consentDetails"
                    }
                },
                "customFields": {
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "declinedDateTime": {
                    "description": "The date and time the recipient declined the document.",
                    "type": "string"
                },
                "declinedReason": {
                    "description": "The reason the recipient declined the document.",
                    "type": "string"
                },
                "deliveredDateTime": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethod": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethodMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "designatorId": {
                    "description": "",
                    "type": "string"
                },
                "designatorIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "documentVisibility": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentVisibility"
                    }
                },
                "email": {
                    "description": "Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "emailMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `email` property is editable. This property is read-only."
                },
                "emailNotification": {
                    "$ref": "#/definitions/recipientEmailNotification",
                    "description": "A complex type that contains information sets the language of the recipient's email information. \n\n**IMPORTANT**: If you enable email notification for one recipient, you must enable email notification for all recipients as it overrides the Envelope Subject and `EmailBlurb` property settings. "
                },
                "emailRecipientPostSigningURL": {
                    "description": "",
                    "type": "string"
                },
                "embeddedRecipientStartURL": {
                    "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "excludedDocuments": {
                    "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "faxNumber": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "faxNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "firstName": {
                    "description": "The user's first name. \nMaximum Length: 50 characters.",
                    "type": "string"
                },
                "firstNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `firstName` property is editable. This property is read-only."
                },
                "fullName": {
                    "description": "",
                    "type": "string"
                },
                "fullNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "idCheckConfigurationName": {
                    "description": "Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.",
                    "type": "string"
                },
                "idCheckConfigurationNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `idCheckConfigurationName` property is editable. This property is read-only."
                },
                "idCheckInformationInput": {
                    "$ref": "#/definitions/idCheckInformationInput",
                    "description": "An object that contains input information related to a recipient ID check."
                },
                "identityVerification": {
                    "$ref": "#/definitions/recipientIdentityVerification",
                    "description": "Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address)."
                },
                "inheritEmailNotificationConfiguration": {
                    "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                    "type": "string"
                },
                "lastName": {
                    "description": "",
                    "type": "string"
                },
                "lastNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `lastName` property is editable. This property is read-only."
                },
                "lockedRecipientPhoneAuthEditable": {
                    "description": "",
                    "type": "string"
                },
                "lockedRecipientSmsEditable": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "note": {
                    "description": "Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.",
                    "type": "string"
                },
                "noteMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `note` property is editable. This property is read-only."
                },
                "phoneAuthentication": {
                    "$ref": "#/definitions/recipientPhoneAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:\n\n* `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.\n* `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.\n* `recordVoicePrint`: Reserved for DocuSign.\n* `validateRecipProvidedNumber`: Reserved for DocuSign.\n\n"
                },
                "phoneNumber": {
                    "$ref": "#/definitions/recipientPhoneNumber",
                    "description": "Describes the recipient phone number."
                },
                "recipientAttachments": {
                    "description": "Reserved:",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAttachment"
                    }
                },
                "recipientAuthenticationStatus": {
                    "$ref": "#/definitions/authenticationStatus",
                    "description": "Information about the recipient's authentication status. This property is read-only."
                },
                "recipientFeatureMetadata": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featureAvailableMetadata"
                    }
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientType": {
                    "description": "",
                    "type": "string"
                },
                "recipientTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientType` property is editable. This property is read-only."
                },
                "requireIdLookup": {
                    "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                    "type": "string"
                },
                "requireIdLookupMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireIdLookup` property is editable. This property is read-only."
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "routingOrder": {
                    "description": "Specifies the routing order of the recipient in the envelope. ",
                    "type": "string"
                },
                "routingOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `routingOrder` property is editable. This property is read-only."
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "signedDateTime": {
                    "description": "Reserved: For DocuSign use only. ",
                    "type": "string"
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                },
                "signingGroupIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signingGroupId` property is editable. This property is read-only."
                },
                "signingGroupName": {
                    "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
                    "type": "string"
                },
                "signingGroupUsers": {
                    "description": "A complex type that contains information about users in the signing group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                },
                "smsAuthentication": {
                    "$ref": "#/definitions/recipientSMSAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `SMS Auth $`, you use this complex type to provide the recipient authentication method details. It contains the element `senderProvidedNumbers`, which is an array of phone numbers that the recipient can use for SMS text authentication. \n\n"
                },
                "socialAuthentications": {
                    "description": " Lists the social ID type that can be used for recipient authentication.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/socialAuthentication"
                    }
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusCode": {
                    "description": "",
                    "type": "string"
                },
                "suppressEmails": {
                    "description": "",
                    "type": "string"
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "totalTabCount": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Contains information about an intermediary recipient. An intermediary is a recipient who can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors or intermediaries are added."
        },
        "jurisdiction": {
            "type": "object",
            "properties": {
                "allowSystemCreatedSeal": {
                    "description": "",
                    "type": "string"
                },
                "allowUserUploadedSeal": {
                    "description": "",
                    "type": "string"
                },
                "commissionIdInSeal": {
                    "description": "",
                    "type": "string"
                },
                "county": {
                    "description": "",
                    "type": "string"
                },
                "countyInSeal": {
                    "description": "",
                    "type": "string"
                },
                "enabled": {
                    "description": "",
                    "type": "string"
                },
                "jurisdictionId": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "notaryPublicInSeal": {
                    "description": "",
                    "type": "string"
                },
                "stateNameInSeal": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Describes the jurisdiction of a notary.\nThis is read-only object."
        },
        "jurisdictionSummary": {
            "type": "object",
            "properties": {
                "authorizedForIPen": {
                    "description": "",
                    "type": "string"
                },
                "authorizedForRon": {
                    "description": "",
                    "type": "string"
                },
                "jurisdictionId": {
                    "description": "",
                    "type": "string"
                },
                "jurisdictionName": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "lastName": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that displays the recipient's last name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the last section as the last name.\n"
        },
        "linkedExternalPrimaryAccount": {
            "type": "object",
            "properties": {
                "accountName": {
                    "description": "",
                    "type": "string"
                },
                "configurationId": {
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "linkId": {
                    "description": "",
                    "type": "string"
                },
                "pdfFieldHandlingOption": {
                    "description": "",
                    "type": "string"
                },
                "recipientAuthRequirements": {
                    "$ref": "#/definitions/externalPrimaryAccountRecipientAuthRequirements",
                    "description": ""
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "list": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "listItems": {
                    "description": "The list of values that can be selected by senders. The list values are separated by semi-colons. Example: [one;two;three;four]\n\nMaximum Length of listItems:  2048 characters.\nMaximum Length of items in the list: 100 characters. \n",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/listItem"
                    }
                },
                "listSelectedValue": {
                    "description": "",
                    "type": "string"
                },
                "listSelectedValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `listSelectedValue` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "requireAll": {
                    "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
                    "type": "string"
                },
                "requireAllMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireAll` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "requireInitialOnSharedChange": {
                    "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
                    "type": "string"
                },
                "requireInitialOnSharedChangeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireInitialOnSharedChange` property is editable."
                },
                "senderRequired": {
                    "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                    "type": "string"
                },
                "senderRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `senderRequired` property is editable."
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `shared` property is editable."
                },
                "shareToRecipients": {
                    "description": "",
                    "type": "string"
                },
                "shareToRecipientsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "The value to use when the item is selected.",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "This tab offers a list of options to choose from.\nThe `listItems`\nproperty contains a list of\n[`listItem`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/)\nobjects to specify the selectable options.\n"
        },
        "listCustomField": {
            "type": "object",
            "properties": {
                "configurationType": {
                    "description": "If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "fieldId": {
                    "description": "An ID used to specify a custom field.",
                    "type": "string"
                },
                "listItems": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "The name of the custom field.",
                    "type": "string"
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "show": {
                    "description": "A boolean indicating if the value should be displayed.",
                    "type": "string"
                },
                "value": {
                    "description": "The value of the custom field.\n\nMaximum Length: 100 characters.",
                    "type": "string"
                }
            },
            "description": "This object represents a list custom field from which envelope creators and senders can select custom data."
        },
        "listItem": {
            "type": "object",
            "properties": {
                "selected": {
                    "description": "When set to **true**, indicates that this item is the default selection shown to a signer. \n\nOnly one selection can be set as the default.",
                    "type": "string"
                },
                "selectedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `selected` property is editable."
                },
                "text": {
                    "description": "Specifies the text that is shown in the dropdown list. ",
                    "type": "string"
                },
                "textMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "value": {
                    "description": "Specifies the value that is used when the list item is selected.",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                }
            },
            "description": "One of the selectable items\nin the `listItems` property\nof a [`list`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/) tab."
        },
        "localePolicy": {
            "type": "object",
            "properties": {
                "addressFormat": {
                    "description": "",
                    "type": "string"
                },
                "addressFormatMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowRegion": {
                    "description": "",
                    "type": "string"
                },
                "calendarType": {
                    "description": "",
                    "type": "string"
                },
                "calendarTypeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "cultureName": {
                    "description": "",
                    "type": "string"
                },
                "cultureNameMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "currencyCode": {
                    "description": "",
                    "type": "string"
                },
                "currencyCodeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `currencyCode` property is editable."
                },
                "currencyNegativeFormat": {
                    "description": "",
                    "type": "string"
                },
                "currencyNegativeFormatMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "currencyPositiveFormat": {
                    "description": "",
                    "type": "string"
                },
                "currencyPositiveFormatMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "customDateFormat": {
                    "description": "",
                    "type": "string"
                },
                "customSignDateFormat": {
                    "description": "",
                    "type": "string"
                },
                "customSignTimeFormat": {
                    "description": "",
                    "type": "string"
                },
                "customTimeFormat": {
                    "description": "",
                    "type": "string"
                },
                "dateFormat": {
                    "description": "",
                    "type": "string"
                },
                "dateFormatMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "effectiveAddressFormat": {
                    "description": "",
                    "type": "string"
                },
                "effectiveCalendarType": {
                    "description": "",
                    "type": "string"
                },
                "effectiveCurrencyCode": {
                    "description": "",
                    "type": "string"
                },
                "effectiveCurrencyNegativeFormat": {
                    "description": "",
                    "type": "string"
                },
                "effectiveCurrencyPositiveFormat": {
                    "description": "",
                    "type": "string"
                },
                "effectiveCustomDateFormat": {
                    "description": "",
                    "type": "string"
                },
                "effectiveCustomTimeFormat": {
                    "description": "",
                    "type": "string"
                },
                "effectiveDateFormat": {
                    "description": "",
                    "type": "string"
                },
                "effectiveInitialFormat": {
                    "description": "",
                    "type": "string"
                },
                "effectiveNameFormat": {
                    "description": "",
                    "type": "string"
                },
                "effectiveTimeFormat": {
                    "description": "",
                    "type": "string"
                },
                "effectiveTimeZone": {
                    "description": "",
                    "type": "string"
                },
                "initialFormat": {
                    "description": "",
                    "type": "string"
                },
                "initialFormatMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "nameFormat": {
                    "description": "",
                    "type": "string"
                },
                "nameFormatMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "signDateFormat": {
                    "description": "",
                    "type": "string"
                },
                "signDateFormatMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signDateFormat` property is editable.\n"
                },
                "signTimeFormat": {
                    "description": "",
                    "type": "string"
                },
                "signTimeFormatMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `signTimeFormat` property is editable.\n"
                },
                "timeFormat": {
                    "description": "",
                    "type": "string"
                },
                "timeFormatMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "timeZone": {
                    "description": "",
                    "type": "string"
                },
                "timeZoneMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                }
            }
        },
        "localePolicyTab": {
            "type": "object",
            "properties": {
                "addressFormat": {
                    "description": "",
                    "type": "string"
                },
                "calendarType": {
                    "description": "",
                    "type": "string"
                },
                "cultureName": {
                    "description": "",
                    "type": "string"
                },
                "currencyCode": {
                    "description": "",
                    "type": "string"
                },
                "currencyNegativeFormat": {
                    "description": "",
                    "type": "string"
                },
                "currencyPositiveFormat": {
                    "description": "",
                    "type": "string"
                },
                "customDateFormat": {
                    "description": "",
                    "type": "string"
                },
                "customTimeFormat": {
                    "description": "",
                    "type": "string"
                },
                "dateFormat": {
                    "description": "",
                    "type": "string"
                },
                "initialFormat": {
                    "description": "",
                    "type": "string"
                },
                "nameFormat": {
                    "description": "",
                    "type": "string"
                },
                "timeFormat": {
                    "description": "",
                    "type": "string"
                },
                "timeZone": {
                    "description": "",
                    "type": "string"
                },
                "useLongCurrencyFormat": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "lockInformation": {
            "type": "object",
            "properties": {
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "lockDurationInSeconds": {
                    "description": "Sets the time, in seconds, until the lock expires when there is no activity on the envelope.\n\nIf no value is entered, then the default value of 300 seconds is used. The maximum value is 1,800 seconds.\n\nThe lock duration can be extended.\n",
                    "type": "string"
                },
                "lockedByApp": {
                    "description": "Specifies the friendly name of  the application that is locking the envelope.",
                    "type": "string"
                },
                "lockedByUser": {
                    "$ref": "#/definitions/userInfo",
                    "description": "A complex type containing information about the user that has the envelope or template locked."
                },
                "lockedUntilDateTime": {
                    "description": "The datetime until the envelope lock expires.",
                    "type": "string"
                },
                "lockToken": {
                    "description": "A unique identifier provided to the owner of the envelope lock.   Used to prove ownership of the lock.",
                    "type": "string"
                },
                "lockType": {
                    "description": "The type of envelope lock.  Currently \"edit\" is the only supported type.",
                    "type": "string"
                },
                "useScratchPad": {
                    "description": "Reserved for future use.\n\nIndicates whether a scratchpad is used for editing information.\n ",
                    "type": "string"
                }
            }
        },
        "lockRequest": {
            "type": "object",
            "properties": {
                "lockDurationInSeconds": {
                    "description": "The number of seconds to lock the envelope for editing.  Must be greater than 0 seconds.",
                    "type": "string"
                },
                "lockedByApp": {
                    "description": "A friendly name of the application used to lock the envelope.  Will be used in error messages to the user when lock conflicts occur.",
                    "type": "string"
                },
                "lockType": {
                    "description": "The type of envelope lock.  Currently \"edit\" is the only supported type.",
                    "type": "string"
                },
                "templatePassword": {
                    "description": "",
                    "type": "string"
                },
                "useScratchPad": {
                    "description": "Reserved for future use.\n\nIndicates whether a scratchpad is used for editing information.\n ",
                    "type": "string"
                }
            },
            "description": "This request object contains information about the lock that you want to create or update."
        },
        "loginAccount": {
            "type": "object",
            "properties": {
                "accountId": {
                    "description": "The account ID associated with the envelope.",
                    "type": "string"
                },
                "accountIdGuid": {
                    "description": "The GUID associated with the account ID.",
                    "type": "string"
                },
                "baseUrl": {
                    "description": "The URL that should be used for successive calls to this account. It includes the protocal (https), the DocuSign server where the account is located, and the account number. Use this Url to make API calls against this account. Many of the API calls provide Uri's that are relative to this baseUrl.",
                    "type": "string"
                },
                "email": {
                    "description": "The email address for the user.",
                    "type": "string"
                },
                "isDefault": {
                    "description": "This value is true if this is the default account for the user, otherwise false is returned.",
                    "type": "string"
                },
                "loginAccountSettings": {
                    "description": "A list of settings on the acccount that indicate what features are available.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nameValue"
                    }
                },
                "loginUserSettings": {
                    "description": "A list of user-level settings that indicate what user-specific features are available.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nameValue"
                    }
                },
                "name": {
                    "description": "The name associated with the account.",
                    "type": "string"
                },
                "siteDescription": {
                    "description": "An optional descirption of the site that hosts the account.",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                },
                "userName": {
                    "description": "The name of this user as defined by the account.",
                    "type": "string"
                }
            }
        },
        "loginInformation": {
            "type": "object",
            "properties": {
                "apiPassword": {
                    "description": "Contains a token that can be used for authentication in API calls instead of using the user name and password. Only returned if the `api_password=true` query string is added to the URL.",
                    "type": "string"
                },
                "loginAccounts": {
                    "description": "The list of accounts that authenticating user is a member of.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/loginAccount"
                    }
                }
            }
        },
        "matchBox": {
            "type": "object",
            "properties": {
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                }
            }
        },
        "memberGroupSharedItem": {
            "type": "object",
            "properties": {
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "group": {
                    "$ref": "#/definitions/group",
                    "description": "The group sharing the item."
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                }
            },
            "description": "Information about items shared among groups."
        },
        "memberSharedItems": {
            "type": "object",
            "properties": {
                "envelopes": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sharedItem"
                    }
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "folders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/folderSharedItem"
                    }
                },
                "templates": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/templateSharedItem"
                    }
                },
                "user": {
                    "$ref": "#/definitions/userInfo",
                    "description": "Information about the user requesting sharing information."
                }
            },
            "description": "Information about shared items."
        },
        "mergeField": {
            "description": "Contains information for transfering values between Salesforce data fields and DocuSign Tabs.",
            "type": "object",
            "properties": {
                "allowSenderToEdit": {
                    "description": "When set to **true**, the sender can modify the value of the custom tab during the sending process.",
                    "type": "string"
                },
                "allowSenderToEditMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates if the sender can edit the `allowSenderToEdit` property."
                },
                "configurationType": {
                    "description": "If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.",
                    "type": "string"
                },
                "configurationTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates if the sender can edit the `configurationType` property."
                },
                "path": {
                    "description": "Sets the object associated with the custom tab. Currently this is the Salesforce Object.",
                    "type": "string"
                },
                "pathExtended": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pathExtendedElement"
                    }
                },
                "pathExtendedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "pathMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `path` property is editable.\n"
                },
                "row": {
                    "description": "Specifies the row number in a Salesforce table that the merge field value corresponds to.",
                    "type": "string"
                },
                "rowMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `row` property is editable.\n"
                },
                "writeBack": {
                    "description": "When wet to true, the information entered in the tab automatically updates the related Salesforce data when an envelope is completed.",
                    "type": "string"
                },
                "writeBackMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates if the sender can edit the `writeBack` property."
                }
            }
        },
        "mobileNotifierConfiguration": {
            "type": "object",
            "properties": {
                "deviceId": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "platform": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "mobileNotifierConfigurationInformation": {
            "type": "object",
            "properties": {
                "mobileNotifierConfigurations": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mobileNotifierConfiguration"
                    }
                }
            }
        },
        "money": {
            "type": "object",
            "properties": {
                "amountInBaseUnit": {
                    "description": "",
                    "type": "string"
                },
                "currency": {
                    "description": "",
                    "type": "string"
                },
                "displayAmount": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Describes information\nabout the `total` of a payment.\n"
        },
        "nameValue": {
            "type": "object",
            "properties": {
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "name": {
                    "description": "The name or key of a name/value pair.",
                    "type": "string"
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "value": {
                    "description": "The value field of a name/value pair.",
                    "type": "string"
                }
            },
            "description": "A name-value pair that describes an item and provides a value for the item."
        },
        "newAccountDefinition": {
            "type": "object",
            "properties": {
                "accountName": {
                    "description": "The account name for the new account.",
                    "type": "string"
                },
                "accountSettings": {
                    "$ref": "#/definitions/accountSettingsInformation",
                    "description": "The list of account settings. These determine the features available for the account. Note that some features are determined by the plan used to create the account, and cannot be overridden."
                },
                "addressInformation": {
                    "$ref": "#/definitions/accountAddress",
                    "description": "A complex type that contains the following information for the new account: `Street1`, `Street2`, `City`, `State`, `Zip`, `Phone`, and `Fax`."
                },
                "creditCardInformation": {
                    "$ref": "#/definitions/creditCardInformation",
                    "description": "A complex type that has information about the credit card used to pay for this account."
                },
                "directDebitProcessorInformation": {
                    "$ref": "#/definitions/directDebitProcessorInformation",
                    "description": "Information about the bank that processes direct debits for the payment plan."
                },
                "distributorCode": {
                    "description": "The code that identifies the billing plan groups and plans for the new account.",
                    "type": "string"
                },
                "distributorPassword": {
                    "description": "The password for the distributorCode.",
                    "type": "string"
                },
                "enablePreAuth": {
                    "description": "",
                    "type": "string"
                },
                "envelopePartitionId": {
                    "description": "",
                    "type": "string"
                },
                "initialUser": {
                    "$ref": "#/definitions/userInformation",
                    "description": "A complex type with the initial user information for the new account. Note that some user information is set internally based on the plan and cannot be overridden."
                },
                "paymentMethod": {
                    "description": "",
                    "type": "string"
                },
                "paymentProcessor": {
                    "description": "",
                    "type": "string"
                },
                "paymentProcessorInformation": {
                    "$ref": "#/definitions/paymentProcessorInformation",
                    "description": "Information about the entity that processes payments for the billing plan."
                },
                "planInformation": {
                    "$ref": "#/definitions/planInformation",
                    "description": "An object used to identify the features and attributes of the account being created."
                },
                "processPayment": {
                    "description": "",
                    "type": "string"
                },
                "referralInformation": {
                    "$ref": "#/definitions/referralInformation",
                    "description": "A complex type that contains properties for entering referral and discount information."
                },
                "socialAccountInformation": {
                    "$ref": "#/definitions/socialAccountInformation",
                    "description": "Contains properties that map a DocuSign user to a social account (Facebook, Yahoo, etc.)"
                },
                "taxExemptId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "newAccountSummary": {
            "type": "object",
            "properties": {
                "accountId": {
                    "description": "The account ID associated with the envelope.",
                    "type": "string"
                },
                "accountIdGuid": {
                    "description": "The GUID associated with the account ID.",
                    "type": "string"
                },
                "accountName": {
                    "description": "The account name for the new account.",
                    "type": "string"
                },
                "apiPassword": {
                    "description": "Contains a token that can be used for authentication in API calls instead of using the user name and password.",
                    "type": "string"
                },
                "baseUrl": {
                    "description": "The URL that should be used for successive calls to this account. It includes the protocal (https), the DocuSign server where the account is located, and the account number. Use this Url to make API calls against this account. Many of the API calls provide Uri's that are relative to this baseUrl.",
                    "type": "string"
                },
                "billingPlanPreview": {
                    "$ref": "#/definitions/billingPlanPreview",
                    "description": ""
                },
                "userId": {
                    "description": "Specifies the user ID of the new user.",
                    "type": "string"
                }
            }
        },
        "newUser": {
            "type": "object",
            "properties": {
                "apiPassword": {
                    "description": "Contains a token that can be used for authentication in API calls instead of using the user name and password.",
                    "type": "string"
                },
                "createdDateTime": {
                    "description": "Indicates the date and time the item was created.",
                    "type": "string"
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "membershipId": {
                    "description": "",
                    "type": "string"
                },
                "permissionProfileId": {
                    "description": "",
                    "type": "string"
                },
                "permissionProfileName": {
                    "description": "",
                    "type": "string"
                },
                "uri": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "Specifies the user ID for the new user.",
                    "type": "string"
                },
                "userName": {
                    "description": "",
                    "type": "string"
                },
                "userStatus": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Object representing a new user."
        },
        "newUsersDefinition": {
            "type": "object",
            "properties": {
                "newUsers": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInformation"
                    }
                }
            }
        },
        "newUsersSummary": {
            "type": "object",
            "properties": {
                "newUsers": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/newUser"
                    }
                }
            },
            "description": "Object representing a summary of data for new users."
        },
        "notarize": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that alerts notary recipients that\nthey must take action on the page.\nOnly one notarize tab can appear on a page."
        },
        "notary": {
            "type": "object",
            "properties": {
                "createdDate": {
                    "description": "",
                    "type": "string"
                },
                "enabled": {
                    "description": "",
                    "type": "string"
                },
                "searchable": {
                    "description": "",
                    "type": "string"
                },
                "userInfo": {
                    "$ref": "#/definitions/userInformation",
                    "description": "Information about the user registering to be a notary."
                }
            }
        },
        "notaryContactDetails": {
            "type": "object",
            "properties": {
                "hasDocusignCertificate": {
                    "description": "",
                    "type": "string"
                },
                "jurisdictions": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jurisdictionSummary"
                    }
                }
            }
        },
        "notaryHost": {
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "accessCodeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `accessCode` property is editable. This property is read-only."
                },
                "addAccessCodeToEmail": {
                    "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
                    "type": "string"
                },
                "allowSystemOverrideForLockedRecipient": {
                    "description": "",
                    "type": "string"
                },
                "autoRespondedReason": {
                    "description": "",
                    "type": "string"
                },
                "bulkSendV2Recipient": {
                    "description": "",
                    "type": "string"
                },
                "clientUserId": {
                    "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "completedCount": {
                    "description": "",
                    "type": "string"
                },
                "customFields": {
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "declinedDateTime": {
                    "description": "The date and time the recipient declined the document.",
                    "type": "string"
                },
                "declinedReason": {
                    "description": "The reason the recipient declined the document.",
                    "type": "string"
                },
                "deliveredDateTime": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethod": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethodMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "designatorId": {
                    "description": "",
                    "type": "string"
                },
                "designatorIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "documentVisibility": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentVisibility"
                    }
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "emailMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `email` property is editable. This property is read-only."
                },
                "emailNotification": {
                    "$ref": "#/definitions/recipientEmailNotification",
                    "description": "A complex type that contains information sets the language of the recipient's email information. \n\n**IMPORTANT**: If you enable email notification for one recipient, you must enable email notification for all recipients as it overrides the Envelope Subject and `EmailBlurb` property settings. "
                },
                "embeddedRecipientStartURL": {
                    "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "faxNumber": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "faxNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "hostRecipientId": {
                    "description": "",
                    "type": "string"
                },
                "idCheckConfigurationName": {
                    "description": "Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.",
                    "type": "string"
                },
                "idCheckConfigurationNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `idCheckConfigurationName` property is editable. This property is read-only."
                },
                "idCheckInformationInput": {
                    "$ref": "#/definitions/idCheckInformationInput",
                    "description": "An object that contains input information related to a recipient ID check."
                },
                "identityVerification": {
                    "$ref": "#/definitions/recipientIdentityVerification",
                    "description": "Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address)."
                },
                "inheritEmailNotificationConfiguration": {
                    "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                    "type": "string"
                },
                "lockedRecipientPhoneAuthEditable": {
                    "description": "",
                    "type": "string"
                },
                "lockedRecipientSmsEditable": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "note": {
                    "description": "Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.",
                    "type": "string"
                },
                "noteMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `note` property is editable. This property is read-only."
                },
                "phoneAuthentication": {
                    "$ref": "#/definitions/recipientPhoneAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:\n\n* `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.\n* `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.\n* `recordVoicePrint`: Reserved for DocuSign.\n* `validateRecipProvidedNumber`: Reserved for DocuSign.\n\n"
                },
                "recipientAttachments": {
                    "description": "Reserved:",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAttachment"
                    }
                },
                "recipientAuthenticationStatus": {
                    "$ref": "#/definitions/authenticationStatus",
                    "description": "Information about the recipient's authentication status. This property is read-only."
                },
                "recipientFeatureMetadata": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featureAvailableMetadata"
                    }
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientType": {
                    "description": "",
                    "type": "string"
                },
                "recipientTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientType` property is editable. This property is read-only."
                },
                "requireIdLookup": {
                    "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                    "type": "string"
                },
                "requireIdLookupMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireIdLookup` property is editable. This property is read-only."
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "routingOrder": {
                    "description": "Specifies the routing order of the recipient in the envelope. ",
                    "type": "string"
                },
                "routingOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `routingOrder` property is editable. This property is read-only."
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "signedDateTime": {
                    "description": "Reserved: For DocuSign use only. ",
                    "type": "string"
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                },
                "signingGroupIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signingGroupId` property is editable. This property is read-only."
                },
                "signingGroupName": {
                    "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
                    "type": "string"
                },
                "signingGroupUsers": {
                    "description": "A complex type that contains information about users in the signing group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                },
                "smsAuthentication": {
                    "$ref": "#/definitions/recipientSMSAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `SMS Auth $`, you use this complex type to provide the recipient authentication method details. It contains the element `senderProvidedNumbers`, which is an array of phone numbers that the recipient can use for SMS text authentication. \n\n"
                },
                "socialAuthentications": {
                    "description": " Lists the social ID type that can be used for recipient authentication.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/socialAuthentication"
                    }
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusCode": {
                    "description": "",
                    "type": "string"
                },
                "suppressEmails": {
                    "description": "",
                    "type": "string"
                },
                "tabs": {
                    "$ref": "#/definitions/tabs",
                    "description": "A list of tabs, which are represented graphically as symbols on documents at the time of signing. Tabs show recipients where to sign, initial, or enter data. They may also display data to the recipients."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "totalTabCount": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object is used only when `inPersonSigningType` in the `inPersonSigner` object is `notary`.\n\nIt describes information about the notary host.\nThe following information is required\nwhen using the eNotary in-person signing flow:\n\n* `name`: Specifies the notary's full legal name.\n* `email`: Specifies the notary's email address.\n* `recipientId`: A unique ID number for the notary signing host.\n"
        },
        "notaryJournal": {
            "type": "object",
            "properties": {
                "createdDate": {
                    "description": "",
                    "type": "string"
                },
                "documentName": {
                    "description": "",
                    "type": "string"
                },
                "jurisdiction": {
                    "$ref": "#/definitions/jurisdiction",
                    "description": "The notary's jurisdiction.\n"
                },
                "notaryJournalId": {
                    "description": "",
                    "type": "string"
                },
                "notaryJournalMetaData": {
                    "$ref": "#/definitions/notaryJournalMetaData",
                    "description": "Additional journal data such as the witness list and signature image."
                },
                "signerName": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "notaryJournalCredibleWitness": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "signatureImage": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "notaryJournalList": {
            "type": "object",
            "properties": {
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "notaryJournals": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/notaryJournal"
                    }
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            }
        },
        "notaryJournalMetaData": {
            "type": "object",
            "properties": {
                "comment": {
                    "description": "",
                    "type": "string"
                },
                "credibleWitnesses": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/notaryJournalCredibleWitness"
                    }
                },
                "signatureImage": {
                    "description": "",
                    "type": "string"
                },
                "signerIdType": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "notaryJurisdiction": {
            "type": "object",
            "properties": {
                "commissionExpiration": {
                    "description": "",
                    "type": "string"
                },
                "commissionId": {
                    "description": "",
                    "type": "string"
                },
                "county": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "jurisdiction": {
                    "$ref": "#/definitions/jurisdiction",
                    "description": "Description of the jurisdiction for this notary.\nThis is a read-only property."
                },
                "registeredName": {
                    "description": "",
                    "type": "string"
                },
                "sealType": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "A notary jurisdiction."
        },
        "notaryJurisdictionList": {
            "type": "object",
            "properties": {
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "notaryJurisdictions": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/notaryJurisdiction"
                    }
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            },
            "description": "A paged list of jurisdictions."
        },
        "notaryRecipient": {
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "accessCodeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `accessCode` property is editable. This property is read-only."
                },
                "addAccessCodeToEmail": {
                    "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
                    "type": "string"
                },
                "additionalNotifications": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAdditionalNotification"
                    }
                },
                "agentCanEditEmail": {
                    "description": "",
                    "type": "string"
                },
                "agentCanEditName": {
                    "description": "",
                    "type": "string"
                },
                "allowSystemOverrideForLockedRecipient": {
                    "description": "",
                    "type": "string"
                },
                "autoNavigation": {
                    "description": "",
                    "type": "string"
                },
                "autoRespondedReason": {
                    "description": "",
                    "type": "string"
                },
                "bulkRecipientsUri": {
                    "description": "Contains a URI for an endpoint that allows you to easily retrieve bulk recipient information.",
                    "type": "string"
                },
                "bulkSendV2Recipient": {
                    "description": "",
                    "type": "string"
                },
                "canSignOffline": {
                    "description": "When set to **true**, specifies that the signer can perform the signing ceremony offline.",
                    "type": "string"
                },
                "clientUserId": {
                    "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "completedCount": {
                    "description": "",
                    "type": "string"
                },
                "consentDetailsList": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/consentDetails"
                    }
                },
                "creationReason": {
                    "description": "",
                    "type": "string"
                },
                "customFields": {
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "declinedDateTime": {
                    "description": "The date and time the recipient declined the document.",
                    "type": "string"
                },
                "declinedReason": {
                    "description": "The reason the recipient declined the document.",
                    "type": "string"
                },
                "defaultRecipient": {
                    "description": "",
                    "type": "string"
                },
                "delegatedBy": {
                    "$ref": "#/definitions/delegationInfo",
                    "description": ""
                },
                "delegatedTo": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/delegationInfo"
                    }
                },
                "deliveredDateTime": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethod": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethodMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "designatorId": {
                    "description": "",
                    "type": "string"
                },
                "designatorIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "documentVisibility": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentVisibility"
                    }
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "emailMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `email` property is editable. This property is read-only."
                },
                "emailNotification": {
                    "$ref": "#/definitions/recipientEmailNotification",
                    "description": "A complex type that contains information sets the language of the recipient's email information. \n\n**IMPORTANT**: If you enable email notification for one recipient, you must enable email notification for all recipients as it overrides the Envelope Subject and `EmailBlurb` property settings. "
                },
                "emailRecipientPostSigningURL": {
                    "description": "",
                    "type": "string"
                },
                "embeddedRecipientStartURL": {
                    "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "excludedDocuments": {
                    "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "faxNumber": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "faxNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "firstName": {
                    "description": "The user's first name. \nMaximum Length: 50 characters.",
                    "type": "string"
                },
                "firstNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `firstName` property is editable. This property is read-only."
                },
                "fullName": {
                    "description": "",
                    "type": "string"
                },
                "fullNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "idCheckConfigurationName": {
                    "description": "Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.",
                    "type": "string"
                },
                "idCheckConfigurationNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `idCheckConfigurationName` property is editable. This property is read-only."
                },
                "idCheckInformationInput": {
                    "$ref": "#/definitions/idCheckInformationInput",
                    "description": "An object that contains input information related to a recipient ID check."
                },
                "identityVerification": {
                    "$ref": "#/definitions/recipientIdentityVerification",
                    "description": "Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address)."
                },
                "inheritEmailNotificationConfiguration": {
                    "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                    "type": "string"
                },
                "isBulkRecipient": {
                    "description": "",
                    "type": "string"
                },
                "isBulkRecipientMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "lastName": {
                    "description": "",
                    "type": "string"
                },
                "lastNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `lastName` property is editable. This property is read-only."
                },
                "liveOakStartURL": {
                    "description": "",
                    "type": "string"
                },
                "lockedRecipientPhoneAuthEditable": {
                    "description": "",
                    "type": "string"
                },
                "lockedRecipientSmsEditable": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "notaryId": {
                    "description": "",
                    "type": "string"
                },
                "notarySignerEmailSent": {
                    "description": "",
                    "type": "string"
                },
                "notarySigners": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "notarySourceType": {
                    "description": "",
                    "type": "string"
                },
                "notaryThirdPartyPartner": {
                    "description": "",
                    "type": "string"
                },
                "notaryType": {
                    "description": "",
                    "type": "string"
                },
                "note": {
                    "description": "Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.",
                    "type": "string"
                },
                "noteMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `note` property is editable. This property is read-only."
                },
                "offlineAttributes": {
                    "$ref": "#/definitions/offlineAttributes",
                    "description": "Reserved for DocuSign."
                },
                "phoneAuthentication": {
                    "$ref": "#/definitions/recipientPhoneAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:\n\n* `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.\n* `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.\n* `recordVoicePrint`: Reserved for DocuSign.\n* `validateRecipProvidedNumber`: Reserved for DocuSign.\n\n"
                },
                "phoneNumber": {
                    "$ref": "#/definitions/recipientPhoneNumber",
                    "description": "Describes the recipient phone number."
                },
                "proofFile": {
                    "$ref": "#/definitions/recipientProofFile",
                    "description": ""
                },
                "recipientAttachments": {
                    "description": "Reserved:",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAttachment"
                    }
                },
                "recipientAuthenticationStatus": {
                    "$ref": "#/definitions/authenticationStatus",
                    "description": "Information about the recipient's authentication status. This property is read-only."
                },
                "recipientFeatureMetadata": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featureAvailableMetadata"
                    }
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientSignatureProviders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientSignatureProvider"
                    }
                },
                "recipientSuppliesTabs": {
                    "description": "",
                    "type": "string"
                },
                "recipientType": {
                    "description": "",
                    "type": "string"
                },
                "recipientTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientType` property is editable. This property is read-only."
                },
                "requireIdLookup": {
                    "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                    "type": "string"
                },
                "requireIdLookupMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireIdLookup` property is editable. This property is read-only."
                },
                "requireSignerCertificate": {
                    "description": "",
                    "type": "string"
                },
                "requireSignOnPaper": {
                    "description": "",
                    "type": "string"
                },
                "requireUploadSignature": {
                    "description": "",
                    "type": "string"
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "routingOrder": {
                    "description": "Specifies the routing order of the recipient in the envelope. ",
                    "type": "string"
                },
                "routingOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `routingOrder` property is editable. This property is read-only."
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "signatureInfo": {
                    "$ref": "#/definitions/recipientSignatureInformation",
                    "description": "Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.\n\nUsed only with recipient types In Person Signers and Signers."
                },
                "signedDateTime": {
                    "description": "Reserved: For DocuSign use only. ",
                    "type": "string"
                },
                "signInEachLocation": {
                    "description": "When set to **true**, specifies that the signer must sign in all locations.",
                    "type": "string"
                },
                "signInEachLocationMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signInEachLocation` property is editable. This property is read-only."
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                },
                "signingGroupIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signingGroupId` property is editable. This property is read-only."
                },
                "signingGroupName": {
                    "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
                    "type": "string"
                },
                "signingGroupUsers": {
                    "description": "A complex type that contains information about users in the signing group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                },
                "smsAuthentication": {
                    "$ref": "#/definitions/recipientSMSAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `SMS Auth $`, you use this complex type to provide the recipient authentication method details. It contains the element `senderProvidedNumbers`, which is an array of phone numbers that the recipient can use for SMS text authentication. \n\n"
                },
                "socialAuthentications": {
                    "description": " Lists the social ID type that can be used for recipient authentication.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/socialAuthentication"
                    }
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusCode": {
                    "description": "",
                    "type": "string"
                },
                "suppressEmails": {
                    "description": "",
                    "type": "string"
                },
                "tabs": {
                    "$ref": "#/definitions/tabs",
                    "description": "A list of tabs, which are represented graphically as symbols on documents at the time of signing. Tabs show recipients where to sign, initial, or enter data. They may also display data to the recipients."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "totalTabCount": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "notaryResult": {
            "type": "object",
            "properties": {
                "jurisdictions": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jurisdiction"
                    }
                },
                "notary": {
                    "$ref": "#/definitions/notary",
                    "description": ""
                }
            },
            "description": "Describes a single notary jurisdiction."
        },
        "notarySeal": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "scaleValue": {
                    "description": "",
                    "type": "string"
                },
                "scaleValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `scaleValue` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/"
        },
        "note": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies the tool tip text for the tab.",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `shared` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that displays additional information, in the form of a\nnote, for the recipient.\n"
        },
        "notification": {
            "description": "A complex element that specifies the notification options for the envelope. It consists of:\n\n* useAccountDefaults - When set to **true**, the account default notification settings are used for the envelope. \n* reminders - A complex element that specifies reminder settings for the envelope. It consists of: \n\n   * reminderEnabled - When set to **true**, a reminder message is sent to the recipient.\n   * reminderDelay - An interger that sets the number of days after the recipient receives the envelope that reminder emails are sent to the recipient. \n   * reminderFrequency - An interger that sets the interval, in days, between reminder emails. \n\n* expirations - A complex element that specifies the expiration settings for the envelope. It consists of:\n\n   * expireEnabled - When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used. \n   * expireAfter - An integer that sets the number of days the envelope is active.\n   * expireWarn - An integer that sets the number of days before envelope expiration that an expiration warning email is sent to the recipient. If set to 0 (zero), no warning email is sent.",
            "type": "object",
            "properties": {
                "expirations": {
                    "$ref": "#/definitions/expirations",
                    "description": "A complex element that specifies the expiration settings for the envelope."
                },
                "reminders": {
                    "$ref": "#/definitions/reminders",
                    "description": "A complex element that specifies reminder settings for the envelope."
                },
                "useAccountDefaults": {
                    "description": "When set to **true**, the account default notification settings are used for the envelope.",
                    "type": "string"
                }
            }
        },
        "notificationDefaults": {
            "type": "object",
            "properties": {
                "apiEmailNotifications": {
                    "$ref": "#/definitions/notificationDefaultSettings",
                    "description": "The default notification settings for envelopes sent by using the console."
                },
                "emailNotifications": {
                    "$ref": "#/definitions/notificationDefaultSettings",
                    "description": "The default notification settings for envelopes sent by using the API."
                }
            }
        },
        "notificationDefaultSettings": {
            "type": "object",
            "properties": {
                "senderEmailNotifications": {
                    "$ref": "#/definitions/senderEmailNotifications",
                    "description": " \nAn array of email notifications that sets the email the user receives when they are a sender. When the specific email notification is set to true, the user will receive those types of email notifications from DocuSign. \n\nThe user inherits the default account sender email notification settings when the user is created. The email notifications are:\n\n* envelopeComplete\n* changedSigner \n* senderEnvelopeDeclined \n* withdrawnConsent \n* recipientViewed \n* deliveryFailed \n "
                },
                "signerEmailNotifications": {
                    "$ref": "#/definitions/signerEmailNotifications",
                    "description": "An array of email notifications that specifies the email the user receives when they are a recipient. When the specific email notification is set to true, the user receives those types of email notifications from DocuSign. The user inherits the default account email notification settings when the user is created.\n"
                }
            },
            "description": "Contains details about the default notification settings for the envelope notifications that senders and signers receive."
        },
        "number": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "concealValueOnDocumentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `concealValueOnDocument` property is editable."
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "disableAutoSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `disableAutoSize` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "formula": {
                    "description": "The Formula string contains the TabLabel for the reference tabs used in the formula and calculation operators. Each TabLabel must be contained in brackets. \nMaximum Length: 2000 characters.\n\n*Example*: Three tabs (TabLabels: Line1, Line2, and Tax) need to be added together. The formula string would be: \n\n[Line1]+[Line2]+[Tax]",
                    "type": "string"
                },
                "formulaMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata indicating if the sender can edit the `formula` property."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "isPaymentAmount": {
                    "description": "When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number. ",
                    "type": "string"
                },
                "isPaymentAmountMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "maxLength": {
                    "description": "An optional value that describes the maximum length of the property when the property is a string.",
                    "type": "string"
                },
                "maxLengthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `maxLength` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies the tool tip text for the tab.",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "requireAll": {
                    "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
                    "type": "string"
                },
                "requireAllMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireAll` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "requireInitialOnSharedChange": {
                    "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
                    "type": "string"
                },
                "requireInitialOnSharedChangeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireInitialOnSharedChange` property is editable."
                },
                "senderRequired": {
                    "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                    "type": "string"
                },
                "senderRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `senderRequired` property is editable."
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `shared` property is editable."
                },
                "shareToRecipients": {
                    "description": "",
                    "type": "string"
                },
                "shareToRecipientsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "validationMessage": {
                    "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                    "type": "string"
                },
                "validationMessageMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `validationMessage` property is editable."
                },
                "validationPattern": {
                    "description": "A regular expression used to validate input for the tab.",
                    "type": "string"
                },
                "validationPatternMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `validationPattern` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that allows the recipient to enter numbers and decimal\n(.) points.\n"
        },
        "numerical": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "concealValueOnDocumentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "disableAutoSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": ""
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "maxLength": {
                    "description": "An optional value that describes the maximum length of the property when the property is a string.",
                    "type": "string"
                },
                "maxLengthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "maxNumericalValue": {
                    "description": "",
                    "type": "string"
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": ""
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "minNumericalValue": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "numericalValue": {
                    "description": "",
                    "type": "string"
                },
                "originalNumericalValue": {
                    "description": "",
                    "type": "string"
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "requireAll": {
                    "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
                    "type": "string"
                },
                "requireAllMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "requireInitialOnSharedChange": {
                    "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
                    "type": "string"
                },
                "requireInitialOnSharedChangeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "senderRequired": {
                    "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                    "type": "string"
                },
                "senderRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "shareToRecipients": {
                    "description": "",
                    "type": "string"
                },
                "shareToRecipientsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": ""
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "validationType": {
                    "description": "",
                    "type": "string"
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                }
            }
        },
        "oauthAccess": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "Access token information.",
                    "type": "string"
                },
                "data": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nameValue"
                    }
                },
                "expires_in": {
                    "description": "",
                    "type": "string"
                },
                "refresh_token": {
                    "description": "",
                    "type": "string"
                },
                "scope": {
                    "description": "Must be set to \"api\".",
                    "type": "string"
                },
                "token_type": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "offlineAttributes": {
            "description": "Reserved for DocuSign use.",
            "type": "object",
            "properties": {
                "accountEsignId": {
                    "description": "A GUID identifying the account associated with the consumer disclosure",
                    "type": "string"
                },
                "deviceModel": {
                    "description": "A string containing information about the model of the device used for offline signing.",
                    "type": "string"
                },
                "deviceName": {
                    "description": "A string containing information about the type of device used for offline signing.",
                    "type": "string"
                },
                "gpsLatitude": {
                    "description": "A string containing the latitude of the device location at the time of signing.",
                    "type": "string"
                },
                "gpsLongitude": {
                    "description": "A string containing the longitude of the device location at the time of signing.",
                    "type": "string"
                },
                "offlineSigningHash": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "page": {
            "description": "Description of a page of a document.",
            "type": "object",
            "properties": {
                "dpi": {
                    "description": "The number of dots per inch used for the page image.",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "imageBytes": {
                    "description": "",
                    "type": "string"
                },
                "mimeType": {
                    "description": "",
                    "type": "string"
                },
                "pageId": {
                    "description": "",
                    "type": "string"
                },
                "sequence": {
                    "description": "",
                    "type": "string"
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                }
            }
        },
        "pageImages": {
            "type": "object",
            "properties": {
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "pages": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/page"
                    }
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            }
        },
        "pageRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "",
                    "type": "string"
                },
                "rotate": {
                    "description": "Sets the direction the page image is rotated. The possible settings are: left or right",
                    "type": "string"
                }
            }
        },
        "paletteItemSettings": {
            "type": "object",
            "properties": {
                "show": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "paletteSettings": {
            "type": "object",
            "properties": {
                "annotations": {
                    "$ref": "#/definitions/paletteItemSettings",
                    "description": ""
                },
                "custom": {
                    "$ref": "#/definitions/paletteItemSettings",
                    "description": ""
                },
                "merge": {
                    "$ref": "#/definitions/paletteItemSettings",
                    "description": ""
                },
                "notary": {
                    "$ref": "#/definitions/paletteItemSettings",
                    "description": ""
                },
                "seals": {
                    "$ref": "#/definitions/paletteItemSettings",
                    "description": ""
                },
                "smartContracts": {
                    "$ref": "#/definitions/paletteItemSettings",
                    "description": ""
                },
                "smartSections": {
                    "$ref": "#/definitions/paletteItemSettings",
                    "description": ""
                }
            }
        },
        "participant": {
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "accessCodeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "addAccessCodeToEmail": {
                    "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
                    "type": "string"
                },
                "additionalNotifications": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAdditionalNotification"
                    }
                },
                "allowSystemOverrideForLockedRecipient": {
                    "description": "",
                    "type": "string"
                },
                "autoRespondedReason": {
                    "description": "",
                    "type": "string"
                },
                "bulkSendV2Recipient": {
                    "description": "",
                    "type": "string"
                },
                "clientUserId": {
                    "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "completedCount": {
                    "description": "",
                    "type": "string"
                },
                "consentDetailsList": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/consentDetails"
                    }
                },
                "customFields": {
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "declinedDateTime": {
                    "description": "The date and time the recipient declined the document.",
                    "type": "string"
                },
                "declinedReason": {
                    "description": "The reason the recipient declined the document.",
                    "type": "string"
                },
                "deliveredDateTime": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethod": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethodMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "designatorId": {
                    "description": "",
                    "type": "string"
                },
                "designatorIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "documentVisibility": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentVisibility"
                    }
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "emailMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "emailNotification": {
                    "$ref": "#/definitions/recipientEmailNotification",
                    "description": "A complex type that contains information sets the language of the recipient's email information. \n\n**IMPORTANT**: If you enable email notification for one recipient, you must enable email notification for all recipients as it overrides the Envelope Subject and `EmailBlurb` property settings. "
                },
                "emailRecipientPostSigningURL": {
                    "description": "",
                    "type": "string"
                },
                "embeddedRecipientStartURL": {
                    "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "faxNumber": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "faxNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "firstName": {
                    "description": "The user's first name. \nMaximum Length: 50 characters.",
                    "type": "string"
                },
                "firstNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "fullName": {
                    "description": "",
                    "type": "string"
                },
                "fullNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "idCheckConfigurationName": {
                    "description": "Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.",
                    "type": "string"
                },
                "idCheckConfigurationNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "idCheckInformationInput": {
                    "$ref": "#/definitions/idCheckInformationInput",
                    "description": ""
                },
                "identityVerification": {
                    "$ref": "#/definitions/recipientIdentityVerification",
                    "description": ""
                },
                "inheritEmailNotificationConfiguration": {
                    "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                    "type": "string"
                },
                "lastName": {
                    "description": "",
                    "type": "string"
                },
                "lastNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "lockedRecipientPhoneAuthEditable": {
                    "description": "",
                    "type": "string"
                },
                "lockedRecipientSmsEditable": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "note": {
                    "description": "Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.",
                    "type": "string"
                },
                "noteMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "participateFor": {
                    "description": "",
                    "type": "string"
                },
                "participateForGuid": {
                    "description": "",
                    "type": "string"
                },
                "phoneAuthentication": {
                    "$ref": "#/definitions/recipientPhoneAuthentication",
                    "description": ""
                },
                "phoneNumber": {
                    "$ref": "#/definitions/recipientPhoneNumber",
                    "description": ""
                },
                "recipientAttachments": {
                    "description": "Reserved:",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAttachment"
                    }
                },
                "recipientAuthenticationStatus": {
                    "$ref": "#/definitions/authenticationStatus",
                    "description": ""
                },
                "recipientFeatureMetadata": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featureAvailableMetadata"
                    }
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientType": {
                    "description": "",
                    "type": "string"
                },
                "recipientTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "requireIdLookup": {
                    "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                    "type": "string"
                },
                "requireIdLookupMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "routingOrder": {
                    "description": "Specifies the routing order of the recipient in the envelope. ",
                    "type": "string"
                },
                "routingOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "signedDateTime": {
                    "description": "Reserved: For DocuSign use only. ",
                    "type": "string"
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                },
                "signingGroupIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "signingGroupName": {
                    "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
                    "type": "string"
                },
                "signingGroupUsers": {
                    "description": "A complex type that contains information about users in the signing group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                },
                "smsAuthentication": {
                    "$ref": "#/definitions/recipientSMSAuthentication",
                    "description": ""
                },
                "socialAuthentications": {
                    "description": " Lists the social ID type that can be used for recipient authentication.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/socialAuthentication"
                    }
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusCode": {
                    "description": "",
                    "type": "string"
                },
                "suppressEmails": {
                    "description": "",
                    "type": "string"
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "totalTabCount": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "pathExtendedElement": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "description": "",
                    "type": "string"
                },
                "typeName": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "paymentDetails": {
            "type": "object",
            "properties": {
                "allowedPaymentMethods": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "chargeId": {
                    "description": "",
                    "type": "string"
                },
                "currencyCode": {
                    "description": "",
                    "type": "string"
                },
                "currencyCodeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `currencyCode` property is editable."
                },
                "customerId": {
                    "description": "",
                    "type": "string"
                },
                "customMetadata": {
                    "description": "",
                    "type": "string"
                },
                "customMetadataRequired": {
                    "description": "",
                    "type": "boolean"
                },
                "gatewayAccountId": {
                    "description": "",
                    "type": "string"
                },
                "gatewayAccountIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `gatewayAccountId` property is editable."
                },
                "gatewayDisplayName": {
                    "description": "",
                    "type": "string"
                },
                "gatewayName": {
                    "description": "",
                    "type": "string"
                },
                "lineItems": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/paymentLineItem"
                    }
                },
                "paymentOption": {
                    "description": "",
                    "type": "string"
                },
                "paymentSourceId": {
                    "description": "",
                    "type": "string"
                },
                "signerValues": {
                    "$ref": "#/definitions/paymentSignerValues",
                    "description": ""
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "subGatewayName": {
                    "description": "",
                    "type": "string"
                },
                "total": {
                    "$ref": "#/definitions/money",
                    "description": "This read-only property\nis a currency-formatted string\nthat represents the total\nof all the line items.\nThe total is available\nonly after the document is completed,\nwhich is when all recipients have paid and\nhave completed all required fields.\n"
                }
            },
            "description": "When a formula tab\nhas a `paymentDetails` property,\nthe formula tab\nis a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n"
        },
        "paymentGatewayAccount": {
            "type": "object",
            "properties": {
                "allowCustomMetadata": {
                    "description": "",
                    "type": "boolean"
                },
                "config": {
                    "$ref": "#/definitions/paymentGatewayAccountSetting",
                    "description": "This property contains metadata about the payment gateway account's configuration such as the API key, `userId`, and `merchantId` details."
                },
                "displayName": {
                    "description": "",
                    "type": "string"
                },
                "isEnabled": {
                    "description": "",
                    "type": "string"
                },
                "isLegacy": {
                    "description": "",
                    "type": "string"
                },
                "lastModified": {
                    "description": "",
                    "type": "string"
                },
                "paymentGateway": {
                    "description": "",
                    "type": "string"
                },
                "paymentGatewayAccountId": {
                    "description": "",
                    "type": "string"
                },
                "paymentGatewayDisplayName": {
                    "description": "",
                    "type": "string"
                },
                "payPalLegacySettings": {
                    "$ref": "#/definitions/payPalLegacySettings",
                    "description": "Reserved for DocuSign."
                },
                "supportedCurrencies": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "supportedPaymentMethods": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "supportedPaymentMethodsWithOptions": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/paymentMethodWithOptions"
                    }
                },
                "zeroDecimalCurrencies": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "description": "This object contains details about a payment gateway account."
        },
        "paymentGatewayAccountSetting": {
            "type": "object",
            "properties": {
                "apiFields": {
                    "description": "",
                    "type": "string"
                },
                "authorizationCode": {
                    "description": "",
                    "type": "string"
                },
                "credentialStatus": {
                    "description": "",
                    "type": "string"
                },
                "merchantId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "paymentGatewayAccountsInfo": {
            "type": "object",
            "properties": {
                "paymentGatewayAccounts": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/paymentGatewayAccount"
                    }
                }
            },
            "description": "Holds information about connected payment accounts."
        },
        "paymentLineItem": {
            "type": "object",
            "properties": {
                "amountReference": {
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "description": "",
                    "type": "string"
                },
                "itemCode": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "A line item describes details\nabout an individual line item\nin a payment request.\n\n"
        },
        "paymentMethodWithOptions": {
            "type": "object",
            "properties": {
                "supportedCurrencies": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "supportedOptions": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object contains information about a payment method that the gateway accepts and the payment options that are compatible with it."
        },
        "paymentProcessorInformation": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/addressInformation",
                    "description": "The mailing address associated with the payment processor."
                },
                "billingAgreementId": {
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "paymentSignerValues": {
            "type": "object",
            "properties": {
                "paymentOption": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "payPalLegacySettings": {
            "type": "object",
            "properties": {
                "currency": {
                    "description": "",
                    "type": "string"
                },
                "partner": {
                    "description": "",
                    "type": "string"
                },
                "password": {
                    "description": "",
                    "type": "string"
                },
                "userName": {
                    "description": "",
                    "type": "string"
                },
                "vendor": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "permissionProfile": {
            "type": "object",
            "properties": {
                "modifiedByUsername": {
                    "description": "",
                    "type": "string"
                },
                "modifiedDateTime": {
                    "description": "",
                    "type": "string"
                },
                "permissionProfileId": {
                    "description": "",
                    "type": "string"
                },
                "permissionProfileName": {
                    "description": "",
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/accountRoleSettings",
                    "description": "This object specifies the permissions that are associated with the account permission profile."
                },
                "userCount": {
                    "description": "",
                    "type": "string"
                },
                "users": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInformation"
                    }
                }
            },
            "description": "This object defines the account permissions for a profile that you can apply to a group of users."
        },
        "permissionProfileInformation": {
            "type": "object",
            "properties": {
                "permissionProfiles": {
                    "description": "A complex type containing a collection of permission profiles.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/permissionProfile"
                    }
                }
            },
            "description": "Contains details about the permission profiles associated with an account."
        },
        "phoneNumber": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "concealValueOnDocumentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `concealValueOnDocument` property is editable."
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "disableAutoSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `disableAutoSize` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "maxLength": {
                    "description": "An optional value that describes the maximum length of the property when the property is a string.",
                    "type": "string"
                },
                "maxLengthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `maxLength` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A Phone Number tab enables a recipient to enter a phone number.\n\n**Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/"
        },
        "planInformation": {
            "description": "An object used to identify the features and attributes of the account being created.",
            "type": "object",
            "properties": {
                "addOns": {
                    "description": "Reserved:",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addOn"
                    }
                },
                "currencyCode": {
                    "description": "Specifies the ISO currency code for the account.",
                    "type": "string"
                },
                "freeTrialDaysOverride": {
                    "description": "Reserved for DocuSign use only.",
                    "type": "string"
                },
                "planFeatureSets": {
                    "description": "A complex type that sets the feature sets for the account.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featureSet"
                    }
                },
                "planId": {
                    "description": "The DocuSign Plan ID for the account.",
                    "type": "string"
                },
                "recipientDomains": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientDomain"
                    }
                }
            }
        },
        "polyLine": {
            "type": "object",
            "properties": {
                "x1": {
                    "description": "",
                    "type": "string"
                },
                "x2": {
                    "description": "",
                    "type": "string"
                },
                "y1": {
                    "description": "",
                    "type": "string"
                },
                "y2": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "polyLineOverlay": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "graphicsContext": {
                    "$ref": "#/definitions/graphicsContext",
                    "description": "Contains details about the style used for the strike through graphic."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "overlayType": {
                    "description": "",
                    "type": "string"
                },
                "overlayTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `overlayType` property is editable.\n"
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "polyLines": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/polyLine"
                    }
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `shared` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "This tab enables users to strike through the text of a document. The tab is implemented as a line represented as a pair of x and y coordinates."
        },
        "powerForm": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "description": "",
                    "type": "string"
                },
                "createdDateTime": {
                    "description": "Indicates the date and time the item was created.",
                    "type": "string"
                },
                "emailBody": {
                    "description": "Specifies the email body of the message sent to the recipient. \n\nMaximum length: 10000 characters. ",
                    "type": "string"
                },
                "emailSubject": {
                    "description": "Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.",
                    "type": "string"
                },
                "envelopes": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelope"
                    }
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "instructions": {
                    "description": "",
                    "type": "string"
                },
                "isActive": {
                    "description": "",
                    "type": "string"
                },
                "lastUsed": {
                    "description": "",
                    "type": "string"
                },
                "limitUseInterval": {
                    "description": "",
                    "type": "string"
                },
                "limitUseIntervalEnabled": {
                    "description": "",
                    "type": "string"
                },
                "limitUseIntervalUnits": {
                    "description": "",
                    "type": "string"
                },
                "maxUseEnabled": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "powerFormId": {
                    "description": "",
                    "type": "string"
                },
                "powerFormUrl": {
                    "description": "",
                    "type": "string"
                },
                "recipients": {
                    "description": "An array of powerform recipients.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/powerFormRecipient"
                    }
                },
                "senderName": {
                    "description": "",
                    "type": "string"
                },
                "senderUserId": {
                    "description": "",
                    "type": "string"
                },
                "signingMode": {
                    "description": "",
                    "type": "string"
                },
                "templateId": {
                    "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                    "type": "string"
                },
                "templateName": {
                    "description": "",
                    "type": "string"
                },
                "timesUsed": {
                    "description": "",
                    "type": "string"
                },
                "uri": {
                    "description": "",
                    "type": "string"
                },
                "usesRemaining": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Contains details about a PowerForm."
        },
        "powerFormFormDataEnvelope": {
            "type": "object",
            "properties": {
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "recipients": {
                    "description": "An array of powerform recipients.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/powerFormFormDataRecipient"
                    }
                }
            }
        },
        "powerFormFormDataRecipient": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "",
                    "type": "string"
                },
                "formData": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nameValue"
                    }
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                }
            }
        },
        "powerFormRecipient": {
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "accessCodeLocked": {
                    "description": "",
                    "type": "string"
                },
                "accessCodeRequired": {
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "emailLocked": {
                    "description": "",
                    "type": "string"
                },
                "idCheckConfigurationName": {
                    "description": "Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.",
                    "type": "string"
                },
                "idCheckRequired": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "recipientType": {
                    "description": "",
                    "type": "string"
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "routingOrder": {
                    "description": "Specifies the routing order of the recipient in the envelope. ",
                    "type": "string"
                },
                "templateRequiresIdLookup": {
                    "description": "",
                    "type": "string"
                },
                "userNameLocked": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "**Note:** For a self-service PowerForm on a website, you can specify the intended recipients generically (for example, use `Member` as the `Name`), and omit personal details such as `email`."
        },
        "powerFormSendersResponse": {
            "type": "object",
            "properties": {
                "endPosition": {
                    "format": "int32",
                    "description": "The last position in the result set. ",
                    "type": "integer"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "powerFormSenders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "format": "int32",
                    "description": "The number of results returned in this response. ",
                    "type": "integer"
                },
                "startPosition": {
                    "format": "int32",
                    "description": "Starting position of the current result set.",
                    "type": "integer"
                },
                "totalSetSize": {
                    "format": "int32",
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "integer"
                }
            },
            "description": "This object includes information about the users who have sent PowerForms."
        },
        "powerFormsFormDataResponse": {
            "type": "object",
            "properties": {
                "envelopes": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/powerFormFormDataEnvelope"
                    }
                }
            }
        },
        "powerFormsRequest": {
            "type": "object",
            "properties": {
                "powerForms": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/powerForm"
                    }
                }
            }
        },
        "powerFormsResponse": {
            "type": "object",
            "properties": {
                "endPosition": {
                    "format": "int32",
                    "description": "The last position in the result set. ",
                    "type": "integer"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "powerForms": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/powerForm"
                    }
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "format": "int32",
                    "description": "The number of results returned in this response. ",
                    "type": "integer"
                },
                "startPosition": {
                    "format": "int32",
                    "description": "Starting position of the current result set.",
                    "type": "integer"
                },
                "totalSetSize": {
                    "format": "int32",
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "integer"
                }
            },
            "description": "A list of PowerForms."
        },
        "prefillFormData": {
            "type": "object",
            "properties": {
                "formData": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/formDataItem"
                    }
                },
                "senderEmail": {
                    "description": "",
                    "type": "string"
                },
                "senderName": {
                    "description": "",
                    "type": "string"
                },
                "senderUserId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "prefillTabs": {
            "type": "object",
            "properties": {
                "checkboxTabs": {
                    "description": "Specifies a tag on the document in a location where the recipient can select an option.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkbox"
                    }
                },
                "dateTabs": {
                    "description": "Specifies a tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. \n\nIf you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/date"
                    }
                },
                "emailTabs": {
                    "description": "Specifies a tag on the document where you want the recipient to enter an email. Email tags are single-line fields that accept any characters. The system checks that a valid email format (i.e. xxx@yyy.zzz) is entered in the tag. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/email"
                    }
                },
                "numberTabs": {
                    "description": "Specifies a tag on the document where you want the recipient to enter a number. It uses the same parameters as a Text tab, with the validation message and pattern set for number information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/number"
                    }
                },
                "radioGroupTabs": {
                    "description": "Specifies a tag on the document in a location where the recipient can select one option from a group of options using a radio button. The radio buttons do not have to be on the same page in a document.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/radioGroup"
                    }
                },
                "senderCompanyTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/senderCompany"
                    }
                },
                "senderNameTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/senderName"
                    }
                },
                "ssnTabs": {
                    "description": "Specifies a tag on the document where you want the recipient to enter a Social Security Number (SSN). A SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ssn"
                    }
                },
                "tabGroups": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tabGroup"
                    }
                },
                "textTabs": {
                    "description": "Specifies a that that is an adaptable field that allows the recipient to enter different text information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/text"
                    }
                },
                "zipTabs": {
                    "description": "Specifies a tag on the document where you want the recipient to enter a ZIP code. The ZIP code can be a five numbers or the ZIP+4 format with nine numbers. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/zip"
                    }
                }
            },
            "description": "Prefill tabs are tabs\nthat the sender can fill in\nbefore the envelope is sent.\nThey are sometimes called\nsender tags or pre-fill fields.\n\nOnly the following tab types can be\nprefill tabs:\n\n- text\n- check boxes\n- radio buttons\n\n\n\n[Pre-Fill Your Own Document Fields][app]\ndescribes how prefill tabs\nwork in the web application.\n\n\n[Customize your envelopes with pre-fill fields][catblog]\nshows how to use prefill tabs\nin your application using the eSignature\nSDKs.\n\n[app]:      https://support.docusign.com/en/guides/ndse-user-guide-prefill-fields\n[catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields"
        },
        "propertyMetadata": {
            "type": "object",
            "properties": {
                "options": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rights": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Metadata about a property."
        },
        "province": {
            "type": "object",
            "properties": {
                "isoCode": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "provisioningInformation": {
            "type": "object",
            "properties": {
                "defaultConnectionId": {
                    "description": "",
                    "type": "string"
                },
                "defaultPlanId": {
                    "description": "",
                    "type": "string"
                },
                "distributorCode": {
                    "description": "The code that identifies the billing plan groups and plans for the new account.",
                    "type": "string"
                },
                "distributorPassword": {
                    "description": "The password for the distributorCode.",
                    "type": "string"
                },
                "passwordRuleText": {
                    "description": "",
                    "type": "string"
                },
                "planPromotionText": {
                    "description": "",
                    "type": "string"
                },
                "purchaseOrderOrPromAllowed": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "purchasedEnvelopesInformation": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "The total amount of the purchase.",
                    "type": "string"
                },
                "appName": {
                    "description": "The AppName of the client application.",
                    "type": "string"
                },
                "currencyCode": {
                    "description": "Specifies the ISO currency code of the purchase. This is based on the ISO 4217 currency code information.",
                    "type": "string"
                },
                "platform": {
                    "description": "The Platform of the client application",
                    "type": "string"
                },
                "productId": {
                    "description": "The Product ID from the AppStore.",
                    "type": "string"
                },
                "quantity": {
                    "description": "The quantity of envelopes to add to the account.",
                    "type": "string"
                },
                "receiptData": {
                    "description": "The encrypted Base64 encoded receipt data.",
                    "type": "string"
                },
                "storeName": {
                    "description": "The name of the AppStore.",
                    "type": "string"
                },
                "transactionId": {
                    "description": "Specifies the Transaction ID from the AppStore.",
                    "type": "string"
                }
            }
        },
        "radio": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "selected": {
                    "description": "When set to **true**, the radio button is selected.",
                    "type": "string"
                },
                "selectedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `selected` property is editable."
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "One of the selectable radio buttons\nin the `radios` property\nof a [`radioGroup`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/) tab.\n"
        },
        "radioGroup": {
            "type": "object",
            "properties": {
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "groupName": {
                    "description": "The name of the group.",
                    "type": "string"
                },
                "groupNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `groupName` property is editable."
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "radios": {
                    "description": "Specifies the locations and status for radio buttons that are grouped together.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/radio"
                    }
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "requireAll": {
                    "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
                    "type": "string"
                },
                "requireAllMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireAll` property is editable."
                },
                "requireInitialOnSharedChange": {
                    "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
                    "type": "string"
                },
                "requireInitialOnSharedChangeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireInitialOnSharedChange` property is editable."
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `shared` property is editable."
                },
                "shareToRecipients": {
                    "description": "",
                    "type": "string"
                },
                "shareToRecipientsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "tooltipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tooltip` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                }
            },
            "description": "This group tab is used to place radio buttons on a document.\nThe `radios` property\ncontains a list of\n[`radio`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/)\nobjects  associated with the group. Only one radio button can\nbe selected in a group.\n"
        },
        "recipientAdditionalNotification": {
            "type": "object",
            "properties": {
                "phoneNumber": {
                    "$ref": "#/definitions/recipientPhoneNumber",
                    "description": "The phone number to receive the additional notifcation."
                },
                "secondaryDeliveryMethod": {
                    "description": "",
                    "type": "string"
                },
                "secondaryDeliveryMethodMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata about the delivery method."
                },
                "secondaryDeliveryStatus": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Describes an additional notification method."
        },
        "recipientAttachment": {
            "type": "object",
            "properties": {
                "attachmentId": {
                    "description": "",
                    "type": "string"
                },
                "attachmentType": {
                    "description": "",
                    "type": "string"
                },
                "data": {
                    "description": "",
                    "type": "string"
                },
                "label": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "remoteUrl": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "recipientDomain": {
            "type": "object",
            "properties": {
                "active": {
                    "description": "",
                    "type": "string"
                },
                "domainCode": {
                    "description": "",
                    "type": "string"
                },
                "domainName": {
                    "description": "",
                    "type": "string"
                },
                "recipientDomainId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "recipientEmailNotification": {
            "type": "object",
            "properties": {
                "emailBody": {
                    "description": "Specifies the email body of the message sent to the recipient. \n\nMaximum length: 10000 characters. ",
                    "type": "string"
                },
                "emailBodyMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `emailBody` property can be edited."
                },
                "emailSubject": {
                    "description": "Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.",
                    "type": "string"
                },
                "emailSubjectMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `emailSubject` property can be edited."
                },
                "supportedLanguage": {
                    "description": "A simple type enumeration of the language used. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Armenian (hy), Bahasa Indonesia (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro),Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk), and Vietnamese (vi).",
                    "type": "string"
                },
                "supportedLanguageMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `supportedLanguage` property can be edited."
                }
            }
        },
        "recipientEvent": {
            "type": "object",
            "properties": {
                "includeDocuments": {
                    "description": "When set to **true**, the PDF documents are included in the message along with the updated XML. ",
                    "type": "string"
                },
                "recipientEventStatusCode": {
                    "description": "The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.",
                    "type": "string"
                }
            }
        },
        "recipientFormData": {
            "type": "object",
            "properties": {
                "DeclinedTime": {
                    "description": "",
                    "type": "string"
                },
                "DeliveredTime": {
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "formData": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/formDataItem"
                    }
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "SentTime": {
                    "description": "",
                    "type": "string"
                },
                "SignedTime": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "recipientGroup": {
            "type": "object",
            "properties": {
                "groupMessage": {
                    "description": "",
                    "type": "string"
                },
                "groupName": {
                    "description": "The name of the group.",
                    "type": "string"
                },
                "recipients": {
                    "description": "An array of powerform recipients.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientOption"
                    }
                }
            },
            "description": "Describes a group of recipients."
        },
        "recipientIdentityInputOption": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "",
                    "type": "string"
                },
                "phoneNumberList": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientIdentityPhoneNumber"
                    }
                },
                "valueType": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "recipientIdentityPhoneNumber": {
            "type": "object",
            "properties": {
                "countryCode": {
                    "description": "",
                    "type": "string"
                },
                "countryCodeLock": {
                    "description": "",
                    "type": "string"
                },
                "countryCodeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates if the `countryCode` property is editable."
                },
                "extension": {
                    "description": "",
                    "type": "string"
                },
                "extensionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates if the `extension` property is editable."
                },
                "number": {
                    "description": "",
                    "type": "string"
                },
                "numberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates if the `number` property is editable."
                }
            }
        },
        "recipientIdentityVerification": {
            "type": "object",
            "properties": {
                "inputOptions": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientIdentityInputOption"
                    }
                },
                "workflowId": {
                    "description": "",
                    "type": "string"
                },
                "workflowIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "workflowLabel": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Specifies ID Verification applied on an envelope by workflow ID.\nSee the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)\nmethod in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource\nfor more information on how to retrieve workflow IDs available for an account.\nThis can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods."
        },
        "recipientNamesResponse": {
            "type": "object",
            "properties": {
                "multipleUsers": {
                    "description": "Indicates whether email address is used by more than one user.",
                    "type": "string"
                },
                "recipientNames": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "reservedRecipientEmail": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This response object contains a list of recipients."
        },
        "recipientOption": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "recipientLabel": {
                    "description": "",
                    "type": "string"
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                }
            },
            "description": "Describes a recipient who is a member of a conditional group."
        },
        "recipientPhoneAuthentication": {
            "description": "A complex type that Contains the elements:\n\n* recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.\n* senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.\n* recordVoicePrint - Reserved.\n* validateRecipProvidedNumber - Reserved.",
            "type": "object",
            "properties": {
                "recipMayProvideNumber": {
                    "description": "Boolean. When set to **true**, the recipient can supply a phone number their choice.",
                    "type": "string"
                },
                "recipMayProvideNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipMayProvideNumber` property can be edited."
                },
                "recordVoicePrint": {
                    "description": "Reserved.",
                    "type": "string"
                },
                "recordVoicePrintMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "senderProvidedNumbers": {
                    "description": "An Array containing a list of phone numbers the recipient may use for SMS text authentication. ",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "senderProvidedNumbersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `senderProvidedNumbers` property can be edited."
                },
                "validateRecipProvidedNumber": {
                    "description": " Reserved.",
                    "type": "string"
                },
                "validateRecipProvidedNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                }
            }
        },
        "recipientPhoneNumber": {
            "type": "object",
            "properties": {
                "countryCode": {
                    "description": "",
                    "type": "string"
                },
                "countryCodeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates if the `countryCode` property is editable."
                },
                "number": {
                    "description": "",
                    "type": "string"
                },
                "numberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates if the `number` property is editable."
                }
            },
            "description": "Describes the recipient phone number."
        },
        "recipientPreviewRequest": {
            "type": "object",
            "properties": {
                "assertionId": {
                    "description": "",
                    "type": "string"
                },
                "authenticationInstant": {
                    "description": "",
                    "type": "string"
                },
                "authenticationMethod": {
                    "description": "",
                    "type": "string"
                },
                "clientURLs": {
                    "$ref": "#/definitions/recipientTokenClientURLs",
                    "description": ""
                },
                "pingFrequency": {
                    "description": "",
                    "type": "string"
                },
                "pingUrl": {
                    "description": "",
                    "type": "string"
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "returnUrl": {
                    "description": "",
                    "type": "string"
                },
                "securityDomain": {
                    "description": "",
                    "type": "string"
                },
                "xFrameOptions": {
                    "description": "",
                    "type": "string"
                },
                "xFrameOptionsAllowFromUrl": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This request object contains the information necessary to create a recipient preview."
        },
        "recipientProofFile": {
            "type": "object",
            "properties": {
                "hasIdentityAttempts": {
                    "description": "",
                    "type": "string"
                },
                "isInProofFile": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "The proof file of the recipient. [ID Evidence](/docs/idevidence-api/) uses proof files to store the identification data that recipients submit when verifying their ID with [ID Verification](/docs/esign-rest-api/esign101/concepts/documents/)"
        },
        "recipientRouting": {
            "type": "object",
            "properties": {
                "rules": {
                    "$ref": "#/definitions/recipientRules",
                    "description": "The recipient routing rules."
                }
            },
            "description": "Describes the recipient routing rules."
        },
        "recipientRules": {
            "type": "object",
            "properties": {
                "conditionalRecipients": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/conditionalRecipientRule"
                    }
                }
            }
        },
        "recipients": {
            "description": "Specifies the envelope recipients.",
            "type": "object",
            "properties": {
                "agents": {
                    "description": "A complex type defining the management and access rights of a recipient assigned assigned as an agent on the document.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/agent"
                    }
                },
                "carbonCopies": {
                    "description": "A complex type containing information about recipients who should receive a copy of the envelope, but does not need to sign it.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/carbonCopy"
                    }
                },
                "certifiedDeliveries": {
                    "description": "A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/certifiedDelivery"
                    }
                },
                "currentRoutingOrder": {
                    "description": "",
                    "type": "string"
                },
                "editors": {
                    "description": "A complex type defining the management and access rights of a recipient assigned assigned as an editor on the document.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/editor"
                    }
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "inPersonSigners": {
                    "description": "Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inPersonSigner"
                    }
                },
                "intermediaries": {
                    "description": "Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/intermediary"
                    }
                },
                "notaries": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/notaryRecipient"
                    }
                },
                "participants": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/participant"
                    }
                },
                "recipientCount": {
                    "description": "",
                    "type": "string"
                },
                "seals": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sealSign"
                    }
                },
                "signers": {
                    "description": "A complex type containing information about the Signer recipient.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signer"
                    }
                },
                "witnesses": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/witness"
                    }
                }
            }
        },
        "recipientSignatureInformation": {
            "description": "Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.\n\nUsed only with recipient types In Person Signers and Signers.",
            "type": "object",
            "properties": {
                "fontStyle": {
                    "description": "",
                    "type": "string"
                },
                "signatureInitials": {
                    "description": "",
                    "type": "string"
                },
                "signatureName": {
                    "description": "Specifies the user signature name.",
                    "type": "string"
                }
            }
        },
        "recipientSignatureProvider": {
            "type": "object",
            "properties": {
                "sealDocumentsWithTabsOnly": {
                    "description": "",
                    "type": "string"
                },
                "sealName": {
                    "description": "",
                    "type": "string"
                },
                "signatureProviderName": {
                    "description": "",
                    "type": "string"
                },
                "signatureProviderNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signatureProviderName` property is editable.\n"
                },
                "signatureProviderOptions": {
                    "$ref": "#/definitions/recipientSignatureProviderOptions",
                    "description": "Not applicable for this object."
                }
            },
            "description": "An Electronic or Standards Based Signature (digital signature) provider for the signer to use. [More information](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/).\n"
        },
        "recipientSignatureProviderOptions": {
            "type": "object",
            "properties": {
                "cpfNumber": {
                    "description": "",
                    "type": "string"
                },
                "cpfNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "oneTimePassword": {
                    "description": "",
                    "type": "string"
                },
                "oneTimePasswordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `oneTimePassword` property is editable."
                },
                "signerRole": {
                    "description": "",
                    "type": "string"
                },
                "signerRoleMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signerRole` property is editable."
                },
                "sms": {
                    "description": "",
                    "type": "string"
                },
                "smsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `sms` property is editable."
                }
            },
            "description": "Option settings for the signature provider. Different providers require or use different options. [The current provider list and the options they require.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)"
        },
        "recipientSMSAuthentication": {
            "description": "Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication.",
            "type": "object",
            "properties": {
                "senderProvidedNumbers": {
                    "description": "An Array containing a list of phone numbers the recipient may use for SMS text authentication. ",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "senderProvidedNumbersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `senderProvidedNumbers` property can be edited."
                }
            }
        },
        "recipientsUpdateSummary": {
            "type": "object",
            "properties": {
                "recipientUpdateResults": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientUpdateResponse"
                    }
                }
            },
            "description": "This is the response that the API returns after you update recipients."
        },
        "recipientTokenClientURLs": {
            "type": "object",
            "properties": {
                "onAccessCodeFailed": {
                    "description": "",
                    "type": "string"
                },
                "onCancel": {
                    "description": "",
                    "type": "string"
                },
                "onDecline": {
                    "description": "",
                    "type": "string"
                },
                "onException": {
                    "description": "",
                    "type": "string"
                },
                "onFaxPending": {
                    "description": "",
                    "type": "string"
                },
                "onIdCheckFailed": {
                    "description": "",
                    "type": "string"
                },
                "onSessionTimeout": {
                    "description": "",
                    "type": "string"
                },
                "onSigningComplete": {
                    "description": "",
                    "type": "string"
                },
                "onTTLExpired": {
                    "description": "",
                    "type": "string"
                },
                "onViewingComplete": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "recipientUpdateResponse": {
            "type": "object",
            "properties": {
                "combined": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "tabs": {
                    "$ref": "#/definitions/tabs",
                    "description": "All of the tabs associated with the recipient."
                }
            },
            "description": "The recipient details that are returned after you update the recipient."
        },
        "recipientViewRequest": {
            "type": "object",
            "properties": {
                "assertionId": {
                    "description": "A unique identifier of the authentication event executed by the client application.",
                    "type": "string"
                },
                "authenticationInstant": {
                    "description": "A sender generated value that indicates the date/time that the signer was authenticated.",
                    "type": "string"
                },
                "authenticationMethod": {
                    "description": "A sender created value that indicates the convention used to authenticate the signer. This information is included in the Certificate of Completion.",
                    "type": "string"
                },
                "clientURLs": {
                    "$ref": "#/definitions/recipientTokenClientURLs",
                    "description": ""
                },
                "clientUserId": {
                    "description": "A sender created value that shows the recipient is embedded (captive). \n\nMaximum length: 100 characters.",
                    "type": "string"
                },
                "displayFormat": {
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "description": "Specifies the email of the recipient. You can use either email and userName or userId to identify the recipient.",
                    "type": "string"
                },
                "frameAncestors": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "messageOrigins": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pingFrequency": {
                    "description": "Only used if pingUrl is specified. This is the interval, in seconds, between pings on the pingUrl.  The default is 300 seconds. Valid values are 60-1200 seconds.",
                    "type": "string"
                },
                "pingUrl": {
                    "description": "A client Url to be pinged by the DocuSign Signing experience to indicate to the client that Signing is active. An HTTP Get is executed against the client. The response from the client is ignored. The intent is for the client to reset it's session timer when the request is received.",
                    "type": "string"
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "returnUrl": {
                    "description": "The url the recipient is redirected to after the signing session has ended. DocuSign redirects to the url and includes an event parameter that can be used by your application. Possible event parameter values: \n\n* cancel (recipient canceled the signing operation)\n* decline (recipient declined to sign)\n* exception (an exception occurred)\n* fax_pending (recipient has a fax pending)\n* session_timeout (session timed out)\n* signing_complete (signer completed the signing ceremony)\n* ttl_expired (the TTL, time to live, timer expired)\n* viewing_complete (recipient completed viewing the envelope)\n\n###### Note: Include https:// in the URL or the redirect might not succeed on some browsers. ",
                    "type": "string"
                },
                "securityDomain": {
                    "description": "The domain in which the user authenticated.",
                    "type": "string"
                },
                "userId": {
                    "description": "Specifies the user ID of the recipient. You can use with user ID or email and user name to identify the recipient. If user ID is used and a client user ID is provided, the value in the `userId` property must match a recipient ID (which can be retrieved with a GET recipients call) for the envelope. If a user ID is used and a clientUser ID is not provided, the user ID match the user ID of the authenticating user.",
                    "type": "string"
                },
                "userName": {
                    "description": "Specifies the username of the recipient. You can use either email and userName or userId to identify the recipient.",
                    "type": "string"
                },
                "xFrameOptions": {
                    "description": "",
                    "type": "string"
                },
                "xFrameOptionsAllowFromUrl": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "The request body for the [EnvelopeViews: createRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createrecipient/)\nand\n[EnvelopeViews: createSharedRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createsharedrecipient/) methods."
        },
        "referralInformation": {
            "description": "A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry \n\n###### Note: saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DoucSign use only.",
            "type": "object",
            "properties": {
                "advertisementId": {
                    "description": "A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry.\n\n###### Note: saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DoucSign use only. \n",
                    "type": "string"
                },
                "enableSupport": {
                    "description": "When set to **true**, then customer support is provided as part of the account plan.",
                    "type": "string"
                },
                "externalOrgId": {
                    "description": "",
                    "type": "string"
                },
                "groupMemberId": {
                    "description": "",
                    "type": "string"
                },
                "idType": {
                    "description": "",
                    "type": "string"
                },
                "includedSeats": {
                    "description": "The number of seats (users) included.",
                    "type": "string"
                },
                "industry": {
                    "description": "",
                    "type": "string"
                },
                "planStartMonth": {
                    "description": "",
                    "type": "string"
                },
                "promoCode": {
                    "description": "",
                    "type": "string"
                },
                "publisherId": {
                    "description": "",
                    "type": "string"
                },
                "referralCode": {
                    "description": "",
                    "type": "string"
                },
                "referrerName": {
                    "description": "",
                    "type": "string"
                },
                "saleDiscountAmount": {
                    "description": "Reserved for DocuSign use only.",
                    "type": "string"
                },
                "saleDiscountFixedAmount": {
                    "description": "Reserved for DocuSign use only.",
                    "type": "string"
                },
                "saleDiscountPercent": {
                    "description": "Reserved for DocuSign use only.",
                    "type": "string"
                },
                "saleDiscountPeriods": {
                    "description": "Reserved for DocuSign use only.",
                    "type": "string"
                },
                "saleDiscountSeatPriceOverride": {
                    "description": "Reserved for DocuSign use only.",
                    "type": "string"
                },
                "shopperId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "reminders": {
            "description": "A complex element that specifies reminder settings for the envelope",
            "type": "object",
            "properties": {
                "reminderDelay": {
                    "description": "An interger that sets the number of days after the recipient receives the envelope that reminder emails are sent to the recipient.",
                    "type": "string"
                },
                "reminderEnabled": {
                    "description": "When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used.",
                    "type": "string"
                },
                "reminderFrequency": {
                    "description": "An interger that sets the interval, in days, between reminder emails.",
                    "type": "string"
                }
            }
        },
        "resourceInformation": {
            "type": "object",
            "properties": {
                "resources": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nameValue"
                    }
                }
            }
        },
        "scheduledSending": {
            "type": "object",
            "properties": {
                "bulkListId": {
                    "description": "",
                    "type": "string"
                },
                "resumeDate": {
                    "description": "An ISO 8601 formatted datetime string indicating the date and time that the envelope is (or was) scheduled to be sent or null if the envelope has not yet been sent.",
                    "type": "string"
                },
                "rules": {
                    "description": "A list of envelope delay rules specified by the user indicating how and when the envelope should be scheduled for sending in the future. Currently only 1 rule may be specified.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeDelayRule"
                    }
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                }
            }
        },
        "sealIdentifier": {
            "type": "object",
            "properties": {
                "sealDisplayName": {
                    "description": "",
                    "type": "string"
                },
                "sealName": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "sealSign": {
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "accessCodeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Not applicable."
                },
                "addAccessCodeToEmail": {
                    "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
                    "type": "string"
                },
                "allowSystemOverrideForLockedRecipient": {
                    "description": "",
                    "type": "string"
                },
                "autoRespondedReason": {
                    "description": "",
                    "type": "string"
                },
                "bulkSendV2Recipient": {
                    "description": "",
                    "type": "string"
                },
                "clientUserId": {
                    "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "completedCount": {
                    "description": "",
                    "type": "string"
                },
                "customFields": {
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "declinedDateTime": {
                    "description": "The date and time the recipient declined the document.",
                    "type": "string"
                },
                "declinedReason": {
                    "description": "The reason the recipient declined the document.",
                    "type": "string"
                },
                "deliveredDateTime": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethod": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethodMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "designatorId": {
                    "description": "",
                    "type": "string"
                },
                "designatorIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "documentVisibility": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentVisibility"
                    }
                },
                "emailNotification": {
                    "$ref": "#/definitions/recipientEmailNotification",
                    "description": "A complex type that contains information sets the language of the recipient's email information. \n\n**IMPORTANT**: If you enable email notification for one recipient, you must enable email notification for all recipients as it overrides the Envelope Subject and `EmailBlurb` property settings. "
                },
                "embeddedRecipientStartURL": {
                    "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "faxNumber": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "faxNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "idCheckConfigurationName": {
                    "description": "Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.",
                    "type": "string"
                },
                "idCheckConfigurationNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Not applicable."
                },
                "idCheckInformationInput": {
                    "$ref": "#/definitions/idCheckInformationInput",
                    "description": "Not applicable."
                },
                "identityVerification": {
                    "$ref": "#/definitions/recipientIdentityVerification",
                    "description": "Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address)."
                },
                "inheritEmailNotificationConfiguration": {
                    "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                    "type": "string"
                },
                "lockedRecipientPhoneAuthEditable": {
                    "description": "",
                    "type": "string"
                },
                "lockedRecipientSmsEditable": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "note": {
                    "description": "Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.",
                    "type": "string"
                },
                "noteMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Not applicable."
                },
                "phoneAuthentication": {
                    "$ref": "#/definitions/recipientPhoneAuthentication",
                    "description": "Not applicable."
                },
                "recipientAttachments": {
                    "description": "Reserved:",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAttachment"
                    }
                },
                "recipientAuthenticationStatus": {
                    "$ref": "#/definitions/authenticationStatus",
                    "description": "Not applicable."
                },
                "recipientFeatureMetadata": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featureAvailableMetadata"
                    }
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientSignatureProviders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientSignatureProvider"
                    }
                },
                "recipientType": {
                    "description": "",
                    "type": "string"
                },
                "recipientTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientType` property is editable. This property is read-only."
                },
                "requireIdLookup": {
                    "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                    "type": "string"
                },
                "requireIdLookupMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Not applicable."
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "routingOrder": {
                    "description": "Specifies the routing order of the recipient in the envelope. ",
                    "type": "string"
                },
                "routingOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `routingOrder` property is editable. This property is read-only."
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "signedDateTime": {
                    "description": "Reserved: For DocuSign use only. ",
                    "type": "string"
                },
                "smsAuthentication": {
                    "$ref": "#/definitions/recipientSMSAuthentication",
                    "description": "Not applicable."
                },
                "socialAuthentications": {
                    "description": " Lists the social ID type that can be used for recipient authentication.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/socialAuthentication"
                    }
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusCode": {
                    "description": "",
                    "type": "string"
                },
                "suppressEmails": {
                    "description": "",
                    "type": "string"
                },
                "tabs": {
                    "$ref": "#/definitions/tabs",
                    "description": "A list of tabs, which are represented graphically as symbols on documents at the time of signing. Tabs show recipients where to sign, initial, or enter data. They may also display data to the recipients."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "totalTabCount": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Specifies one or more electronic seals to apply on documents. An electronic seal recipient is a legal entity rather than an actual person. Electronic Seals can be used by organizations and governments to show evidence of origin and integrity of documents. Even though electronic seals can be represented by a tab in a document, they do not require user interaction and apply automatically in the order specified by the sender. The sender is therefore the person authorizing usage of the electronic seal in the flow.\n\nExample: \n\n```json\n\"recipients\": {\n      \"seals\": [\n        {\n          \"recipientId\": \"1\",\n          \"routingOrder\" : 1,\n          \"recipientSignatureProviders\": [\n            {\n              \"sealName\": \"52e9d968-xxxx-xxxx-xxxx-4682bc45c106\"\n            }\n      \t]\n    \t}\n  \t]\n\t},\n    .\n    .\n    .\n```\nFor more information about Electronic Seals, see [Apply Electronic Seals to Your Documents](https://support.docusign.com/en/guides/ndse-user-guide-apply-electronic-seals).\n"
        },
        "seatDiscount": {
            "type": "object",
            "properties": {
                "beginSeatCount": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "discountPercent": {
                    "description": "",
                    "type": "string"
                },
                "endSeatCount": {
                    "description": "Reserved: TBD",
                    "type": "string"
                }
            },
            "description": "This object contains information about a seat discount."
        },
        "senderCompany": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            }
        },
        "senderEmailNotifications": {
            "type": "object",
            "properties": {
                "changedSigner": {
                    "description": "When set to **true**, the sender receives notification if the signer changes.",
                    "type": "string"
                },
                "clickwrapResponsesLimitNotificationEmail": {
                    "description": "",
                    "type": "string"
                },
                "commentsOnlyPrivateAndMention": {
                    "description": "",
                    "type": "string"
                },
                "commentsReceiveAll": {
                    "description": "",
                    "type": "string"
                },
                "deliveryFailed": {
                    "description": "When set to **true**, the sender receives notification if the delivery of the envelope fails.",
                    "type": "string"
                },
                "envelopeComplete": {
                    "description": "When set to **true**, the user receives notification that the envelope has been completed.",
                    "type": "string"
                },
                "offlineSigningFailed": {
                    "description": "When set to **true**, the user receives notification if the offline signing failed.",
                    "type": "string"
                },
                "powerformResponsesLimitNotificationEmail": {
                    "description": "",
                    "type": "string"
                },
                "purgeDocuments": {
                    "description": "",
                    "type": "string"
                },
                "recipientViewed": {
                    "description": "When set to **true**, the sender receives notification that the recipient viewed the enveloper.",
                    "type": "string"
                },
                "senderEnvelopeDeclined": {
                    "description": "",
                    "type": "string"
                },
                "withdrawnConsent": {
                    "description": "When set to **true**, the user receives notification if consent is withdrawn.",
                    "type": "string"
                }
            },
            "description": "Contains the settings for the email notifications that senders receive about the envelopes that they send."
        },
        "senderName": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            }
        },
        "serverTemplate": {
            "type": "object",
            "properties": {
                "sequence": {
                    "description": "",
                    "type": "string"
                },
                "templateId": {
                    "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                    "type": "string"
                }
            }
        },
        "serviceInformation": {
            "type": "object",
            "properties": {
                "buildBranch": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "buildBranchDeployedDateTime": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "buildSHA": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "buildVersion": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "linkedSites": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serviceVersions": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/serviceVersion"
                    }
                }
            }
        },
        "serviceVersion": {
            "type": "object",
            "properties": {
                "version": {
                    "description": "The version of the rest API.",
                    "type": "string"
                },
                "versionUrl": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "settingsMetadata": {
            "type": "object",
            "properties": {
                "is21CFRPart11": {
                    "description": "When set to **true**, indicates that this module is enabled on the account.",
                    "type": "string"
                },
                "options": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rights": {
                    "description": "",
                    "type": "string"
                },
                "uiHint": {
                    "description": "",
                    "type": "string"
                },
                "uiOrder": {
                    "description": "",
                    "type": "string"
                },
                "uiType": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Metadata that indicates whether a property is editable and describes setting-specific options."
        },
        "sharedItem": {
            "type": "object",
            "properties": {
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/userInfo",
                    "description": "Information about the user who owns the shared item."
                }
            },
            "description": "Information about the shared item."
        },
        "signatureGroup": {
            "type": "object",
            "properties": {
                "groupId": {
                    "description": "",
                    "type": "string"
                },
                "groupName": {
                    "description": "The name of the group.",
                    "type": "string"
                },
                "rights": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "signatureGroupDef": {
            "type": "object",
            "properties": {
                "groupId": {
                    "description": "",
                    "type": "string"
                },
                "rights": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "signatureProviderRequiredOption": {
            "type": "object",
            "properties": {
                "requiredSignatureProviderOptionIds": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signerType": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Contains additional information that a specific signature provider requires."
        },
        "signatureType": {
            "type": "object",
            "properties": {
                "isDefault": {
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object contains information about the type of signature."
        },
        "signatureUser": {
            "type": "object",
            "properties": {
                "isDefault": {
                    "description": "",
                    "type": "string"
                },
                "rights": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                },
                "userName": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "signatureUserDef": {
            "type": "object",
            "properties": {
                "isDefault": {
                    "description": "",
                    "type": "string"
                },
                "rights": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "signer": {
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "accessCodeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `accessCode` property is editable. This property is read-only."
                },
                "addAccessCodeToEmail": {
                    "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
                    "type": "string"
                },
                "additionalNotifications": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAdditionalNotification"
                    }
                },
                "agentCanEditEmail": {
                    "description": "",
                    "type": "string"
                },
                "agentCanEditName": {
                    "description": "",
                    "type": "string"
                },
                "allowSystemOverrideForLockedRecipient": {
                    "description": "",
                    "type": "string"
                },
                "autoNavigation": {
                    "description": "",
                    "type": "string"
                },
                "autoRespondedReason": {
                    "description": "",
                    "type": "string"
                },
                "bulkRecipientsUri": {
                    "description": "Contains a URI for an endpoint that allows you to easily retrieve bulk recipient information.",
                    "type": "string"
                },
                "bulkSendV2Recipient": {
                    "description": "",
                    "type": "string"
                },
                "canSignOffline": {
                    "description": "When set to **true**, specifies that the signer can perform the signing ceremony offline.",
                    "type": "string"
                },
                "clientUserId": {
                    "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "completedCount": {
                    "description": "",
                    "type": "string"
                },
                "consentDetailsList": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/consentDetails"
                    }
                },
                "creationReason": {
                    "description": "",
                    "type": "string"
                },
                "customFields": {
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "declinedDateTime": {
                    "description": "The date and time the recipient declined the document.",
                    "type": "string"
                },
                "declinedReason": {
                    "description": "The reason the recipient declined the document.",
                    "type": "string"
                },
                "defaultRecipient": {
                    "description": "",
                    "type": "string"
                },
                "delegatedBy": {
                    "$ref": "#/definitions/delegationInfo",
                    "description": ""
                },
                "delegatedTo": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/delegationInfo"
                    }
                },
                "deliveredDateTime": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethod": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethodMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "designatorId": {
                    "description": "",
                    "type": "string"
                },
                "designatorIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "documentVisibility": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentVisibility"
                    }
                },
                "email": {
                    "description": "Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "emailMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `email` property is editable. This property is read-only."
                },
                "emailNotification": {
                    "$ref": "#/definitions/recipientEmailNotification",
                    "description": "A complex type that contains information sets the language of the recipient's email information. \n\n**IMPORTANT**: If you enable email notification for one recipient, you must enable email notification for all recipients as it overrides the Envelope Subject and `EmailBlurb` property settings. "
                },
                "emailRecipientPostSigningURL": {
                    "description": "",
                    "type": "string"
                },
                "embeddedRecipientStartURL": {
                    "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "excludedDocuments": {
                    "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "faxNumber": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "faxNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "firstName": {
                    "description": "The user's first name. \nMaximum Length: 50 characters.",
                    "type": "string"
                },
                "firstNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `firstName` property is editable. This property is read-only."
                },
                "fullName": {
                    "description": "",
                    "type": "string"
                },
                "fullNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "idCheckConfigurationName": {
                    "description": "Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.",
                    "type": "string"
                },
                "idCheckConfigurationNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `idCheckConfigurationName` property is editable. This property is read-only."
                },
                "idCheckInformationInput": {
                    "$ref": "#/definitions/idCheckInformationInput",
                    "description": "An object that contains input information related to a recipient ID check."
                },
                "identityVerification": {
                    "$ref": "#/definitions/recipientIdentityVerification",
                    "description": "Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address)."
                },
                "inheritEmailNotificationConfiguration": {
                    "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                    "type": "string"
                },
                "isBulkRecipient": {
                    "description": "When set to **true**, this signer is a bulk recipient and the recipient information is contained in a bulk recipient file. \n\nNote that when this is true the email and name for the recipient becomes bulk@recipient.com and \"Bulk Recipient\". These fields can not be changed for the bulk recipient. \n",
                    "type": "string"
                },
                "isBulkRecipientMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "lastName": {
                    "description": "",
                    "type": "string"
                },
                "lastNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `lastName` property is editable. This property is read-only."
                },
                "lockedRecipientPhoneAuthEditable": {
                    "description": "",
                    "type": "string"
                },
                "lockedRecipientSmsEditable": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "notaryId": {
                    "description": "",
                    "type": "string"
                },
                "notarySignerEmailSent": {
                    "description": "",
                    "type": "string"
                },
                "note": {
                    "description": "Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.",
                    "type": "string"
                },
                "noteMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `note` property is editable. This property is read-only."
                },
                "offlineAttributes": {
                    "$ref": "#/definitions/offlineAttributes",
                    "description": "Reserved for DocuSign."
                },
                "phoneAuthentication": {
                    "$ref": "#/definitions/recipientPhoneAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:\n\n* `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.\n* `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.\n* `recordVoicePrint`: Reserved for DocuSign.\n* `validateRecipProvidedNumber`: Reserved for DocuSign.\n\n"
                },
                "phoneNumber": {
                    "$ref": "#/definitions/recipientPhoneNumber",
                    "description": "Describes the recipient phone number."
                },
                "proofFile": {
                    "$ref": "#/definitions/recipientProofFile",
                    "description": "The proof file of the recipient."
                },
                "recipientAttachments": {
                    "description": "Reserved:",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAttachment"
                    }
                },
                "recipientAuthenticationStatus": {
                    "$ref": "#/definitions/authenticationStatus",
                    "description": "Information about the recipient's authentication status. This property is read-only."
                },
                "recipientFeatureMetadata": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featureAvailableMetadata"
                    }
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientSignatureProviders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientSignatureProvider"
                    }
                },
                "recipientSuppliesTabs": {
                    "description": "",
                    "type": "string"
                },
                "recipientType": {
                    "description": "",
                    "type": "string"
                },
                "recipientTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientType` property is editable. This property is read-only."
                },
                "requireIdLookup": {
                    "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                    "type": "string"
                },
                "requireIdLookupMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireIdLookup` property is editable. This property is read-only."
                },
                "requireSignerCertificate": {
                    "description": "Sets the type of signer certificate required for signing. If left blank, no certificate is required. Only one type of certificate can be set for a signer. The possible values are:\n\n* docusign_express - Requires a DocuSign Express certificate.\n* safe - Requires a SAFE-BioPharma certificate.\n* open_trust - Requires an OpenTrust certificate. \n\n**Important**: There are certain rules and restrictions that must be followed when requiring OpenTrust digital signatures. See [ML:OpenTrust Rules and Restrictions] for more information. \n ",
                    "type": "string"
                },
                "requireSignOnPaper": {
                    "description": "When set to **true**, the signer must print, sign, and upload or fax the signed documents to DocuSign.",
                    "type": "string"
                },
                "requireUploadSignature": {
                    "description": "",
                    "type": "string"
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "routingOrder": {
                    "description": "Specifies the routing order of the recipient in the envelope. ",
                    "type": "string"
                },
                "routingOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `routingOrder` property is editable. This property is read-only."
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "signatureInfo": {
                    "$ref": "#/definitions/recipientSignatureInformation",
                    "description": "Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.\n\nUsed only with recipient types In Person Signers and Signers."
                },
                "signedDateTime": {
                    "description": "Reserved: For DocuSign use only. ",
                    "type": "string"
                },
                "signInEachLocation": {
                    "description": "When set to **true**, specifies that the signer must sign in all locations.",
                    "type": "string"
                },
                "signInEachLocationMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signInEachLocation` property is editable. This property is read-only."
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                },
                "signingGroupIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signingGroupId` property is editable. This property is read-only."
                },
                "signingGroupName": {
                    "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
                    "type": "string"
                },
                "signingGroupUsers": {
                    "description": "A complex type that contains information about users in the signing group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                },
                "smsAuthentication": {
                    "$ref": "#/definitions/recipientSMSAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `SMS Auth $`, you use this complex type to provide the recipient authentication method details. It contains the element `senderProvidedNumbers`, which is an array of phone numbers that the recipient can use for SMS text authentication. \n\n"
                },
                "socialAuthentications": {
                    "description": " Lists the social ID type that can be used for recipient authentication.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/socialAuthentication"
                    }
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusCode": {
                    "description": "",
                    "type": "string"
                },
                "suppressEmails": {
                    "description": "",
                    "type": "string"
                },
                "tabs": {
                    "$ref": "#/definitions/tabs",
                    "description": "The tabs to assign to the recipient.\n[More information](/docs/esign-rest-api/esign101/concepts/tabs/)."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "totalTabCount": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "A complex type containing information about a signer recipient. A signer is a recipient who must take action on a document, such as sign, initial, date, or add data to form fields on a document."
        },
        "signerAttachment": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "handDrawRequired": {
                    "description": "",
                    "type": "string"
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "optional": {
                    "description": "",
                    "type": "string"
                },
                "optionalMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `optional` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "scaleValue": {
                    "description": "",
                    "type": "string"
                },
                "scaleValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `scaleValue` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that allows the recipient to attach supporting\ndocuments to an envelope.\n"
        },
        "signerEmailNotifications": {
            "description": "An array of email notifications that specifies the email the user receives when they are a sender. When the specific email notification is set to true, the user receives those types of email notifications from DocuSign. The user inherits the default account sender email notification settings when the user is created.",
            "type": "object",
            "properties": {
                "agentNotification": {
                    "description": "When set to **true**, the user receives agent notification emails.",
                    "type": "string"
                },
                "carbonCopyNotification": {
                    "description": "When set to **true**, the user receives notifications of carbon copy deliveries.",
                    "type": "string"
                },
                "certifiedDeliveryNotification": {
                    "description": "When set to **true**, the user receives notifications of certified deliveries.",
                    "type": "string"
                },
                "commentsOnlyPrivateAndMention": {
                    "description": "",
                    "type": "string"
                },
                "commentsReceiveAll": {
                    "description": "",
                    "type": "string"
                },
                "documentMarkupActivation": {
                    "description": "When set to **true**, the user receives notification that document markup has been activated.",
                    "type": "string"
                },
                "envelopeActivation": {
                    "description": "When set to **true**, the user receives notification that the envelope has been activated.",
                    "type": "string"
                },
                "envelopeComplete": {
                    "description": "When set to **true**, the user receives notification that the envelope has been completed.",
                    "type": "string"
                },
                "envelopeCorrected": {
                    "description": "When set to **true**, the user receives notification that the envelope has been corrected.",
                    "type": "string"
                },
                "envelopeDeclined": {
                    "description": "When set to **true**, the user receives notification that the envelope has been declined.",
                    "type": "string"
                },
                "envelopeVoided": {
                    "description": "When set to **true**, the user receives notification that the envelope has been voided.",
                    "type": "string"
                },
                "faxReceived": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "offlineSigningFailed": {
                    "description": "When set to **true**, the user receives notification if the offline signing failed.",
                    "type": "string"
                },
                "purgeDocuments": {
                    "description": "When set to **true**, the user receives notification of document purges.",
                    "type": "string"
                },
                "reassignedSigner": {
                    "description": "When set to **true**, the user receives notification that the envelope has been reassigned.",
                    "type": "string"
                },
                "whenSigningGroupMember": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "signHere": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "handDrawRequired": {
                    "description": "",
                    "type": "string"
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "isSealSignTab": {
                    "description": "",
                    "type": "string"
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies the tool tip text for the tab.",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "optional": {
                    "description": "",
                    "type": "string"
                },
                "optionalMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `optional` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "scaleValue": {
                    "description": "",
                    "type": "string"
                },
                "scaleValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `scaleValue` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "stamp": {
                    "$ref": "#/definitions/stamp",
                    "description": ""
                },
                "stampType": {
                    "description": "",
                    "type": "string"
                },
                "stampTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `stampType` property is editable."
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that allows the recipient to sign a document. May be\noptional.\n"
        },
        "signingGroup": {
            "type": "object",
            "properties": {
                "created": {
                    "description": "",
                    "type": "string"
                },
                "createdBy": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "groupEmail": {
                    "description": "",
                    "type": "string"
                },
                "groupName": {
                    "description": "The name of the group.",
                    "type": "string"
                },
                "groupType": {
                    "description": "",
                    "type": "string"
                },
                "modified": {
                    "description": "",
                    "type": "string"
                },
                "modifiedBy": {
                    "description": "",
                    "type": "string"
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                },
                "users": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signingGroupUser"
                    }
                }
            },
            "description": "Contains details about a signing group. Signing groups enable you to send an envelope to a predefined group of recipients and have any one member of the group sign your documents. When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature."
        },
        "signingGroupInformation": {
            "type": "object",
            "properties": {
                "groups": {
                    "description": "A collection group objects containing information about the groups returned.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signingGroup"
                    }
                }
            }
        },
        "signingGroupUser": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "userName": {
                    "description": "The name of the group member. \n\nMaximum Length: 100 characters. ",
                    "type": "string"
                }
            }
        },
        "signingGroupUsers": {
            "type": "object",
            "properties": {
                "users": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signingGroupUser"
                    }
                }
            }
        },
        "smartContractInformation": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "",
                    "type": "string"
                },
                "uri": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "smartSection": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "caseSensitive": {
                    "description": "",
                    "type": "boolean"
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "displaySettings": {
                    "$ref": "#/definitions/smartSectionDisplaySettings",
                    "description": "This object defines how the HTML section inside the `startAnchor` and `endAnchor` displays."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "endAnchor": {
                    "description": "",
                    "type": "string"
                },
                "endPosition": {
                    "$ref": "#/definitions/smartSectionAnchorPosition",
                    "description": "The last position in the result set. "
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "overlayType": {
                    "description": "",
                    "type": "string"
                },
                "overlayTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `overlayType` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "removeEndAnchor": {
                    "description": "",
                    "type": "boolean"
                },
                "removeStartAnchor": {
                    "description": "",
                    "type": "boolean"
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `shared` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "startAnchor": {
                    "description": "",
                    "type": "string"
                },
                "startPosition": {
                    "$ref": "#/definitions/smartSectionAnchorPosition",
                    "description": "Starting position of the current result set."
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            }
        },
        "smartSectionAnchorPosition": {
            "type": "object",
            "properties": {
                "pageNumber": {
                    "format": "int32",
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "integer"
                },
                "xPosition": {
                    "format": "double",
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "number"
                },
                "yPosition": {
                    "format": "double",
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "number"
                }
            }
        },
        "smartSectionCollapsibleDisplaySettings": {
            "type": "object",
            "properties": {
                "arrowClosed": {
                    "description": "",
                    "type": "string"
                },
                "arrowColor": {
                    "description": "",
                    "type": "string"
                },
                "arrowLocation": {
                    "description": "",
                    "type": "string"
                },
                "arrowOpen": {
                    "description": "",
                    "type": "string"
                },
                "arrowSize": {
                    "description": "",
                    "type": "string"
                },
                "arrowStyle": {
                    "description": "",
                    "type": "string"
                },
                "containerStyle": {
                    "description": "",
                    "type": "string"
                },
                "labelStyle": {
                    "description": "",
                    "type": "string"
                },
                "onlyArrowIsClickable": {
                    "description": "",
                    "type": "boolean"
                },
                "outerLabelAndArrowStyle": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "smartSectionDisplaySettings": {
            "type": "object",
            "properties": {
                "cellStyle": {
                    "description": "",
                    "type": "string"
                },
                "collapsibleSettings": {
                    "$ref": "#/definitions/smartSectionCollapsibleDisplaySettings",
                    "description": "This object defines the appearance and function of a collapsible section or item."
                },
                "display": {
                    "description": "",
                    "type": "string"
                },
                "displayLabel": {
                    "description": "",
                    "type": "string"
                },
                "displayOrder": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "displayPageNumber": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "hideLabelWhenOpened": {
                    "description": "",
                    "type": "boolean"
                },
                "inlineOuterStyle": {
                    "description": "",
                    "type": "string"
                },
                "labelWhenOpened": {
                    "description": "",
                    "type": "string"
                },
                "preLabel": {
                    "description": "",
                    "type": "string"
                },
                "scrollToTopWhenOpened": {
                    "description": "",
                    "type": "boolean"
                },
                "tableStyle": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "These properties define how a Smart Section displays. A Smart Section is a type of display section."
        },
        "socialAccountInformation": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "The users email address.",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "provider": {
                    "description": "The social account provider (Facebook, Yahoo, etc.)",
                    "type": "string"
                },
                "socialId": {
                    "description": "The ID provided by the Socal Account.",
                    "type": "string"
                },
                "userName": {
                    "description": "The full user name for the account.",
                    "type": "string"
                }
            }
        },
        "socialAuthentication": {
            "type": "object",
            "properties": {
                "authentication": {
                    "description": "Reserved: TBD",
                    "type": "string"
                }
            }
        },
        "ssn": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "concealValueOnDocumentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `concealValueOnDocument` property is editable."
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "disableAutoSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `disableAutoSize` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "maxLength": {
                    "description": "An optional value that describes the maximum length of the property when the property is a string.",
                    "type": "string"
                },
                "maxLengthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `maxLength` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies the tool tip text for the tab.",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "requireAll": {
                    "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
                    "type": "string"
                },
                "requireAllMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireAll` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "requireInitialOnSharedChange": {
                    "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
                    "type": "string"
                },
                "requireInitialOnSharedChangeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireInitialOnSharedChange` property is editable."
                },
                "senderRequired": {
                    "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                    "type": "string"
                },
                "senderRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `senderRequired` property is editable."
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `shared` property is editable."
                },
                "shareToRecipients": {
                    "description": "",
                    "type": "string"
                },
                "shareToRecipientsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "validationMessage": {
                    "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                    "type": "string"
                },
                "validationMessageMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `validationMessage` property is editable."
                },
                "validationPattern": {
                    "description": "A regular expression used to validate input for the tab.",
                    "type": "string"
                },
                "validationPatternMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `validationPattern` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A one-line field that allows the recipient to enter a Social\nSecurity Number. The SSN can be typed with or without\ndashes. It uses the same parameters as a Text tab, with the\nvalidation message and pattern set for SSN information.\n"
        },
        "ssn4InformationInput": {
            "type": "object",
            "properties": {
                "displayLevelCode": {
                    "description": "Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay",
                    "type": "string"
                },
                "receiveInResponse": {
                    "description": "When set to **true**, the information needs to be returned in the response.",
                    "type": "string"
                },
                "ssn4": {
                    "description": "The last four digits of the recipient's Social Security Number (SSN).",
                    "type": "string"
                }
            }
        },
        "ssn9InformationInput": {
            "type": "object",
            "properties": {
                "displayLevelCode": {
                    "description": "Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay",
                    "type": "string"
                },
                "ssn9": {
                    "description": " The recipient's Social Security Number(SSN).",
                    "type": "string"
                }
            }
        },
        "stamp": {
            "type": "object",
            "properties": {
                "adoptedDateTime": {
                    "description": "",
                    "type": "string"
                },
                "createdDateTime": {
                    "description": "Indicates the date and time the item was created.",
                    "type": "string"
                },
                "customField": {
                    "description": "",
                    "type": "string"
                },
                "dateStampProperties": {
                    "$ref": "#/definitions/dateStampProperties",
                    "description": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle."
                },
                "disallowUserResizeStamp": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "externalID": {
                    "description": "",
                    "type": "string"
                },
                "imageBase64": {
                    "description": "",
                    "type": "string"
                },
                "imageType": {
                    "description": "",
                    "type": "string"
                },
                "lastModifiedDateTime": {
                    "description": "The date and time the item was last modified.",
                    "type": "string"
                },
                "phoneticName": {
                    "description": "",
                    "type": "string"
                },
                "signatureName": {
                    "description": "Specifies the user signature name.",
                    "type": "string"
                },
                "stampFormat": {
                    "description": "",
                    "type": "string"
                },
                "stampImageUri": {
                    "description": "",
                    "type": "string"
                },
                "stampSizeMM": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                }
            }
        },
        "supportedLanguages": {
            "type": "object",
            "properties": {
                "languages": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nameValue"
                    }
                }
            },
            "description": "A list of supported languages."
        },
        "tabAccountSettings": {
            "type": "object",
            "properties": {
                "allowTabOrder": {
                    "description": "",
                    "type": "string"
                },
                "allowTabOrderMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowTabOrder` property is editable.\n"
                },
                "approveDeclineTabsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "approveDeclineTabsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `approveDeclineTabs` property is editable.\n"
                },
                "calculatedFieldsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "calculatedFieldsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `calculatedFields` property is editable.\n"
                },
                "checkboxTabsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "checkBoxTabsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `checkBoxTabs` property is editable."
                },
                "dataFieldRegexEnabled": {
                    "description": "",
                    "type": "string"
                },
                "dataFieldRegexMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `dataFieldRegex` property is editable.\n"
                },
                "dataFieldSizeEnabled": {
                    "description": "",
                    "type": "string"
                },
                "dataFieldSizeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `dataFieldSize` property is editable.\n"
                },
                "drawTabsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "drawTabsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "firstLastEmailTabsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "firstLastEmailTabsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "listTabsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "listTabsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `listTabs` property is editable.\n"
                },
                "noteTabsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "noteTabsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `noteTabs` property is editable.\n"
                },
                "numericalTabsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "numericalTabsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "prefillTabsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "prefillTabsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "radioTabsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "radioTabsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `radioTabs` property is editable.\n"
                },
                "savingCustomTabsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "savingCustomTabsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `savingCustomTabs` property is editable.\n"
                },
                "senderToChangeTabAssignmentsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "senderToChangeTabAssignmentsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "sharedCustomTabsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "sharedCustomTabsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `sharedCustomTabs` property is editable.\n"
                },
                "tabDataLabelEnabled": {
                    "description": "",
                    "type": "string"
                },
                "tabDataLabelMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `tabDataLabel` property is editable.\n"
                },
                "tabLocationEnabled": {
                    "description": "",
                    "type": "string"
                },
                "tabLocationMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "tabLockingEnabled": {
                    "description": "",
                    "type": "string"
                },
                "tabLockingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `tabLocking` property is editable.\n"
                },
                "tabScaleEnabled": {
                    "description": "",
                    "type": "string"
                },
                "tabScaleMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "tabTextFormattingEnabled": {
                    "description": "",
                    "type": "string"
                },
                "tabTextFormattingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `tabTextFormatting` property is editable.\n"
                },
                "textTabsEnabled": {
                    "description": "",
                    "type": "string"
                },
                "textTabsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `textTabs` property is editable.\n"
                }
            }
        },
        "tabGroup": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "groupLabel": {
                    "description": "",
                    "type": "string"
                },
                "groupLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `groupLabel` property is editable."
                },
                "groupRule": {
                    "description": "",
                    "type": "string"
                },
                "groupRuleMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `groupRule` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "maximumAllowed": {
                    "description": "",
                    "type": "string"
                },
                "maximumAllowedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `maximumAllowed` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "minimumRequired": {
                    "description": "",
                    "type": "string"
                },
                "minimumRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `minimumRequired` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabScope": {
                    "description": "",
                    "type": "string"
                },
                "tabScopeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabScope` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "validationMessage": {
                    "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                    "type": "string"
                },
                "validationMessageMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `validationMessage` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            }
        },
        "tabMetadata": {
            "type": "object",
            "properties": {
                "anchor": {
                    "description": "An optional string that is used to auto-match tabs to strings located in the documents of an envelope.",
                    "type": "string"
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "collaborative": {
                    "description": "",
                    "type": "string"
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "createdByDisplayName": {
                    "description": "The user name of the DocuSign user who created this object.",
                    "type": "string"
                },
                "createdByUserId": {
                    "description": "The userId of the DocuSign user who created this object.",
                    "type": "string"
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "editable": {
                    "description": "When set to **true**, the custom tab is editable. Otherwise the custom tab cannot be modified.",
                    "type": "string"
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "includedInEmail": {
                    "description": "When set to **true**, the tab is included in e-mails related to the envelope on which it exists. This applies to only specific tabs.",
                    "type": "string"
                },
                "initialValue": {
                    "description": "The original value of the tab.",
                    "type": "string"
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "items": {
                    "description": "If the tab is a list, this represents the values that are possible for the tab.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lastModified": {
                    "description": "The UTC DateTime this object was last modified. This is in ISO8601 format.",
                    "type": "string"
                },
                "lastModifiedByDisplayName": {
                    "description": "The User Name of the DocuSign user who last modified this object.",
                    "type": "string"
                },
                "lastModifiedByUserId": {
                    "description": "The userId of the DocuSign user who last modified this object.",
                    "type": "string"
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "maximumLength": {
                    "description": "The maximum number of entry characters supported by the custom tab.",
                    "type": "string"
                },
                "maxNumericalValue": {
                    "description": "",
                    "type": "string"
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "minNumericalValue": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "numericalValue": {
                    "description": "",
                    "type": "string"
                },
                "paymentItemCode": {
                    "description": "",
                    "type": "string"
                },
                "paymentItemDescription": {
                    "description": "",
                    "type": "string"
                },
                "paymentItemName": {
                    "description": "",
                    "type": "string"
                },
                "requireAll": {
                    "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
                    "type": "string"
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requireInitialOnSharedChange": {
                    "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
                    "type": "string"
                },
                "scaleValue": {
                    "description": "",
                    "type": "string"
                },
                "selected": {
                    "description": "",
                    "type": "string"
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "signatureProviderId": {
                    "description": "",
                    "type": "string"
                },
                "stampType": {
                    "description": "",
                    "type": "string"
                },
                "stampTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `stampType` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of this tab. Values are: Approve, CheckBox, Company, Date, DateSigned,\tDecline, Email,\tEmailAddress, EnvelopeId, FirstName, Formula, FullName,\tInitialHere, InitialHereOptional, LastName, List, Note, Number,\tRadio, SignerAttachment, SignHere, SignHereOptional, Ssn, Text, Title, Zip5, or Zip5Dash4.",
                    "type": "string"
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "validationMessage": {
                    "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                    "type": "string"
                },
                "validationPattern": {
                    "description": "A regular expression used to validate input for the tab.",
                    "type": "string"
                },
                "validationType": {
                    "description": "",
                    "type": "string"
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                }
            }
        },
        "tabMetadataList": {
            "type": "object",
            "properties": {
                "tabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tabMetadata"
                    }
                }
            }
        },
        "tabs": {
            "type": "object",
            "properties": {
                "approveTabs": {
                    "description": "Specifies a tag on the document where you want the recipient to approve documents in an envelope without placing a signature or initials on the document. If the recipient clicks the Approve tag during the signing process, the recipient is considered to have signed the document. No information is shown on the document for the approval, but it is recorded as a signature in the envelope history.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/approve"
                    }
                },
                "checkboxTabs": {
                    "description": "Specifies a tag on the document in a location where the recipient can select an option.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkbox"
                    }
                },
                "commentThreadTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commentThread"
                    }
                },
                "commissionCountyTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commissionCounty"
                    }
                },
                "commissionExpirationTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commissionExpiration"
                    }
                },
                "commissionNumberTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commissionNumber"
                    }
                },
                "commissionStateTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commissionState"
                    }
                },
                "companyTabs": {
                    "description": "Specifies a tag on the document where you want the recipient's company name to appear.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/company"
                    }
                },
                "dateSignedTabs": {
                    "description": "Specifies a tab on the document where the date the document was signed will automatically appear.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dateSigned"
                    }
                },
                "dateTabs": {
                    "description": "Specifies a tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. \n\nIf you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/date"
                    }
                },
                "declineTabs": {
                    "description": "Specifies a tag on the document where you want to give the recipient the option of declining an envelope. If the recipient clicks the Decline tag during the signing process, the envelope is voided.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/decline"
                    }
                },
                "drawTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/draw"
                    }
                },
                "emailAddressTabs": {
                    "description": "Specifies a location on the document where you want where you want the recipient's email, as entered in the recipient information, to display.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/emailAddress"
                    }
                },
                "emailTabs": {
                    "description": "Specifies a tag on the document where you want the recipient to enter an email. Email tags are single-line fields that accept any characters. The system checks that a valid email format (i.e. xxx@yyy.zzz) is entered in the tag. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/email"
                    }
                },
                "envelopeIdTabs": {
                    "description": "Specifies a tag on the document where you want the envelope ID for to appear. Recipients cannot enter or change the information in this tab, it is for informational purposes only.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeId"
                    }
                },
                "firstNameTabs": {
                    "description": "Specifies tag on a document where you want the recipient's first name to appear. This tag takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/firstName"
                    }
                },
                "formulaTabs": {
                    "description": "Specifies a tag that is used to add a calculated field to a document. Envelope recipients cannot directly enter information into the tag; the formula tab calculates and displays a new value when changes are made to the reference tag values. The reference tag information and calculation operations are entered in the \"formula\" element. See the [ML:Using the Calculated Fields Feature] quick start guide or [ML:DocuSign Service User Guide] for more information about formulas.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/formulaTab"
                    }
                },
                "fullNameTabs": {
                    "description": "Specifies a tag on the document where you want the recipient's name to appear.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/fullName"
                    }
                },
                "initialHereTabs": {
                    "description": "Specifies a tag location in the document at which a recipient will place their initials. The `optional` parameter specifies whether the initials are required or optional.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/initialHere"
                    }
                },
                "lastNameTabs": {
                    "description": "Specifies a tag on a document where you want the recipient's last name to appear. This tag takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lastName"
                    }
                },
                "listTabs": {
                    "description": "Specify this tag to give your recipient a list of options, presented as a drop-down list, from which they can select.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/list"
                    }
                },
                "notarizeTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/notarize"
                    }
                },
                "notarySealTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/notarySeal"
                    }
                },
                "noteTabs": {
                    "description": "Specifies a location on the document where you want to place additional information, in the form of a note, for a recipient.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/note"
                    }
                },
                "numberTabs": {
                    "description": "Specifies a tag on the document where you want the recipient to enter a number. It uses the same parameters as a Text tab, with the validation message and pattern set for number information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/number"
                    }
                },
                "numericalTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/numerical"
                    }
                },
                "phoneNumberTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/phoneNumber"
                    }
                },
                "polyLineOverlayTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/polyLineOverlay"
                    }
                },
                "prefillTabs": {
                    "$ref": "#/definitions/prefillTabs",
                    "description": "Prefill tabs are tabs\nthat the sender can fill in\nbefore the envelope is sent.\nThey are sometimes called\nsender tags or pre-fill fields.\n\n\n[Pre-Fill Your Own Document Fields][app]\ndescribes how prefill tabs\nwork in the web application.\n\n\n[Customize your envelopes with pre-fill fields][catblog]\nshows how to use prefill tabs\nin your application using the eSignature\nSDKs.\n\n[app]:      https://support.docusign.com/en/guides/ndse-user-guide-prefill-fields\n[catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields"
                },
                "radioGroupTabs": {
                    "description": "Specifies a tag on the document in a location where the recipient can select one option from a group of options using a radio button. The radio buttons do not have to be on the same page in a document.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/radioGroup"
                    }
                },
                "signerAttachmentTabs": {
                    "description": "Specifies a tag on the document when you want the recipient to add supporting documents to an envelope.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signerAttachment"
                    }
                },
                "signHereTabs": {
                    "description": "A complex type the contains information about the tag that specifies where the recipient places their signature in the document. The \"optional\" parameter sets if the signature is required or optional.\n",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signHere"
                    }
                },
                "smartSectionTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smartSection"
                    }
                },
                "ssnTabs": {
                    "description": "Specifies a tag on the document where you want the recipient to enter a Social Security Number (SSN). A SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ssn"
                    }
                },
                "tabGroups": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tabGroup"
                    }
                },
                "textTabs": {
                    "description": "Specifies a that that is an adaptable field that allows the recipient to enter different text information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/text"
                    }
                },
                "titleTabs": {
                    "description": "Specifies a tag on the document where you want the recipient's title to appear.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/title"
                    }
                },
                "viewTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view"
                    }
                },
                "zipTabs": {
                    "description": "Specifies a tag on the document where you want the recipient to enter a ZIP code. The ZIP code can be a five numbers or the ZIP+4 format with nine numbers. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/zip"
                    }
                }
            },
            "description": "Tabs indicate to recipients where they should sign, initial, or enter data on a document. They are represented graphically as symbols on documents at the time of signing. Tabs can also display data to the recipients."
        },
        "templateCustomFields": {
            "type": "object",
            "properties": {
                "listCustomFields": {
                    "description": "An array of list custom fields.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/listCustomField"
                    }
                },
                "textCustomFields": {
                    "description": "An array of text custom fields.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/textCustomField"
                    }
                }
            }
        },
        "templateDocumentsResult": {
            "type": "object",
            "properties": {
                "templateDocuments": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeDocument"
                    }
                },
                "templateId": {
                    "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                    "type": "string"
                }
            }
        },
        "templateDocumentVisibilityList": {
            "type": "object",
            "properties": {
                "documentVisibility": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentVisibility"
                    }
                }
            },
            "description": "A list of `documentVisibility` objects that specify whether the documents associated with a template are visible to recipients."
        },
        "templateInformation": {
            "type": "object",
            "properties": {
                "templates": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/templateSummary"
                    }
                }
            }
        },
        "templateMatch": {
            "type": "object",
            "properties": {
                "documentEndPage": {
                    "description": "",
                    "type": "string"
                },
                "documentStartPage": {
                    "description": "",
                    "type": "string"
                },
                "matchPercentage": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "templateNotificationRequest": {
            "type": "object",
            "properties": {
                "expirations": {
                    "$ref": "#/definitions/expirations",
                    "description": "A complex element that specifies the expiration settings for the envelope."
                },
                "password": {
                    "description": "",
                    "type": "string"
                },
                "reminders": {
                    "$ref": "#/definitions/reminders",
                    "description": "A complex element that specifies reminder settings for the envelope."
                },
                "useAccountDefaults": {
                    "description": "When set to **true**, the account default notification settings are used for the envelope.",
                    "type": "string"
                }
            }
        },
        "templateRecipients": {
            "type": "object",
            "properties": {
                "agents": {
                    "description": "A complex type defining the management and access rights of a recipient assigned assigned as an agent on the document.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/agent"
                    }
                },
                "carbonCopies": {
                    "description": "A complex type containing information about recipients who should receive a copy of the envelope, but does not need to sign it.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/carbonCopy"
                    }
                },
                "certifiedDeliveries": {
                    "description": "A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/certifiedDelivery"
                    }
                },
                "currentRoutingOrder": {
                    "description": "",
                    "type": "string"
                },
                "editors": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/editor"
                    }
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "inPersonSigners": {
                    "description": "Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inPersonSigner"
                    }
                },
                "intermediaries": {
                    "description": "Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/intermediary"
                    }
                },
                "notaries": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/notaryRecipient"
                    }
                },
                "participants": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/participant"
                    }
                },
                "recipientCount": {
                    "description": "The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:\n\n* recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.\n* includeDocuments - When set to **true**, the envelope time zone information is included in the message.",
                    "type": "string"
                },
                "seals": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sealSign"
                    }
                },
                "signers": {
                    "description": "A complex type containing information about the Signer recipient.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signer"
                    }
                },
                "witnesses": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/witness"
                    }
                }
            }
        },
        "templateRole": {
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "additionalNotifications": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAdditionalNotification"
                    }
                },
                "clientUserId": {
                    "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "defaultRecipient": {
                    "description": "When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.",
                    "type": "string"
                },
                "deliveryMethod": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "email": {
                    "description": "Specifies the email associated with a role name.",
                    "type": "string"
                },
                "emailNotification": {
                    "$ref": "#/definitions/recipientEmailNotification",
                    "description": "A complex type that contains information sets the language of the recipient's email information. \n\n**IMPORTANT**: If you enable email notification for one recipient, you must enable email notification for all recipients as it overrides the Envelope Subject and `EmailBlurb` property settings. "
                },
                "embeddedRecipientStartURL": {
                    "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                    "type": "string"
                },
                "inPersonSignerName": {
                    "description": "Specifies the full legal name of the signer in person signer template roles.\n\nMaximum Length: 100 characters.",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies the recipient's name.",
                    "type": "string"
                },
                "phoneNumber": {
                    "$ref": "#/definitions/recipientPhoneNumber",
                    "description": "Describes the recipient phone number."
                },
                "recipientSignatureProviders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientSignatureProvider"
                    }
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "routingOrder": {
                    "description": "Specifies the routing order of the recipient in the envelope. ",
                    "type": "string"
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                },
                "tabs": {
                    "$ref": "#/definitions/tabs",
                    "description": "A list of tabs, which are represented graphically as symbols on documents at the time of signing. Tabs show recipients where to sign, initial, or enter data. They may also display data to the recipients."
                }
            },
            "description": "Information about a specific role."
        },
        "templateSharedItem": {
            "type": "object",
            "properties": {
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "owner": {
                    "$ref": "#/definitions/userInfo",
                    "description": "Information about the user who owns the template."
                },
                "password": {
                    "description": "",
                    "type": "string"
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedGroups": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/memberGroupSharedItem"
                    }
                },
                "sharedUsers": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userSharedItem"
                    }
                },
                "templateId": {
                    "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                    "type": "string"
                },
                "templateName": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Information about shared templates."
        },
        "templateSummary": {
            "type": "object",
            "properties": {
                "applied": {
                    "description": "Reserved: TBD",
                    "type": "string"
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentName": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "templateId": {
                    "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                    "type": "string"
                },
                "templateMatch": {
                    "$ref": "#/definitions/templateMatch",
                    "description": ""
                },
                "uri": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Summary of a template request."
        },
        "templateTabs": {
            "type": "object",
            "properties": {
                "approveTabs": {
                    "description": "Specifies a tag on the document where you want the recipient to approve documents in an envelope without placing a signature or initials on the document. If the recipient clicks the Approve tag during the signing process, the recipient is considered to have signed the document. No information is shown on the document for the approval, but it is recorded as a signature in the envelope history.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/approve"
                    }
                },
                "checkboxTabs": {
                    "description": "Specifies a tag on the document in a location where the recipient can select an option.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkbox"
                    }
                },
                "commentThreadTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commentThread"
                    }
                },
                "commissionCountyTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commissionCounty"
                    }
                },
                "commissionExpirationTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commissionExpiration"
                    }
                },
                "commissionNumberTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commissionNumber"
                    }
                },
                "commissionStateTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commissionState"
                    }
                },
                "companyTabs": {
                    "description": "Specifies a tag on the document where you want the recipient's company name to appear.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/company"
                    }
                },
                "dateSignedTabs": {
                    "description": "Specifies a tab on the document where the date the document was signed will automatically appear.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dateSigned"
                    }
                },
                "dateTabs": {
                    "description": "Specifies a tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. \n\nIf you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/date"
                    }
                },
                "declineTabs": {
                    "description": "Specifies a tag on the document where you want to give the recipient the option of declining an envelope. If the recipient clicks the Decline tag during the signing process, the envelope is voided.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/decline"
                    }
                },
                "drawTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/draw"
                    }
                },
                "emailAddressTabs": {
                    "description": "Specifies a location on the document where you want where you want the recipient's email, as entered in the recipient information, to display.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/emailAddress"
                    }
                },
                "emailTabs": {
                    "description": "Specifies a tag on the document where you want the recipient to enter an email. Email tags are single-line fields that accept any characters. The system checks that a valid email format (i.e. xxx@yyy.zzz) is entered in the tag. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/email"
                    }
                },
                "envelopeIdTabs": {
                    "description": "Specifies a tag on the document where you want the envelope ID for to appear. Recipients cannot enter or change the information in this tab, it is for informational purposes only.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/envelopeId"
                    }
                },
                "firstNameTabs": {
                    "description": "Specifies tag on a document where you want the recipient's first name to appear. This tag takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/firstName"
                    }
                },
                "formulaTabs": {
                    "description": "Specifies a tag that is used to add a calculated field to a document. Envelope recipients cannot directly enter information into the tag; the formula tab calculates and displays a new value when changes are made to the reference tag values. The reference tag information and calculation operations are entered in the \"formula\" element. See the [ML:Using the Calculated Fields Feature] quick start guide or [ML:DocuSign Service User Guide] for more information about formulas.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/formulaTab"
                    }
                },
                "fullNameTabs": {
                    "description": "Specifies a tag on the document where you want the recipient's name to appear.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/fullName"
                    }
                },
                "initialHereTabs": {
                    "description": "Specifies a tag location in the document at which a recipient will place their initials. The `optional` parameter specifies whether the initials are required or optional.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/initialHere"
                    }
                },
                "lastNameTabs": {
                    "description": "Specifies a tag on a document where you want the recipient's last name to appear. This tag takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lastName"
                    }
                },
                "listTabs": {
                    "description": "Specify this tag to give your recipient a list of options, presented as a drop-down list, from which they can select.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/list"
                    }
                },
                "notarizeTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/notarize"
                    }
                },
                "notarySealTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/notarySeal"
                    }
                },
                "noteTabs": {
                    "description": "Specifies a location on the document where you want to place additional information, in the form of a note, for a recipient.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/note"
                    }
                },
                "numberTabs": {
                    "description": "Specifies a tag on the document where you want the recipient to enter a number. It uses the same parameters as a Text tab, with the validation message and pattern set for number information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/number"
                    }
                },
                "numericalTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/numerical"
                    }
                },
                "phoneNumberTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/phoneNumber"
                    }
                },
                "polyLineOverlayTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/polyLineOverlay"
                    }
                },
                "prefillTabs": {
                    "$ref": "#/definitions/prefillTabs",
                    "description": "Prefill tabs are tabs\nthat the sender can fill in\nbefore the envelope is sent.\nThey are sometimes called\nsender tags or pre-fill fields.\n\n\n[Pre-Fill Your Own Document Fields][app]\ndescribes how prefill tabs\nwork in the web application.\n\n\n[Customize your envelopes with pre-fill fields][catblog]\nshows how to use prefill tabs\nin your application using the eSignature\nSDKs.\n\n[app]:      https://support.docusign.com/en/guides/ndse-user-guide-prefill-fields\n[catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields"
                },
                "radioGroupTabs": {
                    "description": "Specifies a tag on the document in a location where the recipient can select one option from a group of options using a radio button. The radio buttons do not have to be on the same page in a document.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/radioGroup"
                    }
                },
                "signerAttachmentTabs": {
                    "description": "Specifies a tag on the document when you want the recipient to add supporting documents to an envelope.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signerAttachment"
                    }
                },
                "signHereTabs": {
                    "description": "A complex type the contains information about the tag that specifies where the recipient places their signature in the document. The \"optional\" parameter sets if the signature is required or optional.\n",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signHere"
                    }
                },
                "smartSectionTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smartSection"
                    }
                },
                "ssnTabs": {
                    "description": "Specifies a tag on the document where you want the recipient to enter a Social Security Number (SSN). A SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ssn"
                    }
                },
                "tabGroups": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tabGroup"
                    }
                },
                "textTabs": {
                    "description": "Specifies a that that is an adaptable field that allows the recipient to enter different text information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/text"
                    }
                },
                "titleTabs": {
                    "description": "Specifies a tag on the document where you want the recipient's title to appear.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/title"
                    }
                },
                "viewTabs": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view"
                    }
                },
                "zipTabs": {
                    "description": "Specifies a tag on the document where you want the recipient to enter a ZIP code. The ZIP code can be a five numbers or the ZIP+4 format with nine numbers. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.\n\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/zip"
                    }
                }
            }
        },
        "templateUpdateSummary": {
            "type": "object",
            "properties": {
                "bulkEnvelopeStatus": {
                    "$ref": "#/definitions/bulkEnvelopeStatus",
                    "description": "An object that describes the status of the bulk send envelopes."
                },
                "envelopeId": {
                    "description": "The envelope ID of the envelope status that failed to post.",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "listCustomFieldUpdateResults": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/listCustomField"
                    }
                },
                "lockInformation": {
                    "$ref": "#/definitions/lockInformation",
                    "description": "Provides lock information about an envelope that a user has locked."
                },
                "purgeState": {
                    "description": "",
                    "type": "string"
                },
                "recipientUpdateResults": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientUpdateResponse"
                    }
                },
                "tabUpdateResults": {
                    "$ref": "#/definitions/tabs",
                    "description": ""
                },
                "textCustomFieldUpdateResults": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/textCustomField"
                    }
                }
            }
        },
        "templateViewRequest": {
            "type": "object",
            "properties": {
                "returnUrl": {
                    "description": "",
                    "type": "string"
                },
                "viewAccess": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "text": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "concealValueOnDocumentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `concealValueOnDocument` property is editable."
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "disableAutoSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `disableAutoSize` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "formula": {
                    "description": "The Formula string contains the TabLabel for the reference tabs used in the formula and calculation operators. Each TabLabel must be contained in brackets. \nMaximum Length: 2000 characters.\n\n*Example*: Three tabs (TabLabels: Line1, Line2, and Tax) need to be added together. The formula string would be: \n\n[Line1]+[Line2]+[Tax]",
                    "type": "string"
                },
                "formulaMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata indicating if the sender can edit the `formula` property."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "isPaymentAmount": {
                    "description": "When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number. ",
                    "type": "string"
                },
                "isPaymentAmountMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "maxLength": {
                    "description": "An optional value that describes the maximum length of the property when the property is a string.",
                    "type": "string"
                },
                "maxLengthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `maxLength` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies the tool tip text for the tab.",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "requireAll": {
                    "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
                    "type": "string"
                },
                "requireAllMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireAll` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "requireInitialOnSharedChange": {
                    "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
                    "type": "string"
                },
                "requireInitialOnSharedChangeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireInitialOnSharedChange` property is editable."
                },
                "senderRequired": {
                    "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                    "type": "string"
                },
                "senderRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `senderRequired` property is editable."
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `shared` property is editable."
                },
                "shareToRecipients": {
                    "description": "",
                    "type": "string"
                },
                "shareToRecipientsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "validationMessage": {
                    "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                    "type": "string"
                },
                "validationMessageMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `validationMessage` property is editable."
                },
                "validationPattern": {
                    "description": "A regular expression used to validate input for the tab.",
                    "type": "string"
                },
                "validationPatternMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `validationPattern` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that allows the recipient to enter any type of text.\n"
        },
        "textCustomField": {
            "type": "object",
            "properties": {
                "configurationType": {
                    "description": "If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "fieldId": {
                    "description": "An ID used to specify a custom field.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the custom field.",
                    "type": "string"
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "show": {
                    "description": "A boolean indicating if the value should be displayed.",
                    "type": "string"
                },
                "value": {
                    "description": "The value of the custom field.",
                    "type": "string"
                }
            },
            "description": "This object represents a free text custom field where envelope creators and senders can enter custom data."
        },
        "title": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "concealValueOnDocumentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `concealValueOnDocument` property is editable."
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "disableAutoSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `disableAutoSize` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "maxLength": {
                    "description": "An optional value that describes the maximum length of the property when the property is a string.",
                    "type": "string"
                },
                "maxLengthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `maxLength` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that displays the recipient's title.\n"
        },
        "usageHistory": {
            "description": "A complex element consisting of: \n\n* lastSentDateTime - the date and time the user last sent an envelope. \n* lastSignedDateTime - the date and time the user last signed an envelope.\n* sentCount - the number of envelopes the user has sent.\n* signedCount - the number of envelopes the user has signed.",
            "type": "object",
            "properties": {
                "lastSentDateTime": {
                    "description": "The date and time the user last sent an envelope. ",
                    "type": "string"
                },
                "lastSignedDateTime": {
                    "description": "The date and time the user last signed an envelope.",
                    "type": "string"
                },
                "sentCount": {
                    "description": "The number of envelopes the user has sent. ",
                    "type": "string"
                },
                "signedCount": {
                    "description": "The number of envelopes the user has signed. ",
                    "type": "string"
                }
            }
        },
        "userAccountManagementGranularInformation": {
            "type": "object",
            "properties": {
                "canManageAccountSecuritySettings": {
                    "description": "",
                    "type": "string"
                },
                "canManageAccountSecuritySettingsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canManageAccountSettings": {
                    "description": "",
                    "type": "string"
                },
                "canManageAccountSettingsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canManageAdmins": {
                    "description": "",
                    "type": "string"
                },
                "canManageAdminsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `canManageAdmins` property is editable.\n"
                },
                "canManageConnect": {
                    "description": "",
                    "type": "string"
                },
                "canManageConnectMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canManageDocumentRetention": {
                    "description": "",
                    "type": "string"
                },
                "canManageDocumentRetentionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canManageEnvelopeTransfer": {
                    "description": "",
                    "type": "string"
                },
                "canManageEnvelopeTransferMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canManageGroupsButNotUsers": {
                    "description": "",
                    "type": "string"
                },
                "canManageGroupsButNotUsersMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canManageJointAgreements": {
                    "description": "",
                    "type": "string"
                },
                "canManageJointAgreementsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canManageReporting": {
                    "description": "",
                    "type": "string"
                },
                "canManageReportingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canManageSharing": {
                    "description": "",
                    "type": "string"
                },
                "canManageSharingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `canManageSharing` property is editable.\n"
                },
                "canManageSigningGroups": {
                    "description": "",
                    "type": "string"
                },
                "canManageSigningGroupsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canManageStamps": {
                    "description": "",
                    "type": "string"
                },
                "canManageStampsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canManageUsers": {
                    "description": "",
                    "type": "string"
                },
                "canManageUsersMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `canManageUsers` property is editable.\n"
                },
                "canViewUsers": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Describes which account management capabilities a user has."
        },
        "userAuthorization": {
            "type": "object",
            "properties": {
                "agentUser": {
                    "$ref": "#/definitions/authorizationUser",
                    "description": ""
                },
                "authorizationId": {
                    "description": "",
                    "type": "string"
                },
                "created": {
                    "description": "",
                    "type": "string"
                },
                "createdBy": {
                    "description": "",
                    "type": "string"
                },
                "endDate": {
                    "description": "",
                    "type": "string"
                },
                "modified": {
                    "description": "",
                    "type": "string"
                },
                "modifiedBy": {
                    "description": "",
                    "type": "string"
                },
                "permission": {
                    "description": "",
                    "type": "string"
                },
                "principalUser": {
                    "$ref": "#/definitions/authorizationUser",
                    "description": ""
                },
                "startDate": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "userAuthorizationCreateRequest": {
            "type": "object",
            "properties": {
                "agentUser": {
                    "$ref": "#/definitions/authorizationUser",
                    "description": ""
                },
                "endDate": {
                    "description": "",
                    "type": "string"
                },
                "permission": {
                    "description": "",
                    "type": "string"
                },
                "startDate": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "userAuthorizationCreateRequestWithId": {
            "type": "object",
            "properties": {
                "agentUser": {
                    "$ref": "#/definitions/authorizationUser",
                    "description": ""
                },
                "authorizationId": {
                    "description": "",
                    "type": "string"
                },
                "endDate": {
                    "description": "",
                    "type": "string"
                },
                "permission": {
                    "description": "",
                    "type": "string"
                },
                "startDate": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "userAuthorizationIdWithStatus": {
            "type": "object",
            "properties": {
                "authorizationId": {
                    "description": "",
                    "type": "string"
                },
                "errorMessage": {
                    "description": "",
                    "type": "string"
                },
                "success": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "userAuthorizations": {
            "type": "object",
            "properties": {
                "authorizations": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userAuthorization"
                    }
                },
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                }
            }
        },
        "userAuthorizationsDeleteRequest": {
            "type": "object",
            "properties": {
                "authorizations": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "userAuthorizationsDeleteResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userAuthorizationIdWithStatus"
                    }
                }
            }
        },
        "userAuthorizationsRequest": {
            "type": "object",
            "properties": {
                "authorizations": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userAuthorizationCreateRequestWithId"
                    }
                }
            }
        },
        "userAuthorizationsResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userAuthorizationWithStatus"
                    }
                }
            }
        },
        "userAuthorizationUpdateRequest": {
            "type": "object",
            "properties": {
                "endDate": {
                    "description": "",
                    "type": "string"
                },
                "startDate": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "userAuthorizationWithStatus": {
            "type": "object",
            "properties": {
                "authorization": {
                    "$ref": "#/definitions/userAuthorization",
                    "description": ""
                },
                "errorMessage": {
                    "description": "",
                    "type": "string"
                },
                "success": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "userInfo": {
            "type": "object",
            "properties": {
                "accountId": {
                    "description": "The account ID associated with the envelope.",
                    "type": "string"
                },
                "accountName": {
                    "description": "",
                    "type": "string"
                },
                "activationAccessCode": {
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "ipAddress": {
                    "description": "",
                    "type": "string"
                },
                "loginStatus": {
                    "description": "",
                    "type": "string"
                },
                "membershipId": {
                    "description": "",
                    "type": "string"
                },
                "sendActivationEmail": {
                    "description": "",
                    "type": "string"
                },
                "uri": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                },
                "userName": {
                    "description": "",
                    "type": "string"
                },
                "userStatus": {
                    "description": "",
                    "type": "string"
                },
                "userType": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "userInfoList": {
            "type": "object",
            "properties": {
                "users": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                }
            }
        },
        "userInformation": {
            "type": "object",
            "properties": {
                "activationAccessCode": {
                    "description": "The activation code the new user must enter when activating their account.",
                    "type": "string"
                },
                "company": {
                    "description": "",
                    "type": "string"
                },
                "connectConfigurations": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connectUserObject"
                    }
                },
                "countryCode": {
                    "description": "",
                    "type": "string"
                },
                "createdDateTime": {
                    "description": "Indicates the date and time the item was created.",
                    "type": "string"
                },
                "customSettings": {
                    "description": "The name/value pair information for the user custom setting.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nameValue"
                    }
                },
                "defaultAccountId": {
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "enableConnectForUser": {
                    "description": "Specifies whether the user is enabled for updates from DocuSign Connect. Valid values: true or false.",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "firstName": {
                    "description": "The user's first name. \nMaximum Length: 50 characters.",
                    "type": "string"
                },
                "forgottenPasswordInfo": {
                    "$ref": "#/definitions/forgottenPasswordInformation",
                    "description": "A complex element containing up to four Question/Answer pairs for forgotten password information."
                },
                "groupList": {
                    "description": "A list of the group information for groups to add the user to. Group information can be found by calling [ML:GET group information]. The only required parameter is groupId. \n\nThe parameters are:\n\n* groupId - The DocuSign group ID for the group.\n* groupName - The name of the group\n* permissionProfileId - The ID of the permission profile associated with the group.\n* groupType - The group type.\n",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/group"
                    }
                },
                "hasRemoteNotary": {
                    "description": "",
                    "type": "boolean"
                },
                "homeAddress": {
                    "$ref": "#/definitions/addressInformation",
                    "description": "Specifies the email for the signing host. It is a Required element for In Person Signers recipient Type. \nMaximum Length: 100 characters."
                },
                "initialsImageUri": {
                    "description": "Contains the URI for an endpoint that you can use to retrieve the initials image.",
                    "type": "string"
                },
                "isAdmin": {
                    "description": "Determines if the feature set is actively set as part of the plan.",
                    "type": "string"
                },
                "isAlternateAdmin": {
                    "description": "",
                    "type": "string"
                },
                "isNAREnabled": {
                    "description": "",
                    "type": "string"
                },
                "jobTitle": {
                    "description": "",
                    "type": "string"
                },
                "lastLogin": {
                    "description": "Shows the date-time when the user last logged on to the system.",
                    "type": "string"
                },
                "lastName": {
                    "description": "The user's last name. \nMaximum Length: 50 characters.",
                    "type": "string"
                },
                "loginStatus": {
                    "description": "Shows the current status of the user's password. Possible values are: \n\n* password_reset\n* password_active\n* password_expired\n* password_locked\n* password_reset_failed \n",
                    "type": "string"
                },
                "middleName": {
                    "description": "The user's middle name. \nMaximum Length: 50 characters.",
                    "type": "string"
                },
                "password": {
                    "description": "",
                    "type": "string"
                },
                "passwordExpiration": {
                    "description": "",
                    "type": "string"
                },
                "permissionProfileId": {
                    "description": "",
                    "type": "string"
                },
                "permissionProfileName": {
                    "description": "",
                    "type": "string"
                },
                "profileImageUri": {
                    "description": "",
                    "type": "string"
                },
                "sendActivationEmail": {
                    "description": "",
                    "type": "string"
                },
                "sendActivationOnInvalidLogin": {
                    "description": "When set to **true**, specifies that an additional activation email is sent to the user if they fail a log on before activating their account. ",
                    "type": "string"
                },
                "signatureImageUri": {
                    "description": "Contains the URI for an endpoint that you can use to retrieve the signature image.",
                    "type": "string"
                },
                "subscribe": {
                    "description": "",
                    "type": "string"
                },
                "suffixName": {
                    "description": "The suffix for the user's name. \n\nMaximum Length: 50 characters. ",
                    "type": "string"
                },
                "title": {
                    "description": "The title of the user.",
                    "type": "string"
                },
                "uri": {
                    "description": "",
                    "type": "string"
                },
                "userAddedToAccountDateTime": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                },
                "userName": {
                    "description": "",
                    "type": "string"
                },
                "userProfileLastModifiedDate": {
                    "description": "",
                    "type": "string"
                },
                "userSettings": {
                    "$ref": "#/definitions/userSettingsInformation",
                    "description": " The name/value pair information for user settings. These determine the actions that a user can take in the account. The `[ML:userSettings]` are listed and described below."
                },
                "userStatus": {
                    "description": "",
                    "type": "string"
                },
                "userType": {
                    "description": "",
                    "type": "string"
                },
                "workAddress": {
                    "$ref": "#/definitions/addressInformation",
                    "description": ""
                }
            },
            "description": "User information."
        },
        "userInformationList": {
            "type": "object",
            "properties": {
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                },
                "users": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInformation"
                    }
                }
            },
            "description": "Contains a list of account users."
        },
        "userPasswordInformation": {
            "type": "object",
            "properties": {
                "currentPassword": {
                    "description": "The user's current password to be changed.",
                    "type": "string"
                },
                "email": {
                    "description": "The user's email address for the associated account.",
                    "type": "string"
                },
                "forgottenPasswordInfo": {
                    "$ref": "#/definitions/forgottenPasswordInformation",
                    "description": "A complex element containing up to four Question/Answer pairs for forgotten password information."
                },
                "newPassword": {
                    "description": "The user's new password.",
                    "type": "string"
                }
            }
        },
        "userPasswordRules": {
            "type": "object",
            "properties": {
                "passwordRules": {
                    "$ref": "#/definitions/accountPasswordRules",
                    "description": "Contains details about the password rules for the user."
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Contains details about the password rules for a user."
        },
        "userProfile": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/addressInformation",
                    "description": "The user's address."
                },
                "authenticationMethods": {
                    "description": "These properties cannot be modified in the PUT. \n\nIndicates the authentication methods used by the user.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/authenticationMethod"
                    }
                },
                "companyName": {
                    "description": "The name of the user's Company.",
                    "type": "string"
                },
                "displayOrganizationInfo": {
                    "description": " When set to **true**, the user's company and title information are shown on the ID card. ",
                    "type": "string"
                },
                "displayPersonalInfo": {
                    "description": "When set to **true**, the user's Address and Phone number are shown on the ID card.",
                    "type": "string"
                },
                "displayProfile": {
                    "description": "When set to **true**, the user's ID card can be viewed from signed documents and envelope history.",
                    "type": "string"
                },
                "displayUsageHistory": {
                    "description": "When set to **true**, the user's usage information is shown on the ID card.",
                    "type": "string"
                },
                "profileImageUri": {
                    "description": "",
                    "type": "string"
                },
                "title": {
                    "description": "",
                    "type": "string"
                },
                "usageHistory": {
                    "$ref": "#/definitions/usageHistory",
                    "description": "A complex element consisting of: \n\n- `lastSentDateTime`: The date and time the user last sent an envelope. \n- `lastSignedDateTime`: The date and time the user last signed an envelope.\n- `sentCount`: The number of envelopes the user has sent.\n- `signedCount`: The number of envelopes the user has signed. \n"
                },
                "userDetails": {
                    "$ref": "#/definitions/userInformation",
                    "description": ""
                },
                "userProfileLastModifiedDate": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "userSettingsInformation": {
            "type": "object",
            "properties": {
                "accountAgreementsAccessType": {
                    "description": "",
                    "type": "string"
                },
                "accountAgreementsAccessTypeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "accountManagementGranular": {
                    "$ref": "#/definitions/userAccountManagementGranularInformation",
                    "description": "Describes which account management capabilities a user has."
                },
                "adminOnly": {
                    "description": "",
                    "type": "string"
                },
                "adminOnlyMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "allowAccessToAllAccountAgreements": {
                    "description": "",
                    "type": "string"
                },
                "allowAccessToAllAccountAgreementsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowAutoTagging": {
                    "description": "",
                    "type": "string"
                },
                "allowedOrchestrationAccess": {
                    "description": "",
                    "type": "string"
                },
                "allowedOrchestrationAccessMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "allowEnvelopeTransferTo": {
                    "description": "",
                    "type": "string"
                },
                "allowEnvelopeTransferToMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "allowEsealRecipients": {
                    "description": "",
                    "type": "string"
                },
                "allowEsealRecipientsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `allowEsealRecipientsMetadata` property."
                },
                "allowPowerFormsAdminToAccessAllPowerFormEnvelope": {
                    "description": "",
                    "type": "string"
                },
                "allowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `allowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata` property."
                },
                "allowRecipientLanguageSelection": {
                    "description": "",
                    "type": "string"
                },
                "allowRecipientLanguageSelectionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata for allowRecipientLanguageSelection."
                },
                "allowSendOnBehalfOf": {
                    "description": "",
                    "type": "string"
                },
                "allowSendOnBehalfOfMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata for allowSendOnBehalfOf."
                },
                "allowSupplementalDocuments": {
                    "description": "",
                    "type": "string"
                },
                "allowSupplementalDocumentsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `allowSupplementalDocuments` property is editable."
                },
                "allowTransactions": {
                    "description": "",
                    "type": "string"
                },
                "allowTransactionsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "anchorTagVersionedPlacementEnabled": {
                    "description": "",
                    "type": "string"
                },
                "apiAccountWideAccess": {
                    "description": "",
                    "type": "string"
                },
                "apiAccountWideAccessMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata for apiAccountWideAccess."
                },
                "apiCanExportAC": {
                    "description": "",
                    "type": "string"
                },
                "apiCanExportACMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `apiCanExportACMetadata` property."
                },
                "bulkSend": {
                    "description": "",
                    "type": "string"
                },
                "bulkSendMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `bulkSend` property is editable.\n"
                },
                "canBulkUploadAgreements": {
                    "description": "",
                    "type": "string"
                },
                "canBulkUploadAgreementsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canChargeAccount": {
                    "description": "",
                    "type": "string"
                },
                "canChargeAccountMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "canCreateTransaction": {
                    "description": "",
                    "type": "string"
                },
                "canCreateTransactionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canDeleteDocumentsInTransaction": {
                    "description": "",
                    "type": "string"
                },
                "canDeleteDocumentsInTransactionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canDeleteTransaction": {
                    "description": "",
                    "type": "string"
                },
                "canDeleteTransactionMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canEditSharedAddressbook": {
                    "description": "",
                    "type": "string"
                },
                "canEditSharedAddressbookMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `canEditSharedAddressbookMetadata` property."
                },
                "canLockEnvelopes": {
                    "description": "",
                    "type": "string"
                },
                "canLockEnvelopesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `canLockEnvelopes` property."
                },
                "canManageAccount": {
                    "description": "",
                    "type": "string"
                },
                "canManageAccountMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `canManageAccountMetadata` property."
                },
                "canManageAgreementParties": {
                    "description": "",
                    "type": "string"
                },
                "canManageAgreementPartiesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canManageDistributor": {
                    "description": "",
                    "type": "string"
                },
                "canManageDistributorMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `canManageDistributor` property."
                },
                "canManageTemplates": {
                    "description": "",
                    "type": "string"
                },
                "canManageTemplatesMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `canManageTemplates` property."
                },
                "canSendAPIRequests": {
                    "description": "",
                    "type": "string"
                },
                "canSendAPIRequestsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `canSendAPIRequests` property."
                },
                "canSendEnvelope": {
                    "description": "",
                    "type": "string"
                },
                "canSendEnvelopeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `canSendEnvelope` property."
                },
                "canSendEnvelopesViaSMS": {
                    "description": "",
                    "type": "string"
                },
                "canSendEnvelopesViaSMSMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "canSignEnvelope": {
                    "description": "",
                    "type": "string"
                },
                "canSignEnvelopeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `canSignEnvelope` property."
                },
                "canUseScratchpad": {
                    "description": "",
                    "type": "string"
                },
                "canUseScratchpadMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `canUseScratchpad` property."
                },
                "canUseSmartContracts": {
                    "description": "",
                    "type": "string"
                },
                "canUseSmartContractsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "disableDocumentUpload": {
                    "description": "",
                    "type": "string"
                },
                "disableDocumentUploadMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `disableDocumentUpload` property is editable.\n"
                },
                "disableOtherActions": {
                    "description": "",
                    "type": "string"
                },
                "disableOtherActionsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `disableOtherActions` property is editable.\n"
                },
                "enableDSPro": {
                    "description": "",
                    "type": "string"
                },
                "enableDSProMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableDSPro` property is editable.\n"
                },
                "enableKeyTermsSuggestionsByDocumentType": {
                    "description": "",
                    "type": "string"
                },
                "enableKeyTermsSuggestionsByDocumentTypeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                },
                "enableSequentialSigningAPI": {
                    "description": "",
                    "type": "string"
                },
                "enableSequentialSigningAPIMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSequentialSigningAPI` property is editable.\n"
                },
                "enableSequentialSigningUI": {
                    "description": "",
                    "type": "string"
                },
                "enableSequentialSigningUIMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSequentialSigningUI` property is editable.\n"
                },
                "enableSignerAttachments": {
                    "description": "",
                    "type": "string"
                },
                "enableSignerAttachmentsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSignerAttachments` property is editable.\n"
                },
                "enableSignOnPaperOverride": {
                    "description": "",
                    "type": "string"
                },
                "enableSignOnPaperOverrideMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableSignOnPaperOverride` property is editable.\n"
                },
                "enableTransactionPoint": {
                    "description": "",
                    "type": "string"
                },
                "enableTransactionPointMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "enableVaulting": {
                    "description": "",
                    "type": "string"
                },
                "enableVaultingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `enableVaulting` property is editable.\n"
                },
                "expressSendOnly": {
                    "description": "",
                    "type": "string"
                },
                "locale": {
                    "description": "",
                    "type": "string"
                },
                "localeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `locale` property."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicy",
                    "description": "Reserved for DocuSign."
                },
                "manageClickwrapsMode": {
                    "description": "",
                    "type": "string"
                },
                "manageClickwrapsModeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `manageClickwrapsMode` property."
                },
                "modifiedBy": {
                    "description": "",
                    "type": "string"
                },
                "modifiedByMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `modifiedBy` property."
                },
                "modifiedDate": {
                    "description": "",
                    "type": "string"
                },
                "modifiedDateMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `modifiedDate` property."
                },
                "modifiedPage": {
                    "description": "",
                    "type": "string"
                },
                "modifiedPageMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `modifiedPage` property."
                },
                "newSendUI": {
                    "description": "",
                    "type": "string"
                },
                "newSendUIMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `newSendUI` property."
                },
                "powerFormMode": {
                    "description": "",
                    "type": "string"
                },
                "powerFormModeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `powerFormMode` property."
                },
                "recipientViewedNotification": {
                    "description": "",
                    "type": "string"
                },
                "recipientViewedNotificationMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `recipientViewedNotification` property."
                },
                "sealIdentifiers": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sealIdentifier"
                    }
                },
                "selfSignedRecipientEmailDocument": {
                    "description": "",
                    "type": "string"
                },
                "selfSignedRecipientEmailDocumentMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `selfSignedRecipientEmailDocument` property is editable.\n"
                },
                "senderEmailNotifications": {
                    "$ref": "#/definitions/senderEmailNotifications",
                    "description": " \nAn array of email notifications that sets the email the user receives when they are a sender. When the specific email notification is set to true, the user will receive those types of email notifications from DocuSign. \n\nThe user inherits the default account sender email notification settings when the user is created. The email notifications are:\n\n* envelopeComplete\n* changedSigner \n* senderEnvelopeDeclined \n* withdrawnConsent \n* recipientViewed \n* deliveryFailed \n "
                },
                "signerEmailNotifications": {
                    "$ref": "#/definitions/signerEmailNotifications",
                    "description": "An array of email notifications that specifies the email the user receives when they are a recipient. When the specific email notification is set to true, the user receives those types of email notifications from DocuSign. The user inherits the default account email notification settings when the user is created.\n"
                },
                "supplementalDocumentIncludeInDownload": {
                    "description": "",
                    "type": "string"
                },
                "supplementalDocumentsMustAccept": {
                    "description": "",
                    "type": "string"
                },
                "supplementalDocumentsMustAcceptMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `supplementalDocumentsMustAccept` property is editable.\n"
                },
                "supplementalDocumentsMustRead": {
                    "description": "",
                    "type": "string"
                },
                "supplementalDocumentsMustReadMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `supplementalDocumentsMustRead` property is editable.\n"
                },
                "supplementalDocumentsMustView": {
                    "description": "",
                    "type": "string"
                },
                "supplementalDocumentsMustViewMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata that indicates whether the `supplementalDocumentsMustView` property is editable.\n"
                },
                "templateActiveCreation": {
                    "description": "",
                    "type": "string"
                },
                "templateActiveCreationMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `templateActiveCreation` property."
                },
                "templateApplyNotify": {
                    "description": "",
                    "type": "string"
                },
                "templateApplyNotifyMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `templateApplyNotify` property."
                },
                "templateAutoMatching": {
                    "description": "",
                    "type": "string"
                },
                "templateAutoMatchingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `templateAutoMatching` property."
                },
                "templateMatchingSensitivity": {
                    "description": "",
                    "type": "string"
                },
                "templateMatchingSensitivityMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `tempalteMatchingSensitivity` property."
                },
                "templatePageLevelMatching": {
                    "description": "",
                    "type": "string"
                },
                "templatePageLevelMatchingMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `templatePageLevelMatching` property."
                },
                "timezoneDST": {
                    "description": "",
                    "type": "string"
                },
                "timezoneDSTMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `timezoneDST` property."
                },
                "timezoneMask": {
                    "description": "",
                    "type": "string"
                },
                "timezoneMaskMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `timezoneMask` property."
                },
                "timezoneOffset": {
                    "description": "",
                    "type": "string"
                },
                "timezoneOffsetMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `timezoneOffset` property."
                },
                "timezoneSendingPref": {
                    "description": "",
                    "type": "string"
                },
                "timezoneSendingPrefMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "timezoneSigningPref": {
                    "description": "",
                    "type": "string"
                },
                "timezoneSigningPrefMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "transactionPointSiteNameURL": {
                    "description": "",
                    "type": "string"
                },
                "transactionPointSiteNameURLMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "transactionPointUserName": {
                    "description": "",
                    "type": "string"
                },
                "transactionPointUserNameMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Reserved for DocuSign."
                },
                "vaultingMode": {
                    "description": "",
                    "type": "string"
                },
                "vaultingModeMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": "Metadata about the `vaultingMode` property."
                },
                "webForms": {
                    "description": "",
                    "type": "string"
                },
                "webFormsMetadata": {
                    "$ref": "#/definitions/settingsMetadata",
                    "description": ""
                }
            },
            "description": "Properties that configure the settings for a user. Some elements of this object have a `metadata` property, which includes the following:\n- `rights`: The calling users permissions to edit this setting (can be `editable` or `read_only`)\n- `uiHint`: Internally used to build UIs (can be `available` or `hidden`)\n- `options`: The values supported for this setting (not all settings have this element)"
        },
        "userSharedItem": {
            "type": "object",
            "properties": {
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/userInfo",
                    "description": "The user whose sharing information is being requested."
                }
            },
            "description": "Information about a shared item."
        },
        "userSignature": {
            "type": "object",
            "properties": {
                "adoptedDateTime": {
                    "description": "The date and time the user adopted their signature.",
                    "type": "string"
                },
                "createdDateTime": {
                    "description": "Indicates the date and time the item was created.",
                    "type": "string"
                },
                "customField": {
                    "description": "",
                    "type": "string"
                },
                "dateStampProperties": {
                    "$ref": "#/definitions/dateStampProperties",
                    "description": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle."
                },
                "disallowUserResizeStamp": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "externalID": {
                    "description": "",
                    "type": "string"
                },
                "imageBase64": {
                    "description": "",
                    "type": "string"
                },
                "imageType": {
                    "description": "",
                    "type": "string"
                },
                "initials150ImageId": {
                    "description": "",
                    "type": "string"
                },
                "initialsImageUri": {
                    "description": "Contains the URI for an endpoint that you can use to retrieve the initials image.",
                    "type": "string"
                },
                "isDefault": {
                    "description": "",
                    "type": "string"
                },
                "lastModifiedDateTime": {
                    "description": "The date and time the item was last modified.",
                    "type": "string"
                },
                "nrdsId": {
                    "description": "",
                    "type": "string"
                },
                "nrdsLastName": {
                    "description": "",
                    "type": "string"
                },
                "nrdsStatus": {
                    "description": "",
                    "type": "string"
                },
                "phoneticName": {
                    "description": "",
                    "type": "string"
                },
                "signature150ImageId": {
                    "description": "",
                    "type": "string"
                },
                "signatureFont": {
                    "description": "The font type for the signature, if the signature is not drawn. The supported font types are:\n\n\"7_DocuSign\", \"1_DocuSign\", \"6_DocuSign\", \"8_DocuSign\", \"3_DocuSign\", \"Mistral\", \"4_DocuSign\", \"2_DocuSign\", \"5_DocuSign\", \"Rage Italic\"\n",
                    "type": "string"
                },
                "signatureId": {
                    "description": "Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as \"&\", \"<\", \">\") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.",
                    "type": "string"
                },
                "signatureImageUri": {
                    "description": "Contains the URI for an endpoint that you can use to retrieve the signature image.",
                    "type": "string"
                },
                "signatureInitials": {
                    "description": " The initials associated with the signature.",
                    "type": "string"
                },
                "signatureName": {
                    "description": "Specifies the user signature name.",
                    "type": "string"
                },
                "signatureRights": {
                    "description": "",
                    "type": "string"
                },
                "signatureType": {
                    "description": "",
                    "type": "string"
                },
                "stampFormat": {
                    "description": "",
                    "type": "string"
                },
                "stampImageUri": {
                    "description": "",
                    "type": "string"
                },
                "stampSizeMM": {
                    "description": "",
                    "type": "string"
                },
                "stampType": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                }
            }
        },
        "userSignatureDefinition": {
            "type": "object",
            "properties": {
                "dateStampProperties": {
                    "$ref": "#/definitions/dateStampProperties",
                    "description": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle."
                },
                "disallowUserResizeStamp": {
                    "description": "",
                    "type": "string"
                },
                "externalID": {
                    "description": "",
                    "type": "string"
                },
                "imageType": {
                    "description": "",
                    "type": "string"
                },
                "isDefault": {
                    "description": "",
                    "type": "string"
                },
                "nrdsId": {
                    "description": "",
                    "type": "string"
                },
                "nrdsLastName": {
                    "description": "",
                    "type": "string"
                },
                "phoneticName": {
                    "description": "",
                    "type": "string"
                },
                "signatureFont": {
                    "description": "",
                    "type": "string"
                },
                "signatureId": {
                    "description": "Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as \"&\", \"<\", \">\") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.",
                    "type": "string"
                },
                "signatureInitials": {
                    "description": "",
                    "type": "string"
                },
                "signatureName": {
                    "description": "Specifies the user signature name.",
                    "type": "string"
                },
                "signatureType": {
                    "description": "",
                    "type": "string"
                },
                "stampFormat": {
                    "description": "",
                    "type": "string"
                },
                "stampSizeMM": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "userSignaturesInformation": {
            "type": "object",
            "properties": {
                "userSignatures": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userSignature"
                    }
                }
            }
        },
        "userSocialIdResult": {
            "type": "object",
            "properties": {
                "socialAccountInformation": {
                    "description": "Contains properties that map a DocuSign user to a social account (Facebook, Yahoo, etc.)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/socialAccountInformation"
                    }
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "usersResponse": {
            "type": "object",
            "properties": {
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "nextUri": {
                    "description": "The URI to the next chunk of records based on the search request. If the endPosition is the entire results of the search, this is null. ",
                    "type": "string"
                },
                "previousUri": {
                    "description": "The postal code for the billing address.",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                },
                "users": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                }
            }
        },
        "view": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "buttonText": {
                    "description": "",
                    "type": "string"
                },
                "buttonTextMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `buttonText` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "requiredRead": {
                    "description": "",
                    "type": "string"
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "This tab is used with the Approve tab to handle supplemental documents."
        },
        "viewUrl": {
            "type": "object",
            "properties": {
                "url": {
                    "description": "The view URL to be navigated to.",
                    "type": "string"
                }
            }
        },
        "watermark": {
            "type": "object",
            "properties": {
                "displayAngle": {
                    "description": "",
                    "type": "string"
                },
                "enabled": {
                    "description": "",
                    "type": "string"
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "string"
                },
                "imageBase64": {
                    "description": "",
                    "type": "string"
                },
                "transparency": {
                    "description": "",
                    "type": "string"
                },
                "watermarkText": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "witness": {
            "type": "object",
            "properties": {
                "accessCode": {
                    "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                    "type": "string"
                },
                "accessCodeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `accessCode` property is editable. This property is read-only."
                },
                "addAccessCodeToEmail": {
                    "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
                    "type": "string"
                },
                "additionalNotifications": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAdditionalNotification"
                    }
                },
                "agentCanEditEmail": {
                    "description": "",
                    "type": "string"
                },
                "agentCanEditName": {
                    "description": "",
                    "type": "string"
                },
                "allowSystemOverrideForLockedRecipient": {
                    "description": "",
                    "type": "string"
                },
                "autoNavigation": {
                    "description": "",
                    "type": "string"
                },
                "autoRespondedReason": {
                    "description": "",
                    "type": "string"
                },
                "bulkRecipientsUri": {
                    "description": "Contains a URI for an endpoint that allows you to easily retrieve bulk recipient information.",
                    "type": "string"
                },
                "bulkSendV2Recipient": {
                    "description": "",
                    "type": "string"
                },
                "canSignOffline": {
                    "description": "When set to **true**, specifies that the signer can perform the signing ceremony offline.",
                    "type": "string"
                },
                "clientUserId": {
                    "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending.ng. \n\nMaximum length: 100 characters. ",
                    "type": "string"
                },
                "completedCount": {
                    "description": "",
                    "type": "string"
                },
                "consentDetailsList": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/consentDetails"
                    }
                },
                "creationReason": {
                    "description": "",
                    "type": "string"
                },
                "customFields": {
                    "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "declinedDateTime": {
                    "description": "The date and time the recipient declined the document.",
                    "type": "string"
                },
                "declinedReason": {
                    "description": "The reason the recipient declined the document.",
                    "type": "string"
                },
                "defaultRecipient": {
                    "description": "",
                    "type": "string"
                },
                "delegatedBy": {
                    "$ref": "#/definitions/delegationInfo",
                    "description": ""
                },
                "delegatedTo": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/delegationInfo"
                    }
                },
                "deliveredDateTime": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethod": {
                    "description": "Reserved: For DocuSign use only.",
                    "type": "string"
                },
                "deliveryMethodMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "designatorId": {
                    "description": "",
                    "type": "string"
                },
                "designatorIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "documentVisibility": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentVisibility"
                    }
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "emailMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `email` property is editable. This property is read-only."
                },
                "emailNotification": {
                    "$ref": "#/definitions/recipientEmailNotification",
                    "description": "A complex type that contains information sets the language of the recipient's email information. \n\n**IMPORTANT**: If you enable email notification for one recipient, you must enable email notification for all recipients as it overrides the Envelope Subject and `EmailBlurb` property settings. "
                },
                "emailRecipientPostSigningURL": {
                    "description": "",
                    "type": "string"
                },
                "embeddedRecipientStartURL": {
                    "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "excludedDocuments": {
                    "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "faxNumber": {
                    "description": "Reserved:",
                    "type": "string"
                },
                "faxNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "firstName": {
                    "description": "The user's first name. \nMaximum Length: 50 characters.",
                    "type": "string"
                },
                "firstNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `firstName` property is editable. This property is read-only."
                },
                "fullName": {
                    "description": "",
                    "type": "string"
                },
                "fullNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "idCheckConfigurationName": {
                    "description": "Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\n\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.",
                    "type": "string"
                },
                "idCheckConfigurationNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `idCheckConfigurationName` property is editable. This property is read-only."
                },
                "idCheckInformationInput": {
                    "$ref": "#/definitions/idCheckInformationInput",
                    "description": "An object that contains input information related to a recipient ID check."
                },
                "identityVerification": {
                    "$ref": "#/definitions/recipientIdentityVerification",
                    "description": "Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address)."
                },
                "inheritEmailNotificationConfiguration": {
                    "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                    "type": "string"
                },
                "isBulkRecipient": {
                    "description": "",
                    "type": "string"
                },
                "isBulkRecipientMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "lastName": {
                    "description": "",
                    "type": "string"
                },
                "lastNameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `lastName` property is editable. This property is read-only."
                },
                "lockedRecipientPhoneAuthEditable": {
                    "description": "",
                    "type": "string"
                },
                "lockedRecipientSmsEditable": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "notaryId": {
                    "description": "",
                    "type": "string"
                },
                "notarySignerEmailSent": {
                    "description": "",
                    "type": "string"
                },
                "note": {
                    "description": "Specifies a note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.\n\nMaximum Length: 1000 characters.",
                    "type": "string"
                },
                "noteMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `note` property is editable. This property is read-only."
                },
                "offlineAttributes": {
                    "$ref": "#/definitions/offlineAttributes",
                    "description": "Reserved for DocuSign."
                },
                "phoneAuthentication": {
                    "$ref": "#/definitions/recipientPhoneAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:\n\n* `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.\n* `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.\n* `recordVoicePrint`: Reserved for DocuSign.\n* `validateRecipProvidedNumber`: Reserved for DocuSign.\n\n"
                },
                "phoneNumber": {
                    "$ref": "#/definitions/recipientPhoneNumber",
                    "description": "Describes the recipient phone number."
                },
                "proofFile": {
                    "$ref": "#/definitions/recipientProofFile",
                    "description": "The proof file of the recipient."
                },
                "recipientAttachments": {
                    "description": "Reserved:",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientAttachment"
                    }
                },
                "recipientAuthenticationStatus": {
                    "$ref": "#/definitions/authenticationStatus",
                    "description": "Information about the recipient's authentication status. This property is read-only."
                },
                "recipientFeatureMetadata": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featureAvailableMetadata"
                    }
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientSignatureProviders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recipientSignatureProvider"
                    }
                },
                "recipientSuppliesTabs": {
                    "description": "",
                    "type": "string"
                },
                "recipientType": {
                    "description": "",
                    "type": "string"
                },
                "recipientTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientType` property is editable. This property is read-only."
                },
                "requireIdLookup": {
                    "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                    "type": "string"
                },
                "requireIdLookupMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireIdLookup` property is editable. This property is read-only."
                },
                "requireSignerCertificate": {
                    "description": "",
                    "type": "string"
                },
                "requireSignOnPaper": {
                    "description": "",
                    "type": "string"
                },
                "requireUploadSignature": {
                    "description": "",
                    "type": "string"
                },
                "roleName": {
                    "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
                    "type": "string"
                },
                "routingOrder": {
                    "description": "Specifies the routing order of the recipient in the envelope. ",
                    "type": "string"
                },
                "routingOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `routingOrder` property is editable. This property is read-only."
                },
                "sentDateTime": {
                    "description": "The date and time the envelope was sent.",
                    "type": "string"
                },
                "signatureInfo": {
                    "$ref": "#/definitions/recipientSignatureInformation",
                    "description": "Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.\n\nUsed only with recipient types In Person Signers and Signers."
                },
                "signedDateTime": {
                    "description": "Reserved: For DocuSign use only. ",
                    "type": "string"
                },
                "signInEachLocation": {
                    "description": "When set to **true**, specifies that the signer must sign in all locations.",
                    "type": "string"
                },
                "signInEachLocationMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signInEachLocation` property is editable. This property is read-only."
                },
                "signingGroupId": {
                    "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
                    "type": "string"
                },
                "signingGroupIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `signingGroupId` property is editable. This property is read-only."
                },
                "signingGroupName": {
                    "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
                    "type": "string"
                },
                "signingGroupUsers": {
                    "description": "A complex type that contains information about users in the signing group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userInfo"
                    }
                },
                "smsAuthentication": {
                    "$ref": "#/definitions/recipientSMSAuthentication",
                    "description": "When `idCheckConfigurationName` is set to `SMS Auth $`, you use this complex type to provide the recipient authentication method details. It contains the element `senderProvidedNumbers`, which is an array of phone numbers that the recipient can use for SMS text authentication. \n\n"
                },
                "socialAuthentications": {
                    "description": " Lists the social ID type that can be used for recipient authentication.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/socialAuthentication"
                    }
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusCode": {
                    "description": "",
                    "type": "string"
                },
                "suppressEmails": {
                    "description": "",
                    "type": "string"
                },
                "tabs": {
                    "$ref": "#/definitions/tabs",
                    "description": "A list of tabs, which are represented graphically as symbols on documents at the time of signing. Tabs show recipients where to sign, initial, or enter data. They may also display data to the recipients."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "totalTabCount": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                },
                "witnessFor": {
                    "description": "",
                    "type": "string"
                },
                "witnessForGuid": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "A complex type containing information about a witness recipient. Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope."
        },
        "workflow": {
            "type": "object",
            "properties": {
                "currentWorkflowStepId": {
                    "description": "",
                    "type": "string"
                },
                "overwriteUpdateMode": {
                    "description": "",
                    "type": "string"
                },
                "resumeDate": {
                    "description": "",
                    "type": "string"
                },
                "scheduledSending": {
                    "$ref": "#/definitions/scheduledSending",
                    "description": "An object that describes the settings for scheduled sending."
                },
                "workflowStatus": {
                    "description": "",
                    "type": "string"
                },
                "workflowSteps": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/workflowStep"
                    }
                }
            },
            "description": "Describes the workflow for an envelope."
        },
        "workflowStep": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "",
                    "type": "string"
                },
                "completedDate": {
                    "description": "",
                    "type": "string"
                },
                "delayedRouting": {
                    "$ref": "#/definitions/delayedRouting",
                    "description": "A complex element that specifies the delayed routing settings for the workflow step."
                },
                "itemId": {
                    "description": "",
                    "type": "string"
                },
                "recipientRouting": {
                    "$ref": "#/definitions/recipientRouting",
                    "description": "The rules for recipient routing."
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "triggeredDate": {
                    "description": "",
                    "type": "string"
                },
                "triggerOnItem": {
                    "description": "",
                    "type": "string"
                },
                "workflowStepId": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "Describes a single step in a workflow."
        },
        "workspace": {
            "description": "Provides properties that describe a workspace.",
            "type": "object",
            "properties": {
                "billableAccountId": {
                    "description": "",
                    "type": "string"
                },
                "callerInformation": {
                    "$ref": "#/definitions/workspaceUser",
                    "description": ""
                },
                "created": {
                    "description": "",
                    "type": "string"
                },
                "createdByInformation": {
                    "$ref": "#/definitions/workspaceUser",
                    "description": "Details about the user who created the workspace."
                },
                "lastModified": {
                    "description": "Utc date and time the comment was last updated (can only be done by creator.)",
                    "type": "string"
                },
                "lastModifiedByInformation": {
                    "$ref": "#/definitions/workspaceUser",
                    "description": "Details about the user who last modified the workspace."
                },
                "settings": {
                    "$ref": "#/definitions/workspaceSettings",
                    "description": "Information about the settings for the workspace."
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "workspaceBaseUrl": {
                    "description": "The relative URL that may be used to access the workspace.",
                    "type": "string"
                },
                "workspaceDescription": {
                    "description": "Text describing the purpose of the workspace.",
                    "type": "string"
                },
                "workspaceId": {
                    "description": "The id of the workspace, always populated.",
                    "type": "string"
                },
                "workspaceName": {
                    "description": "The name of the workspace.",
                    "type": "string"
                },
                "workspaceUri": {
                    "description": "The relative URI that may be used to access the workspace.",
                    "type": "string"
                }
            }
        },
        "workspaceFolderContents": {
            "description": "Provides properties that describe the contents of a workspace folder.",
            "type": "object",
            "properties": {
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "folder": {
                    "$ref": "#/definitions/workspaceItem",
                    "description": "The folder from which to return items. You can enter either the folder name or folder ID."
                },
                "items": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/workspaceItem"
                    }
                },
                "parentFolders": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/workspaceItem"
                    }
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                },
                "workspaceId": {
                    "description": "The id of the workspace, always populated.",
                    "type": "string"
                }
            }
        },
        "workspaceItem": {
            "description": "A workspaceItem (file type only) representing the file. This property is only returned in response to file specific GET call.",
            "type": "object",
            "properties": {
                "callerAuthorization": {
                    "$ref": "#/definitions/workspaceUserAuthorization",
                    "description": ""
                },
                "contentType": {
                    "description": "",
                    "type": "string"
                },
                "created": {
                    "description": "The UTC DateTime when the workspace item was created.",
                    "type": "string"
                },
                "createdById": {
                    "description": "",
                    "type": "string"
                },
                "createdByInformation": {
                    "$ref": "#/definitions/workspaceUser",
                    "description": "Details about the user who created the workspace item."
                },
                "extension": {
                    "description": "",
                    "type": "string"
                },
                "fileSize": {
                    "description": "",
                    "type": "string"
                },
                "fileUri": {
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "string"
                },
                "isPublic": {
                    "description": " If true, this supersedes need for bit mask permission with workspaceUserAuthorization",
                    "type": "string"
                },
                "lastModified": {
                    "description": "",
                    "type": "string"
                },
                "lastModifiedById": {
                    "description": "Utc date and time the comment was last updated (can only be done by creator)",
                    "type": "string"
                },
                "lastModifiedByInformation": {
                    "$ref": "#/definitions/workspaceUser",
                    "description": "Details about the user who last modified the workspace item."
                },
                "name": {
                    "description": "A simple string description of the item, such as a file name or a folder name.",
                    "type": "string"
                },
                "pageCount": {
                    "description": "",
                    "type": "string"
                },
                "parentFolderId": {
                    "description": "The ID of the parent folder. This is the GUID of the parent folder, or the special value 'root' for the root folder.",
                    "type": "string"
                },
                "parentFolderUri": {
                    "description": "",
                    "type": "string"
                },
                "sha256": {
                    "description": "",
                    "type": "string"
                },
                "thumbHeight": {
                    "description": "",
                    "type": "string"
                },
                "thumbnail": {
                    "$ref": "#/definitions/page",
                    "description": ""
                },
                "thumbWidth": {
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the workspace item. Valid values are file, folder.",
                    "type": "string"
                },
                "uri": {
                    "description": "",
                    "type": "string"
                },
                "userAuthorization": {
                    "$ref": "#/definitions/workspaceUserAuthorization",
                    "description": ""
                }
            }
        },
        "workspaceItemList": {
            "description": "Provides properties that describe the items contained in a workspace.",
            "type": "object",
            "properties": {
                "items": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/workspaceItem"
                    }
                }
            }
        },
        "workspaceList": {
            "description": "Provides properties that describe the workspaces avaialble.",
            "type": "object",
            "properties": {
                "endPosition": {
                    "description": "The last position in the result set. ",
                    "type": "string"
                },
                "resultSetSize": {
                    "description": "The number of results returned in this response. ",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Starting position of the current result set.",
                    "type": "string"
                },
                "totalSetSize": {
                    "description": "The total number of items available in the result set. This will always be greater than or equal to the value of the property returning the results in the in the response.",
                    "type": "string"
                },
                "workspaces": {
                    "description": "A list of workspaces.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/workspace"
                    }
                }
            }
        },
        "workspaceSettings": {
            "type": "object",
            "properties": {
                "commentsAllowed": {
                    "description": "",
                    "type": "string"
                }
            },
            "description": "This object provides information about the settings for the workspace."
        },
        "workspaceUser": {
            "description": "A workspaceUser representing the user. This property is only returned in response to user specific GET call. ",
            "type": "object",
            "properties": {
                "accountId": {
                    "description": "The account ID associated with the envelope.",
                    "type": "string"
                },
                "accountName": {
                    "description": "The name of the account that the workspace user belongs to.",
                    "type": "string"
                },
                "activeSince": {
                    "description": "",
                    "type": "string"
                },
                "created": {
                    "description": "The UTC DateTime when the workspace user was created.",
                    "type": "string"
                },
                "createdById": {
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "invitationEmailBlurb": {
                    "description": "",
                    "type": "string"
                },
                "invitationEmailSubject": {
                    "description": "",
                    "type": "string"
                },
                "lastModified": {
                    "description": "Utc date and time the comment was last updated (can only be done by creator.)",
                    "type": "string"
                },
                "lastModifiedById": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of the user. Valid values: type_owner, type_participant.",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                },
                "userName": {
                    "description": "",
                    "type": "string"
                },
                "workspaceId": {
                    "description": "",
                    "type": "string"
                },
                "workspaceUserBaseUrl": {
                    "description": "The relative URI that may be used to access a workspace user.",
                    "type": "string"
                },
                "workspaceUserId": {
                    "description": "",
                    "type": "string"
                },
                "workspaceUserUri": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "workspaceUserAuthorization": {
            "description": "Provides properties that describe user authorization to a workspace.",
            "type": "object",
            "properties": {
                "canDelete": {
                    "description": "",
                    "type": "string"
                },
                "canMove": {
                    "description": "",
                    "type": "string"
                },
                "canTransact": {
                    "description": "",
                    "type": "string"
                },
                "canView": {
                    "description": "",
                    "type": "string"
                },
                "created": {
                    "description": "The UTC DateTime when the workspace user authorization was created.",
                    "type": "string"
                },
                "createdById": {
                    "description": "",
                    "type": "string"
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "modified": {
                    "description": "",
                    "type": "string"
                },
                "modifiedById": {
                    "description": "",
                    "type": "string"
                },
                "workspaceUserId": {
                    "description": "",
                    "type": "string"
                },
                "workspaceUserInformation": {
                    "$ref": "#/definitions/workspaceUser",
                    "description": "An object that provides details about the workspace user."
                }
            }
        },
        "zip": {
            "type": "object",
            "properties": {
                "anchorAllowWhiteSpaceInCharacters": {
                    "description": "",
                    "type": "string"
                },
                "anchorAllowWhiteSpaceInCharactersMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters` property is editable."
                },
                "anchorCaseSensitive": {
                    "description": "When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.",
                    "type": "string"
                },
                "anchorCaseSensitiveMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorCaseSensitive` property is editable."
                },
                "anchorHorizontalAlignment": {
                    "description": "Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.",
                    "type": "string"
                },
                "anchorHorizontalAlignmentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorHorizontalAlignment` property is editable."
                },
                "anchorIgnoreIfNotPresent": {
                    "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
                    "type": "string"
                },
                "anchorIgnoreIfNotPresentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorIgnoreIfNotPresent` property is editable."
                },
                "anchorMatchWholeWord": {
                    "description": "When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.",
                    "type": "string"
                },
                "anchorMatchWholeWordMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorMatchWholeWord` property is editable."
                },
                "anchorString": {
                    "description": "Anchor text information for a radio button.",
                    "type": "string"
                },
                "anchorStringMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorString` property is editable."
                },
                "anchorTabProcessorVersion": {
                    "description": "",
                    "type": "string"
                },
                "anchorTabProcessorVersionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "anchorUnits": {
                    "description": "Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.",
                    "type": "string"
                },
                "anchorUnitsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorUnits` property is editable."
                },
                "anchorXOffset": {
                    "description": "Specifies the X axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorXOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorXOffset` property is editable."
                },
                "anchorYOffset": {
                    "description": "Specifies the Y axis location of the tab, in anchorUnits, relative to the anchorString.",
                    "type": "string"
                },
                "anchorYOffsetMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `anchorYOffset` property is editable."
                },
                "bold": {
                    "description": "When set to **true**, the information in the tab is bold.",
                    "type": "string"
                },
                "boldMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `bold` property is editable."
                },
                "caption": {
                    "description": "",
                    "type": "string"
                },
                "captionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": ""
                },
                "concealValueOnDocument": {
                    "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                    "type": "string"
                },
                "concealValueOnDocumentMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `concealValueOnDocument` property is editable."
                },
                "conditionalParentLabel": {
                    "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
                    "type": "string"
                },
                "conditionalParentLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentLabel` property is editable."
                },
                "conditionalParentValue": {
                    "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                    "type": "string"
                },
                "conditionalParentValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `conditionalParentValue` property is editable."
                },
                "customTabId": {
                    "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                    "type": "string"
                },
                "customTabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `customTabId` property is editable."
                },
                "disableAutoSize": {
                    "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                    "type": "string"
                },
                "disableAutoSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `disableAutoSize` property is editable."
                },
                "documentId": {
                    "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                    "type": "string"
                },
                "documentIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `documentId` property is editable."
                },
                "errorDetails": {
                    "$ref": "#/definitions/errorDetails",
                    "description": "Array or errors."
                },
                "font": {
                    "description": "The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.",
                    "type": "string"
                },
                "fontColor": {
                    "description": "The font color used for the information in the tab.\n\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.",
                    "type": "string"
                },
                "fontColorMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontColor` property is editable."
                },
                "fontMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `font` property is editable."
                },
                "fontSize": {
                    "description": "The font size used for the information in the tab.\n\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.",
                    "type": "string"
                },
                "fontSizeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fontSize` property is editable."
                },
                "formOrder": {
                    "description": "",
                    "type": "string"
                },
                "formOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formOrder` property is editable."
                },
                "formPageLabel": {
                    "description": "",
                    "type": "string"
                },
                "formPageLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `formPageLabel` property is editable."
                },
                "formPageNumber": {
                    "description": "",
                    "type": "string"
                },
                "formPageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `fromPageNumber` property is editable."
                },
                "height": {
                    "description": "Height of the tab in pixels.",
                    "type": "string"
                },
                "heightMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `height` property is editable."
                },
                "italic": {
                    "description": "When set to **true**, the information in the tab is italic.",
                    "type": "string"
                },
                "italicMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `italic` property is editable."
                },
                "localePolicy": {
                    "$ref": "#/definitions/localePolicyTab",
                    "description": "Reserved for DocuSign."
                },
                "locked": {
                    "description": "When set to **true**, the signer cannot change the data of the custom tab.",
                    "type": "string"
                },
                "lockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `locked` property is editable."
                },
                "maxLength": {
                    "description": "An optional value that describes the maximum length of the property when the property is a string.",
                    "type": "string"
                },
                "maxLengthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `maxLength` property is editable."
                },
                "mergeField": {
                    "$ref": "#/definitions/mergeField",
                    "description": "Contains the information necessary to map the tab to a field in SalesForce."
                },
                "mergeFieldXml": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "nameMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `name` property is editable. This property is read-only."
                },
                "originalValue": {
                    "description": "The initial value of the tab when it was sent to the recipient. ",
                    "type": "string"
                },
                "originalValueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `originalValue` property is editable."
                },
                "pageNumber": {
                    "description": "Specifies the page number on which the tab is located.",
                    "type": "string"
                },
                "pageNumberMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `pageNumber` property is editable."
                },
                "recipientId": {
                    "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                    "type": "string"
                },
                "recipientIdGuid": {
                    "description": "",
                    "type": "string"
                },
                "recipientIdGuidMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientIdGuid` property is editable."
                },
                "recipientIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `recipientId` property is editable."
                },
                "requireAll": {
                    "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
                    "type": "string"
                },
                "requireAllMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireAll` property is editable."
                },
                "required": {
                    "description": "When set to **true**, the signer is required to fill out this tab",
                    "type": "string"
                },
                "requiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `required` property is editable."
                },
                "requireInitialOnSharedChange": {
                    "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
                    "type": "string"
                },
                "requireInitialOnSharedChangeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `requireInitialOnSharedChange` property is editable."
                },
                "senderRequired": {
                    "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                    "type": "string"
                },
                "senderRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `senderRequired` property is editable."
                },
                "shared": {
                    "description": "When set to **true**, this custom tab is shared.",
                    "type": "string"
                },
                "sharedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `shared` property is editable."
                },
                "shareToRecipients": {
                    "description": "",
                    "type": "string"
                },
                "shareToRecipientsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Reserved for DocuSign."
                },
                "smartContractInformation": {
                    "$ref": "#/definitions/smartContractInformation",
                    "description": "Reserved for DocuSign."
                },
                "source": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                    "type": "string"
                },
                "statusMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `status` property is editable."
                },
                "tabGroupLabels": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tabGroupLabelsMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabGroupLabels` property is editable."
                },
                "tabId": {
                    "description": "The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. \n\n \n",
                    "type": "string"
                },
                "tabIdMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabId` property is editable."
                },
                "tabLabel": {
                    "description": "The label string associated with the tab.",
                    "type": "string"
                },
                "tabLabelMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabLabel` property is editable."
                },
                "tabOrder": {
                    "description": "",
                    "type": "string"
                },
                "tabOrderMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabOrder` property is editable."
                },
                "tabType": {
                    "description": "",
                    "type": "string"
                },
                "tabTypeMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `tabType` property is editable."
                },
                "templateLocked": {
                    "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                    "type": "string"
                },
                "templateLockedMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateLocked` property is editable."
                },
                "templateRequired": {
                    "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
                    "type": "string"
                },
                "templateRequiredMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `templateRequired` property is editable."
                },
                "tooltip": {
                    "description": "",
                    "type": "string"
                },
                "toolTipMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `toolTip` property is editable."
                },
                "underline": {
                    "description": "When set to **true**, the information in the tab is underlined.",
                    "type": "string"
                },
                "underlineMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `underline` property is editable."
                },
                "useDash4": {
                    "description": "",
                    "type": "string"
                },
                "useDash4Metadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `useDash4` property is editable."
                },
                "validationMessage": {
                    "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                    "type": "string"
                },
                "validationMessageMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `validationMessage` property is editable."
                },
                "validationPattern": {
                    "description": "A regular expression used to validate input for the tab.",
                    "type": "string"
                },
                "validationPatternMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `validationPattern` property is editable."
                },
                "value": {
                    "description": "Specifies the value of the tab. ",
                    "type": "string"
                },
                "valueMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `value` property is editable."
                },
                "width": {
                    "description": "Width of the tab in pixels.",
                    "type": "string"
                },
                "widthMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `width` property is editable."
                },
                "xPosition": {
                    "description": "This indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "xPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `xPosition` property is editable."
                },
                "yPosition": {
                    "description": "This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.",
                    "type": "string"
                },
                "yPositionMetadata": {
                    "$ref": "#/definitions/propertyMetadata",
                    "description": "Metadata that indicates whether the `yPosition` property is editable."
                }
            },
            "description": "A tab that allows the recipient to enter a ZIP code. The ZIP\ncode can be five digits or nine digits in the ZIP+4 format.\nThe zip code can be typed with or without dashes. It uses\nthe same parameters as a Text tab, with the validation\nmessage and pattern set for ZIP code information.\n"
        }
    },
    "parameters": {},
    "responses": {},
    "securityDefinitions": {},
    "x-ds-allow-editing": false
}